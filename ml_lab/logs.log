2023-11-05 17:42:14,349:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-05 17:42:14,350:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-05 17:42:14,350:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-05 17:42:14,350:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-05 22:50:48,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-05 22:50:48,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-05 22:50:48,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-05 22:50:48,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-05 23:10:16,985:INFO:PyCaret RegressionExperiment
2023-11-05 23:10:16,985:INFO:Logging name: reg-default-name
2023-11-05 23:10:16,985:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-05 23:10:16,985:INFO:version 3.1.0
2023-11-05 23:10:16,986:INFO:Initializing setup()
2023-11-05 23:10:16,986:INFO:self.USI: 307d
2023-11-05 23:10:16,987:INFO:self._variable_keys: {'n_jobs_param', 'fold_generator', 'USI', 'target_param', 'pipeline', 'logging_param', 'fold_groups_param', 'exp_id', 'transform_target_param', 'X_test', 'seed', 'log_plots_param', '_available_plots', 'memory', 'data', '_ml_usecase', 'X_train', 'y_train', 'gpu_n_jobs_param', 'fold_shuffle_param', 'gpu_param', 'idx', 'exp_name_log', 'y_test', 'y', 'html_param', 'X'}
2023-11-05 23:10:16,987:INFO:Checking environment
2023-11-05 23:10:16,987:INFO:python_version: 3.10.4
2023-11-05 23:10:16,987:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-11-05 23:10:16,987:INFO:machine: AMD64
2023-11-05 23:10:16,987:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-05 23:10:16,991:INFO:Memory: svmem(total=8301043712, available=654925824, percent=92.1, used=7646117888, free=654925824)
2023-11-05 23:10:16,991:INFO:Physical Core: 10
2023-11-05 23:10:16,991:INFO:Logical Core: 12
2023-11-05 23:10:16,991:INFO:Checking libraries
2023-11-05 23:10:16,991:INFO:System:
2023-11-05 23:10:16,991:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-11-05 23:10:16,991:INFO:executable: C:\Users\josec\AppData\Local\Programs\Python\Python310\python.exe
2023-11-05 23:10:16,991:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-05 23:10:16,991:INFO:PyCaret required dependencies:
2023-11-05 23:10:18,671:INFO:                 pip: 22.0.4
2023-11-05 23:10:18,672:INFO:          setuptools: 58.1.0
2023-11-05 23:10:18,672:INFO:             pycaret: 3.1.0
2023-11-05 23:10:18,672:INFO:             IPython: 8.14.0
2023-11-05 23:10:18,672:INFO:          ipywidgets: 8.0.6
2023-11-05 23:10:18,672:INFO:                tqdm: 4.66.1
2023-11-05 23:10:18,672:INFO:               numpy: 1.23.5
2023-11-05 23:10:18,672:INFO:              pandas: 1.5.3
2023-11-05 23:10:18,672:INFO:              jinja2: 3.1.2
2023-11-05 23:10:18,672:INFO:               scipy: 1.10.1
2023-11-05 23:10:18,672:INFO:              joblib: 1.3.2
2023-11-05 23:10:18,672:INFO:             sklearn: 1.2.2
2023-11-05 23:10:18,672:INFO:                pyod: 1.1.1
2023-11-05 23:10:18,672:INFO:            imblearn: 0.11.0
2023-11-05 23:10:18,672:INFO:   category_encoders: 2.6.3
2023-11-05 23:10:18,672:INFO:            lightgbm: 4.1.0
2023-11-05 23:10:18,672:INFO:               numba: 0.58.1
2023-11-05 23:10:18,672:INFO:            requests: 2.31.0
2023-11-05 23:10:18,672:INFO:          matplotlib: 3.7.2
2023-11-05 23:10:18,672:INFO:          scikitplot: 0.3.7
2023-11-05 23:10:18,672:INFO:         yellowbrick: 1.5
2023-11-05 23:10:18,672:INFO:              plotly: 5.16.1
2023-11-05 23:10:18,672:INFO:    plotly-resampler: Not installed
2023-11-05 23:10:18,672:INFO:             kaleido: 0.2.1
2023-11-05 23:10:18,672:INFO:           schemdraw: 0.15
2023-11-05 23:10:18,672:INFO:         statsmodels: 0.14.0
2023-11-05 23:10:18,672:INFO:              sktime: 0.21.1
2023-11-05 23:10:18,672:INFO:               tbats: 1.1.3
2023-11-05 23:10:18,673:INFO:            pmdarima: 2.0.4
2023-11-05 23:10:18,673:INFO:              psutil: 5.9.5
2023-11-05 23:10:18,673:INFO:          markupsafe: 2.1.3
2023-11-05 23:10:18,673:INFO:             pickle5: Not installed
2023-11-05 23:10:18,673:INFO:         cloudpickle: 2.2.1
2023-11-05 23:10:18,673:INFO:         deprecation: 2.1.0
2023-11-05 23:10:18,673:INFO:              xxhash: 3.4.1
2023-11-05 23:10:18,673:INFO:           wurlitzer: Not installed
2023-11-05 23:10:18,673:INFO:PyCaret optional dependencies:
2023-11-05 23:10:20,686:INFO:                shap: 0.43.0
2023-11-05 23:10:20,686:INFO:           interpret: 0.4.4
2023-11-05 23:10:20,687:INFO:                umap: 0.5.4
2023-11-05 23:10:20,687:INFO:     ydata_profiling: 4.6.0
2023-11-05 23:10:20,687:INFO:  explainerdashboard: 0.4.3
2023-11-05 23:10:20,687:INFO:             autoviz: Not installed
2023-11-05 23:10:20,687:INFO:           fairlearn: 0.7.0
2023-11-05 23:10:20,687:INFO:          deepchecks: Not installed
2023-11-05 23:10:20,687:INFO:             xgboost: 2.0.0
2023-11-05 23:10:20,687:INFO:            catboost: 1.2.2
2023-11-05 23:10:20,687:INFO:              kmodes: 0.12.2
2023-11-05 23:10:20,687:INFO:             mlxtend: 0.23.0
2023-11-05 23:10:20,687:INFO:       statsforecast: 1.5.0
2023-11-05 23:10:20,687:INFO:        tune_sklearn: 0.4.6
2023-11-05 23:10:20,687:INFO:                 ray: 2.8.0
2023-11-05 23:10:20,687:INFO:            hyperopt: 0.2.7
2023-11-05 23:10:20,687:INFO:              optuna: 3.4.0
2023-11-05 23:10:20,687:INFO:               skopt: 0.9.0
2023-11-05 23:10:20,687:INFO:              mlflow: 1.30.1
2023-11-05 23:10:20,687:INFO:              gradio: 3.50.2
2023-11-05 23:10:20,687:INFO:             fastapi: 0.104.0
2023-11-05 23:10:20,687:INFO:             uvicorn: 0.23.2
2023-11-05 23:10:20,687:INFO:              m2cgen: 0.10.0
2023-11-05 23:10:20,687:INFO:           evidently: 0.2.8
2023-11-05 23:10:20,687:INFO:               fugue: 0.8.6
2023-11-05 23:10:20,687:INFO:           streamlit: 1.26.0
2023-11-05 23:10:20,687:INFO:             prophet: Not installed
2023-11-05 23:10:20,687:INFO:None
2023-11-05 23:10:20,687:INFO:Set up data.
2023-11-05 23:10:20,697:INFO:Set up folding strategy.
2023-11-05 23:10:20,697:INFO:Set up train/test split.
2023-11-05 23:10:20,702:INFO:Set up index.
2023-11-05 23:10:20,703:INFO:Assigning column types.
2023-11-05 23:10:20,706:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-05 23:10:20,706:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-05 23:10:20,710:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-05 23:10:20,713:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-05 23:10:20,762:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:10:20,797:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:10:20,798:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:10:20,800:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:10:21,396:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,400:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,404:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,455:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,488:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,489:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:10:21,491:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:10:21,492:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-05 23:10:21,495:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,498:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,544:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,577:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,577:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:10:21,580:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:10:21,584:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,589:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,636:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,693:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,693:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:10:21,695:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:10:21,695:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-05 23:10:21,702:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,750:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,810:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,811:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:10:21,813:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:10:21,819:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,873:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,907:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:10:21,908:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:10:21,910:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:10:21,910:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-05 23:10:21,972:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:10:22,015:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:10:22,016:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:10:22,018:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:10:22,072:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:10:22,106:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:10:22,107:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:10:22,109:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:10:22,110:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-05 23:10:22,162:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:10:22,196:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:10:22,198:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:10:22,250:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:10:22,332:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:10:22,334:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:10:22,337:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-05 23:10:22,423:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:10:22,425:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:10:22,511:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:10:22,513:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:10:22,613:INFO:Preparing preprocessing pipeline...
2023-11-05 23:10:22,613:INFO:Set up simple imputation.
2023-11-05 23:10:22,621:INFO:Set up encoding of ordinal features.
2023-11-05 23:10:22,625:INFO:Set up encoding of categorical features.
2023-11-05 23:10:22,625:INFO:Set up removing multicollinearity.
2023-11-05 23:10:22,625:INFO:Set up feature normalization.
2023-11-05 23:10:23,135:INFO:Finished creating preprocessing pipeline.
2023-11-05 23:10:23,179:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\josec\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer...
                 TransformerWrapper(include=['season', 'hr', 'weekday',
                                             'weathersit', 'day'],
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler()))])
2023-11-05 23:10:23,179:INFO:Creating final display dataframe.
2023-11-05 23:10:23,762:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target               cnt
2                   Target type        Regression
3           Original data shape       (16510, 12)
4        Transformed data shape       (16510, 77)
5   Transformed train set shape       (13208, 77)
6    Transformed test set shape        (3302, 77)
7              Ordinal features                 2
8              Numeric features                 4
9          Categorical features                 7
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.9
18                    Normalize              True
19             Normalize method            robust
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              307d
2023-11-05 23:10:23,890:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:10:23,893:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:10:24,005:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:10:24,007:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:10:24,009:INFO:setup() successfully completed in 7.22s...............
2023-11-05 23:10:24,009:INFO:Initializing compare_models()
2023-11-05 23:10:24,009:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, include=None, fold=5, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-05 23:10:24,009:INFO:Checking exceptions
2023-11-05 23:10:24,012:INFO:Preparing display monitor
2023-11-05 23:10:24,090:INFO:Initializing Linear Regression
2023-11-05 23:10:24,090:INFO:Total runtime is 0.0 minutes
2023-11-05 23:10:24,098:INFO:SubProcess create_model() called ==================================
2023-11-05 23:10:24,098:INFO:Initializing create_model()
2023-11-05 23:10:24,099:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=lr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:10:24,099:INFO:Checking exceptions
2023-11-05 23:10:24,099:INFO:Importing libraries
2023-11-05 23:10:24,099:INFO:Copying training dataset
2023-11-05 23:10:24,111:INFO:Defining folds
2023-11-05 23:10:24,111:INFO:Declaring metric variables
2023-11-05 23:10:24,118:INFO:Importing untrained model
2023-11-05 23:10:24,123:INFO:Linear Regression Imported successfully
2023-11-05 23:10:24,135:INFO:Starting cross validation
2023-11-05 23:10:24,158:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:10:41,023:INFO:Calculating mean and std
2023-11-05 23:10:41,023:INFO:Creating metrics dataframe
2023-11-05 23:10:41,030:INFO:Uploading results into container
2023-11-05 23:10:41,038:INFO:Uploading model into container now
2023-11-05 23:10:41,046:INFO:_master_model_container: 1
2023-11-05 23:10:41,046:INFO:_display_container: 2
2023-11-05 23:10:41,046:INFO:LinearRegression(n_jobs=-1)
2023-11-05 23:10:41,046:INFO:create_model() successfully completed......................................
2023-11-05 23:10:41,331:INFO:SubProcess create_model() end ==================================
2023-11-05 23:10:41,331:INFO:Creating metrics dataframe
2023-11-05 23:10:41,347:INFO:Initializing Lasso Regression
2023-11-05 23:10:41,347:INFO:Total runtime is 0.2876120408376058 minutes
2023-11-05 23:10:41,347:INFO:SubProcess create_model() called ==================================
2023-11-05 23:10:41,347:INFO:Initializing create_model()
2023-11-05 23:10:41,347:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=lasso, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:10:41,347:INFO:Checking exceptions
2023-11-05 23:10:41,347:INFO:Importing libraries
2023-11-05 23:10:41,347:INFO:Copying training dataset
2023-11-05 23:10:41,362:INFO:Defining folds
2023-11-05 23:10:41,362:INFO:Declaring metric variables
2023-11-05 23:10:41,378:INFO:Importing untrained model
2023-11-05 23:10:41,383:INFO:Lasso Regression Imported successfully
2023-11-05 23:10:41,395:INFO:Starting cross validation
2023-11-05 23:10:41,395:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:10:59,240:INFO:Calculating mean and std
2023-11-05 23:10:59,240:INFO:Creating metrics dataframe
2023-11-05 23:10:59,254:INFO:Uploading results into container
2023-11-05 23:10:59,256:INFO:Uploading model into container now
2023-11-05 23:10:59,257:INFO:_master_model_container: 2
2023-11-05 23:10:59,257:INFO:_display_container: 2
2023-11-05 23:10:59,258:INFO:Lasso(random_state=123)
2023-11-05 23:10:59,258:INFO:create_model() successfully completed......................................
2023-11-05 23:10:59,497:INFO:SubProcess create_model() end ==================================
2023-11-05 23:10:59,497:INFO:Creating metrics dataframe
2023-11-05 23:10:59,556:INFO:Initializing Ridge Regression
2023-11-05 23:10:59,556:INFO:Total runtime is 0.5910945415496827 minutes
2023-11-05 23:10:59,573:INFO:SubProcess create_model() called ==================================
2023-11-05 23:10:59,573:INFO:Initializing create_model()
2023-11-05 23:10:59,573:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=ridge, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:10:59,573:INFO:Checking exceptions
2023-11-05 23:10:59,573:INFO:Importing libraries
2023-11-05 23:10:59,573:INFO:Copying training dataset
2023-11-05 23:10:59,635:INFO:Defining folds
2023-11-05 23:10:59,639:INFO:Declaring metric variables
2023-11-05 23:10:59,643:INFO:Importing untrained model
2023-11-05 23:10:59,672:INFO:Ridge Regression Imported successfully
2023-11-05 23:10:59,693:INFO:Starting cross validation
2023-11-05 23:10:59,701:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:11:09,818:INFO:Calculating mean and std
2023-11-05 23:11:09,821:INFO:Creating metrics dataframe
2023-11-05 23:11:09,826:INFO:Uploading results into container
2023-11-05 23:11:09,826:INFO:Uploading model into container now
2023-11-05 23:11:09,826:INFO:_master_model_container: 3
2023-11-05 23:11:09,826:INFO:_display_container: 2
2023-11-05 23:11:09,826:INFO:Ridge(random_state=123)
2023-11-05 23:11:09,826:INFO:create_model() successfully completed......................................
2023-11-05 23:11:10,063:INFO:SubProcess create_model() end ==================================
2023-11-05 23:11:10,079:INFO:Creating metrics dataframe
2023-11-05 23:11:10,102:INFO:Initializing Elastic Net
2023-11-05 23:11:10,102:INFO:Total runtime is 0.7668679436047873 minutes
2023-11-05 23:11:10,109:INFO:SubProcess create_model() called ==================================
2023-11-05 23:11:10,110:INFO:Initializing create_model()
2023-11-05 23:11:10,110:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=en, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:11:10,110:INFO:Checking exceptions
2023-11-05 23:11:10,110:INFO:Importing libraries
2023-11-05 23:11:10,110:INFO:Copying training dataset
2023-11-05 23:11:10,122:INFO:Defining folds
2023-11-05 23:11:10,122:INFO:Declaring metric variables
2023-11-05 23:11:10,126:INFO:Importing untrained model
2023-11-05 23:11:10,142:INFO:Elastic Net Imported successfully
2023-11-05 23:11:10,173:INFO:Starting cross validation
2023-11-05 23:11:10,173:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:11:13,472:INFO:Calculating mean and std
2023-11-05 23:11:13,472:INFO:Creating metrics dataframe
2023-11-05 23:11:13,472:INFO:Uploading results into container
2023-11-05 23:11:13,472:INFO:Uploading model into container now
2023-11-05 23:11:13,482:INFO:_master_model_container: 4
2023-11-05 23:11:13,482:INFO:_display_container: 2
2023-11-05 23:11:13,482:INFO:ElasticNet(random_state=123)
2023-11-05 23:11:13,482:INFO:create_model() successfully completed......................................
2023-11-05 23:11:13,703:INFO:SubProcess create_model() end ==================================
2023-11-05 23:11:13,703:INFO:Creating metrics dataframe
2023-11-05 23:11:13,734:INFO:Initializing Least Angle Regression
2023-11-05 23:11:13,734:INFO:Total runtime is 0.8274081945419313 minutes
2023-11-05 23:11:13,750:INFO:SubProcess create_model() called ==================================
2023-11-05 23:11:13,750:INFO:Initializing create_model()
2023-11-05 23:11:13,750:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=lar, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:11:13,750:INFO:Checking exceptions
2023-11-05 23:11:13,750:INFO:Importing libraries
2023-11-05 23:11:13,750:INFO:Copying training dataset
2023-11-05 23:11:13,766:INFO:Defining folds
2023-11-05 23:11:13,766:INFO:Declaring metric variables
2023-11-05 23:11:13,781:INFO:Importing untrained model
2023-11-05 23:11:13,797:INFO:Least Angle Regression Imported successfully
2023-11-05 23:11:13,813:INFO:Starting cross validation
2023-11-05 23:11:13,829:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:11:16,946:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 69 iterations, i.e. alpha=4.775e-03, with an active set of 68 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-11-05 23:11:17,073:INFO:Calculating mean and std
2023-11-05 23:11:17,073:INFO:Creating metrics dataframe
2023-11-05 23:11:17,073:INFO:Uploading results into container
2023-11-05 23:11:17,073:INFO:Uploading model into container now
2023-11-05 23:11:17,073:INFO:_master_model_container: 5
2023-11-05 23:11:17,073:INFO:_display_container: 2
2023-11-05 23:11:17,118:INFO:Lars(random_state=123)
2023-11-05 23:11:17,119:INFO:create_model() successfully completed......................................
2023-11-05 23:11:17,296:INFO:SubProcess create_model() end ==================================
2023-11-05 23:11:17,296:INFO:Creating metrics dataframe
2023-11-05 23:11:17,328:INFO:Initializing Lasso Least Angle Regression
2023-11-05 23:11:17,328:INFO:Total runtime is 0.8872962673505148 minutes
2023-11-05 23:11:17,345:INFO:SubProcess create_model() called ==================================
2023-11-05 23:11:17,345:INFO:Initializing create_model()
2023-11-05 23:11:17,345:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=llar, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:11:17,345:INFO:Checking exceptions
2023-11-05 23:11:17,345:INFO:Importing libraries
2023-11-05 23:11:17,345:INFO:Copying training dataset
2023-11-05 23:11:17,366:INFO:Defining folds
2023-11-05 23:11:17,366:INFO:Declaring metric variables
2023-11-05 23:11:17,375:INFO:Importing untrained model
2023-11-05 23:11:17,389:INFO:Lasso Least Angle Regression Imported successfully
2023-11-05 23:11:17,395:INFO:Starting cross validation
2023-11-05 23:11:17,407:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:11:20,932:INFO:Calculating mean and std
2023-11-05 23:11:20,999:INFO:Creating metrics dataframe
2023-11-05 23:11:21,045:INFO:Uploading results into container
2023-11-05 23:11:21,045:INFO:Uploading model into container now
2023-11-05 23:11:21,045:INFO:_master_model_container: 6
2023-11-05 23:11:21,045:INFO:_display_container: 2
2023-11-05 23:11:21,045:INFO:LassoLars(random_state=123)
2023-11-05 23:11:21,045:INFO:create_model() successfully completed......................................
2023-11-05 23:11:21,299:INFO:SubProcess create_model() end ==================================
2023-11-05 23:11:21,299:INFO:Creating metrics dataframe
2023-11-05 23:11:21,327:INFO:Initializing Orthogonal Matching Pursuit
2023-11-05 23:11:21,327:INFO:Total runtime is 0.9539551377296449 minutes
2023-11-05 23:11:21,343:INFO:SubProcess create_model() called ==================================
2023-11-05 23:11:21,343:INFO:Initializing create_model()
2023-11-05 23:11:21,343:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=omp, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:11:21,343:INFO:Checking exceptions
2023-11-05 23:11:21,343:INFO:Importing libraries
2023-11-05 23:11:21,343:INFO:Copying training dataset
2023-11-05 23:11:21,358:INFO:Defining folds
2023-11-05 23:11:21,358:INFO:Declaring metric variables
2023-11-05 23:11:21,374:INFO:Importing untrained model
2023-11-05 23:11:21,390:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-05 23:11:21,405:INFO:Starting cross validation
2023-11-05 23:11:21,405:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:11:24,701:INFO:Calculating mean and std
2023-11-05 23:11:24,704:INFO:Creating metrics dataframe
2023-11-05 23:11:24,709:INFO:Uploading results into container
2023-11-05 23:11:24,709:INFO:Uploading model into container now
2023-11-05 23:11:24,709:INFO:_master_model_container: 7
2023-11-05 23:11:24,709:INFO:_display_container: 2
2023-11-05 23:11:24,709:INFO:OrthogonalMatchingPursuit()
2023-11-05 23:11:24,709:INFO:create_model() successfully completed......................................
2023-11-05 23:11:24,972:INFO:SubProcess create_model() end ==================================
2023-11-05 23:11:24,972:INFO:Creating metrics dataframe
2023-11-05 23:11:24,993:INFO:Initializing Bayesian Ridge
2023-11-05 23:11:24,993:INFO:Total runtime is 1.0150500615437827 minutes
2023-11-05 23:11:25,009:INFO:SubProcess create_model() called ==================================
2023-11-05 23:11:25,009:INFO:Initializing create_model()
2023-11-05 23:11:25,009:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=br, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:11:25,009:INFO:Checking exceptions
2023-11-05 23:11:25,009:INFO:Importing libraries
2023-11-05 23:11:25,009:INFO:Copying training dataset
2023-11-05 23:11:25,039:INFO:Defining folds
2023-11-05 23:11:25,042:INFO:Declaring metric variables
2023-11-05 23:11:25,050:INFO:Importing untrained model
2023-11-05 23:11:25,058:INFO:Bayesian Ridge Imported successfully
2023-11-05 23:11:25,099:INFO:Starting cross validation
2023-11-05 23:11:25,105:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:11:29,141:INFO:Calculating mean and std
2023-11-05 23:11:29,141:INFO:Creating metrics dataframe
2023-11-05 23:11:29,141:INFO:Uploading results into container
2023-11-05 23:11:29,141:INFO:Uploading model into container now
2023-11-05 23:11:29,141:INFO:_master_model_container: 8
2023-11-05 23:11:29,141:INFO:_display_container: 2
2023-11-05 23:11:29,141:INFO:BayesianRidge()
2023-11-05 23:11:29,141:INFO:create_model() successfully completed......................................
2023-11-05 23:11:29,349:INFO:SubProcess create_model() end ==================================
2023-11-05 23:11:29,349:INFO:Creating metrics dataframe
2023-11-05 23:11:29,379:INFO:Initializing Passive Aggressive Regressor
2023-11-05 23:11:29,379:INFO:Total runtime is 1.0881583293279014 minutes
2023-11-05 23:11:29,388:INFO:SubProcess create_model() called ==================================
2023-11-05 23:11:29,388:INFO:Initializing create_model()
2023-11-05 23:11:29,388:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=par, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:11:29,388:INFO:Checking exceptions
2023-11-05 23:11:29,388:INFO:Importing libraries
2023-11-05 23:11:29,388:INFO:Copying training dataset
2023-11-05 23:11:29,396:INFO:Defining folds
2023-11-05 23:11:29,396:INFO:Declaring metric variables
2023-11-05 23:11:29,411:INFO:Importing untrained model
2023-11-05 23:11:29,411:INFO:Passive Aggressive Regressor Imported successfully
2023-11-05 23:11:29,432:INFO:Starting cross validation
2023-11-05 23:11:29,432:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:11:32,146:INFO:Calculating mean and std
2023-11-05 23:11:32,146:INFO:Creating metrics dataframe
2023-11-05 23:11:32,162:INFO:Uploading results into container
2023-11-05 23:11:32,162:INFO:Uploading model into container now
2023-11-05 23:11:32,162:INFO:_master_model_container: 9
2023-11-05 23:11:32,162:INFO:_display_container: 2
2023-11-05 23:11:32,162:INFO:PassiveAggressiveRegressor(random_state=123)
2023-11-05 23:11:32,178:INFO:create_model() successfully completed......................................
2023-11-05 23:11:32,413:INFO:SubProcess create_model() end ==================================
2023-11-05 23:11:32,413:INFO:Creating metrics dataframe
2023-11-05 23:11:32,446:INFO:Initializing Huber Regressor
2023-11-05 23:11:32,446:INFO:Total runtime is 1.1392717083295187 minutes
2023-11-05 23:11:32,461:INFO:SubProcess create_model() called ==================================
2023-11-05 23:11:32,461:INFO:Initializing create_model()
2023-11-05 23:11:32,461:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=huber, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:11:32,461:INFO:Checking exceptions
2023-11-05 23:11:32,461:INFO:Importing libraries
2023-11-05 23:11:32,461:INFO:Copying training dataset
2023-11-05 23:11:32,477:INFO:Defining folds
2023-11-05 23:11:32,477:INFO:Declaring metric variables
2023-11-05 23:11:32,482:INFO:Importing untrained model
2023-11-05 23:11:32,493:INFO:Huber Regressor Imported successfully
2023-11-05 23:11:32,513:INFO:Starting cross validation
2023-11-05 23:11:32,513:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:11:35,816:INFO:Calculating mean and std
2023-11-05 23:11:35,818:INFO:Creating metrics dataframe
2023-11-05 23:11:35,825:INFO:Uploading results into container
2023-11-05 23:11:35,827:INFO:Uploading model into container now
2023-11-05 23:11:35,829:INFO:_master_model_container: 10
2023-11-05 23:11:35,829:INFO:_display_container: 2
2023-11-05 23:11:35,830:INFO:HuberRegressor()
2023-11-05 23:11:35,830:INFO:create_model() successfully completed......................................
2023-11-05 23:11:36,039:INFO:SubProcess create_model() end ==================================
2023-11-05 23:11:36,039:INFO:Creating metrics dataframe
2023-11-05 23:11:36,064:INFO:Initializing K Neighbors Regressor
2023-11-05 23:11:36,066:INFO:Total runtime is 1.199598761399587 minutes
2023-11-05 23:11:36,075:INFO:SubProcess create_model() called ==================================
2023-11-05 23:11:36,076:INFO:Initializing create_model()
2023-11-05 23:11:36,076:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=knn, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:11:36,076:INFO:Checking exceptions
2023-11-05 23:11:36,076:INFO:Importing libraries
2023-11-05 23:11:36,076:INFO:Copying training dataset
2023-11-05 23:11:36,093:INFO:Defining folds
2023-11-05 23:11:36,094:INFO:Declaring metric variables
2023-11-05 23:11:36,102:INFO:Importing untrained model
2023-11-05 23:11:36,108:INFO:K Neighbors Regressor Imported successfully
2023-11-05 23:11:36,118:INFO:Starting cross validation
2023-11-05 23:11:36,118:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:11:37,805:INFO:Calculating mean and std
2023-11-05 23:11:37,806:INFO:Creating metrics dataframe
2023-11-05 23:11:37,811:INFO:Uploading results into container
2023-11-05 23:11:37,811:INFO:Uploading model into container now
2023-11-05 23:11:37,812:INFO:_master_model_container: 11
2023-11-05 23:11:37,812:INFO:_display_container: 2
2023-11-05 23:11:37,812:INFO:KNeighborsRegressor(n_jobs=-1)
2023-11-05 23:11:37,812:INFO:create_model() successfully completed......................................
2023-11-05 23:11:37,979:INFO:SubProcess create_model() end ==================================
2023-11-05 23:11:37,980:INFO:Creating metrics dataframe
2023-11-05 23:11:38,007:INFO:Initializing Decision Tree Regressor
2023-11-05 23:11:38,007:INFO:Total runtime is 1.2319600939750672 minutes
2023-11-05 23:11:38,013:INFO:SubProcess create_model() called ==================================
2023-11-05 23:11:38,014:INFO:Initializing create_model()
2023-11-05 23:11:38,014:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=dt, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:11:38,014:INFO:Checking exceptions
2023-11-05 23:11:38,014:INFO:Importing libraries
2023-11-05 23:11:38,020:INFO:Copying training dataset
2023-11-05 23:11:38,034:INFO:Defining folds
2023-11-05 23:11:38,034:INFO:Declaring metric variables
2023-11-05 23:11:38,048:INFO:Importing untrained model
2023-11-05 23:11:38,061:INFO:Decision Tree Regressor Imported successfully
2023-11-05 23:11:38,072:INFO:Starting cross validation
2023-11-05 23:11:38,075:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:11:39,156:INFO:Calculating mean and std
2023-11-05 23:11:39,157:INFO:Creating metrics dataframe
2023-11-05 23:11:39,161:INFO:Uploading results into container
2023-11-05 23:11:39,162:INFO:Uploading model into container now
2023-11-05 23:11:39,162:INFO:_master_model_container: 12
2023-11-05 23:11:39,162:INFO:_display_container: 2
2023-11-05 23:11:39,163:INFO:DecisionTreeRegressor(random_state=123)
2023-11-05 23:11:39,163:INFO:create_model() successfully completed......................................
2023-11-05 23:11:39,306:INFO:SubProcess create_model() end ==================================
2023-11-05 23:11:39,306:INFO:Creating metrics dataframe
2023-11-05 23:11:39,361:INFO:Initializing Random Forest Regressor
2023-11-05 23:11:39,361:INFO:Total runtime is 1.254523519674937 minutes
2023-11-05 23:11:39,368:INFO:SubProcess create_model() called ==================================
2023-11-05 23:11:39,369:INFO:Initializing create_model()
2023-11-05 23:11:39,369:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=rf, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:11:39,369:INFO:Checking exceptions
2023-11-05 23:11:39,369:INFO:Importing libraries
2023-11-05 23:11:39,369:INFO:Copying training dataset
2023-11-05 23:11:39,392:INFO:Defining folds
2023-11-05 23:11:39,393:INFO:Declaring metric variables
2023-11-05 23:11:39,397:INFO:Importing untrained model
2023-11-05 23:11:39,402:INFO:Random Forest Regressor Imported successfully
2023-11-05 23:11:39,409:INFO:Starting cross validation
2023-11-05 23:11:39,411:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:11:47,344:INFO:Calculating mean and std
2023-11-05 23:11:47,346:INFO:Creating metrics dataframe
2023-11-05 23:11:47,353:INFO:Uploading results into container
2023-11-05 23:11:47,354:INFO:Uploading model into container now
2023-11-05 23:11:47,355:INFO:_master_model_container: 13
2023-11-05 23:11:47,355:INFO:_display_container: 2
2023-11-05 23:11:47,356:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-11-05 23:11:47,356:INFO:create_model() successfully completed......................................
2023-11-05 23:11:47,506:INFO:SubProcess create_model() end ==================================
2023-11-05 23:11:47,506:INFO:Creating metrics dataframe
2023-11-05 23:11:47,520:INFO:Initializing Extra Trees Regressor
2023-11-05 23:11:47,521:INFO:Total runtime is 1.3905267556508383 minutes
2023-11-05 23:11:47,527:INFO:SubProcess create_model() called ==================================
2023-11-05 23:11:47,527:INFO:Initializing create_model()
2023-11-05 23:11:47,527:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=et, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:11:47,527:INFO:Checking exceptions
2023-11-05 23:11:47,527:INFO:Importing libraries
2023-11-05 23:11:47,528:INFO:Copying training dataset
2023-11-05 23:11:47,537:INFO:Defining folds
2023-11-05 23:11:47,537:INFO:Declaring metric variables
2023-11-05 23:11:47,541:INFO:Importing untrained model
2023-11-05 23:11:47,548:INFO:Extra Trees Regressor Imported successfully
2023-11-05 23:11:47,558:INFO:Starting cross validation
2023-11-05 23:11:47,561:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:11:54,929:INFO:Calculating mean and std
2023-11-05 23:11:54,931:INFO:Creating metrics dataframe
2023-11-05 23:11:54,934:INFO:Uploading results into container
2023-11-05 23:11:54,934:INFO:Uploading model into container now
2023-11-05 23:11:54,935:INFO:_master_model_container: 14
2023-11-05 23:11:54,935:INFO:_display_container: 2
2023-11-05 23:11:54,936:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-11-05 23:11:54,936:INFO:create_model() successfully completed......................................
2023-11-05 23:11:55,101:INFO:SubProcess create_model() end ==================================
2023-11-05 23:11:55,101:INFO:Creating metrics dataframe
2023-11-05 23:11:55,126:INFO:Initializing AdaBoost Regressor
2023-11-05 23:11:55,127:INFO:Total runtime is 1.5172827601432801 minutes
2023-11-05 23:11:55,135:INFO:SubProcess create_model() called ==================================
2023-11-05 23:11:55,136:INFO:Initializing create_model()
2023-11-05 23:11:55,136:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=ada, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:11:55,136:INFO:Checking exceptions
2023-11-05 23:11:55,137:INFO:Importing libraries
2023-11-05 23:11:55,137:INFO:Copying training dataset
2023-11-05 23:11:55,144:INFO:Defining folds
2023-11-05 23:11:55,144:INFO:Declaring metric variables
2023-11-05 23:11:55,148:INFO:Importing untrained model
2023-11-05 23:11:55,155:INFO:AdaBoost Regressor Imported successfully
2023-11-05 23:11:55,165:INFO:Starting cross validation
2023-11-05 23:11:55,167:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:11:57,921:INFO:Calculating mean and std
2023-11-05 23:11:57,922:INFO:Creating metrics dataframe
2023-11-05 23:11:57,960:INFO:Uploading results into container
2023-11-05 23:11:57,962:INFO:Uploading model into container now
2023-11-05 23:11:57,963:INFO:_master_model_container: 15
2023-11-05 23:11:57,963:INFO:_display_container: 2
2023-11-05 23:11:57,971:INFO:AdaBoostRegressor(random_state=123)
2023-11-05 23:11:57,971:INFO:create_model() successfully completed......................................
2023-11-05 23:11:58,114:INFO:SubProcess create_model() end ==================================
2023-11-05 23:11:58,114:INFO:Creating metrics dataframe
2023-11-05 23:11:58,127:INFO:Initializing Gradient Boosting Regressor
2023-11-05 23:11:58,128:INFO:Total runtime is 1.5673066178957622 minutes
2023-11-05 23:11:58,131:INFO:SubProcess create_model() called ==================================
2023-11-05 23:11:58,132:INFO:Initializing create_model()
2023-11-05 23:11:58,133:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=gbr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:11:58,133:INFO:Checking exceptions
2023-11-05 23:11:58,133:INFO:Importing libraries
2023-11-05 23:11:58,133:INFO:Copying training dataset
2023-11-05 23:11:58,139:INFO:Defining folds
2023-11-05 23:11:58,140:INFO:Declaring metric variables
2023-11-05 23:11:58,149:INFO:Importing untrained model
2023-11-05 23:11:58,164:INFO:Gradient Boosting Regressor Imported successfully
2023-11-05 23:11:58,172:INFO:Starting cross validation
2023-11-05 23:11:58,174:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:12:01,097:INFO:Calculating mean and std
2023-11-05 23:12:01,098:INFO:Creating metrics dataframe
2023-11-05 23:12:01,101:INFO:Uploading results into container
2023-11-05 23:12:01,102:INFO:Uploading model into container now
2023-11-05 23:12:01,103:INFO:_master_model_container: 16
2023-11-05 23:12:01,103:INFO:_display_container: 2
2023-11-05 23:12:01,103:INFO:GradientBoostingRegressor(random_state=123)
2023-11-05 23:12:01,104:INFO:create_model() successfully completed......................................
2023-11-05 23:12:01,238:INFO:SubProcess create_model() end ==================================
2023-11-05 23:12:01,238:INFO:Creating metrics dataframe
2023-11-05 23:12:01,257:INFO:Initializing Extreme Gradient Boosting
2023-11-05 23:12:01,257:INFO:Total runtime is 1.6194491704305014 minutes
2023-11-05 23:12:01,260:INFO:SubProcess create_model() called ==================================
2023-11-05 23:12:01,260:INFO:Initializing create_model()
2023-11-05 23:12:01,260:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=xgboost, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:12:01,260:INFO:Checking exceptions
2023-11-05 23:12:01,260:INFO:Importing libraries
2023-11-05 23:12:01,261:INFO:Copying training dataset
2023-11-05 23:12:01,266:INFO:Defining folds
2023-11-05 23:12:01,266:INFO:Declaring metric variables
2023-11-05 23:12:01,287:INFO:Importing untrained model
2023-11-05 23:12:01,297:INFO:Extreme Gradient Boosting Imported successfully
2023-11-05 23:12:01,313:INFO:Starting cross validation
2023-11-05 23:12:01,315:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:12:02,621:INFO:Calculating mean and std
2023-11-05 23:12:02,622:INFO:Creating metrics dataframe
2023-11-05 23:12:02,624:INFO:Uploading results into container
2023-11-05 23:12:02,625:INFO:Uploading model into container now
2023-11-05 23:12:02,625:INFO:_master_model_container: 17
2023-11-05 23:12:02,625:INFO:_display_container: 2
2023-11-05 23:12:02,627:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=123, ...)
2023-11-05 23:12:02,627:INFO:create_model() successfully completed......................................
2023-11-05 23:12:02,751:INFO:SubProcess create_model() end ==================================
2023-11-05 23:12:02,751:INFO:Creating metrics dataframe
2023-11-05 23:12:02,803:INFO:Initializing Light Gradient Boosting Machine
2023-11-05 23:12:02,803:INFO:Total runtime is 1.64521248737971 minutes
2023-11-05 23:12:02,810:INFO:SubProcess create_model() called ==================================
2023-11-05 23:12:02,810:INFO:Initializing create_model()
2023-11-05 23:12:02,810:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:12:02,810:INFO:Checking exceptions
2023-11-05 23:12:02,811:INFO:Importing libraries
2023-11-05 23:12:02,811:INFO:Copying training dataset
2023-11-05 23:12:02,816:INFO:Defining folds
2023-11-05 23:12:02,816:INFO:Declaring metric variables
2023-11-05 23:12:02,823:INFO:Importing untrained model
2023-11-05 23:12:02,830:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-05 23:12:02,844:INFO:Starting cross validation
2023-11-05 23:12:02,846:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:12:04,269:INFO:Calculating mean and std
2023-11-05 23:12:04,270:INFO:Creating metrics dataframe
2023-11-05 23:12:04,275:INFO:Uploading results into container
2023-11-05 23:12:04,276:INFO:Uploading model into container now
2023-11-05 23:12:04,277:INFO:_master_model_container: 18
2023-11-05 23:12:04,277:INFO:_display_container: 2
2023-11-05 23:12:04,278:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2023-11-05 23:12:04,278:INFO:create_model() successfully completed......................................
2023-11-05 23:12:04,431:INFO:SubProcess create_model() end ==================================
2023-11-05 23:12:04,431:INFO:Creating metrics dataframe
2023-11-05 23:12:04,445:INFO:Initializing CatBoost Regressor
2023-11-05 23:12:04,445:INFO:Total runtime is 1.6725824753443401 minutes
2023-11-05 23:12:04,448:INFO:SubProcess create_model() called ==================================
2023-11-05 23:12:04,448:INFO:Initializing create_model()
2023-11-05 23:12:04,448:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=catboost, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:12:04,448:INFO:Checking exceptions
2023-11-05 23:12:04,448:INFO:Importing libraries
2023-11-05 23:12:04,449:INFO:Copying training dataset
2023-11-05 23:12:04,453:INFO:Defining folds
2023-11-05 23:12:04,454:INFO:Declaring metric variables
2023-11-05 23:12:04,457:INFO:Importing untrained model
2023-11-05 23:12:04,472:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:12:04,478:INFO:Starting cross validation
2023-11-05 23:12:04,482:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:12:11,141:INFO:Calculating mean and std
2023-11-05 23:12:11,142:INFO:Creating metrics dataframe
2023-11-05 23:12:11,145:INFO:Uploading results into container
2023-11-05 23:12:11,145:INFO:Uploading model into container now
2023-11-05 23:12:11,146:INFO:_master_model_container: 19
2023-11-05 23:12:11,146:INFO:_display_container: 2
2023-11-05 23:12:11,146:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0956C7F0>
2023-11-05 23:12:11,146:INFO:create_model() successfully completed......................................
2023-11-05 23:12:11,295:INFO:SubProcess create_model() end ==================================
2023-11-05 23:12:11,295:INFO:Creating metrics dataframe
2023-11-05 23:12:11,308:INFO:Initializing Dummy Regressor
2023-11-05 23:12:11,308:INFO:Total runtime is 1.7869768937428794 minutes
2023-11-05 23:12:11,312:INFO:SubProcess create_model() called ==================================
2023-11-05 23:12:11,312:INFO:Initializing create_model()
2023-11-05 23:12:11,312:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=dummy, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE08DA2CB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:12:11,312:INFO:Checking exceptions
2023-11-05 23:12:11,312:INFO:Importing libraries
2023-11-05 23:12:11,312:INFO:Copying training dataset
2023-11-05 23:12:11,317:INFO:Defining folds
2023-11-05 23:12:11,317:INFO:Declaring metric variables
2023-11-05 23:12:11,321:INFO:Importing untrained model
2023-11-05 23:12:11,327:INFO:Dummy Regressor Imported successfully
2023-11-05 23:12:11,335:INFO:Starting cross validation
2023-11-05 23:12:11,337:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:12:12,086:INFO:Calculating mean and std
2023-11-05 23:12:12,087:INFO:Creating metrics dataframe
2023-11-05 23:12:12,090:INFO:Uploading results into container
2023-11-05 23:12:12,092:INFO:Uploading model into container now
2023-11-05 23:12:12,092:INFO:_master_model_container: 20
2023-11-05 23:12:12,092:INFO:_display_container: 2
2023-11-05 23:12:12,092:INFO:DummyRegressor()
2023-11-05 23:12:12,093:INFO:create_model() successfully completed......................................
2023-11-05 23:12:12,230:INFO:SubProcess create_model() end ==================================
2023-11-05 23:12:12,230:INFO:Creating metrics dataframe
2023-11-05 23:12:12,303:INFO:Initializing create_model()
2023-11-05 23:12:12,303:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE0956C7F0>, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:12:12,303:INFO:Checking exceptions
2023-11-05 23:12:12,313:INFO:Importing libraries
2023-11-05 23:12:12,313:INFO:Copying training dataset
2023-11-05 23:12:12,324:INFO:Defining folds
2023-11-05 23:12:12,324:INFO:Declaring metric variables
2023-11-05 23:12:12,326:INFO:Importing untrained model
2023-11-05 23:12:12,326:INFO:Declaring custom model
2023-11-05 23:12:12,326:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:12:12,329:INFO:Cross validation set to False
2023-11-05 23:12:12,329:INFO:Fitting Model
2023-11-05 23:12:16,476:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE08D73970>
2023-11-05 23:12:16,476:INFO:create_model() successfully completed......................................
2023-11-05 23:12:16,655:INFO:_master_model_container: 20
2023-11-05 23:12:16,655:INFO:_display_container: 2
2023-11-05 23:12:16,655:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE08D73970>
2023-11-05 23:12:16,655:INFO:compare_models() successfully completed......................................
2023-11-05 23:14:39,906:INFO:Initializing create_model()
2023-11-05 23:14:39,906:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:14:39,906:INFO:Checking exceptions
2023-11-05 23:14:39,930:INFO:Importing libraries
2023-11-05 23:14:39,930:INFO:Copying training dataset
2023-11-05 23:14:39,941:INFO:Defining folds
2023-11-05 23:14:39,941:INFO:Declaring metric variables
2023-11-05 23:14:39,946:INFO:Importing untrained model
2023-11-05 23:14:39,951:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:14:39,963:INFO:Starting cross validation
2023-11-05 23:14:39,967:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:14:53,819:INFO:Calculating mean and std
2023-11-05 23:14:53,819:INFO:Creating metrics dataframe
2023-11-05 23:14:53,835:INFO:Finalizing model
2023-11-05 23:14:58,671:INFO:Uploading results into container
2023-11-05 23:14:58,674:INFO:Uploading model into container now
2023-11-05 23:14:58,694:INFO:_master_model_container: 21
2023-11-05 23:14:58,694:INFO:_display_container: 3
2023-11-05 23:14:58,694:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE09323DF0>
2023-11-05 23:14:58,694:INFO:create_model() successfully completed......................................
2023-11-05 23:14:58,836:INFO:Initializing tune_model()
2023-11-05 23:14:58,836:INFO:tune_model(estimator=<catboost.core.CatBoostRegressor object at 0x000001CE09323DF0>, fold=2, round=4, n_iter=2, custom_grid=None, optimize=MAE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>)
2023-11-05 23:14:58,836:INFO:Checking exceptions
2023-11-05 23:14:58,862:INFO:Copying training dataset
2023-11-05 23:14:58,866:INFO:Checking base model
2023-11-05 23:14:58,866:INFO:Base model : CatBoost Regressor
2023-11-05 23:14:58,871:INFO:Declaring metric variables
2023-11-05 23:14:58,874:INFO:Defining Hyperparameters
2023-11-05 23:14:59,030:INFO:Tuning with n_jobs=-1
2023-11-05 23:14:59,030:INFO:Initializing RandomizedSearchCV
2023-11-05 23:15:00,873:INFO:best_params: {'actual_estimator__random_strength': 0.3, 'actual_estimator__n_estimators': 50, 'actual_estimator__l2_leaf_reg': 10, 'actual_estimator__eta': 0.4, 'actual_estimator__depth': 5}
2023-11-05 23:15:00,873:INFO:Hyperparameter search completed
2023-11-05 23:15:00,874:INFO:SubProcess create_model() called ==================================
2023-11-05 23:15:00,874:INFO:Initializing create_model()
2023-11-05 23:15:00,874:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE09323280>, fold=KFold(n_splits=2, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0578DAB0>, model_only=True, return_train_score=False, kwargs={'random_strength': 0.3, 'n_estimators': 50, 'l2_leaf_reg': 10, 'eta': 0.4, 'depth': 5})
2023-11-05 23:15:00,874:INFO:Checking exceptions
2023-11-05 23:15:00,875:INFO:Importing libraries
2023-11-05 23:15:00,875:INFO:Copying training dataset
2023-11-05 23:15:00,884:INFO:Defining folds
2023-11-05 23:15:00,884:INFO:Declaring metric variables
2023-11-05 23:15:00,890:INFO:Importing untrained model
2023-11-05 23:15:00,890:INFO:Declaring custom model
2023-11-05 23:15:00,894:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:15:00,902:INFO:Starting cross validation
2023-11-05 23:15:00,904:INFO:Cross validating with KFold(n_splits=2, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:15:01,505:INFO:Calculating mean and std
2023-11-05 23:15:01,506:INFO:Creating metrics dataframe
2023-11-05 23:15:01,511:INFO:Finalizing model
2023-11-05 23:15:02,173:INFO:Uploading results into container
2023-11-05 23:15:02,177:INFO:Uploading model into container now
2023-11-05 23:15:02,178:INFO:_master_model_container: 22
2023-11-05 23:15:02,180:INFO:_display_container: 4
2023-11-05 23:15:02,180:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0923B0A0>
2023-11-05 23:15:02,180:INFO:create_model() successfully completed......................................
2023-11-05 23:15:02,328:INFO:SubProcess create_model() end ==================================
2023-11-05 23:15:02,329:INFO:choose_better activated
2023-11-05 23:15:02,333:INFO:SubProcess create_model() called ==================================
2023-11-05 23:15:02,333:INFO:Initializing create_model()
2023-11-05 23:15:02,333:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE09323DF0>, fold=KFold(n_splits=2, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:15:02,333:INFO:Checking exceptions
2023-11-05 23:15:02,335:INFO:Importing libraries
2023-11-05 23:15:02,335:INFO:Copying training dataset
2023-11-05 23:15:02,340:INFO:Defining folds
2023-11-05 23:15:02,340:INFO:Declaring metric variables
2023-11-05 23:15:02,340:INFO:Importing untrained model
2023-11-05 23:15:02,340:INFO:Declaring custom model
2023-11-05 23:15:02,340:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:15:02,341:INFO:Starting cross validation
2023-11-05 23:15:02,342:INFO:Cross validating with KFold(n_splits=2, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:15:05,628:INFO:Calculating mean and std
2023-11-05 23:15:05,629:INFO:Creating metrics dataframe
2023-11-05 23:15:05,632:INFO:Finalizing model
2023-11-05 23:15:10,065:INFO:Uploading results into container
2023-11-05 23:15:10,066:INFO:Uploading model into container now
2023-11-05 23:15:10,066:INFO:_master_model_container: 23
2023-11-05 23:15:10,066:INFO:_display_container: 5
2023-11-05 23:15:10,066:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0933B910>
2023-11-05 23:15:10,066:INFO:create_model() successfully completed......................................
2023-11-05 23:15:10,227:INFO:SubProcess create_model() end ==================================
2023-11-05 23:15:10,228:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0933B910> result for MAE is 46.4978
2023-11-05 23:15:10,229:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0923B0A0> result for MAE is 55.6124
2023-11-05 23:15:10,229:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0933B910> is best model
2023-11-05 23:15:10,229:INFO:choose_better completed
2023-11-05 23:15:10,229:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-11-05 23:15:10,239:INFO:_master_model_container: 23
2023-11-05 23:15:10,239:INFO:_display_container: 4
2023-11-05 23:15:10,239:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0933B910>
2023-11-05 23:15:10,240:INFO:tune_model() successfully completed......................................
2023-11-05 23:19:05,678:INFO:Initializing finalize_model()
2023-11-05 23:19:05,678:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE0933B910>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-11-05 23:19:05,678:INFO:Finalizing <catboost.core.CatBoostRegressor object at 0x000001CE0933B910>
2023-11-05 23:19:05,694:INFO:Initializing create_model()
2023-11-05 23:19:05,694:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE0933B910>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-11-05 23:19:05,694:INFO:Checking exceptions
2023-11-05 23:19:05,694:INFO:Importing libraries
2023-11-05 23:19:05,694:INFO:Copying training dataset
2023-11-05 23:19:05,694:INFO:Defining folds
2023-11-05 23:19:05,694:INFO:Declaring metric variables
2023-11-05 23:19:05,694:INFO:Importing untrained model
2023-11-05 23:19:05,694:INFO:Declaring custom model
2023-11-05 23:19:05,694:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:19:05,694:INFO:Cross validation set to False
2023-11-05 23:19:05,694:INFO:Fitting Model
2023-11-05 23:19:11,739:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE09339DB0>)])
2023-11-05 23:19:11,739:INFO:create_model() successfully completed......................................
2023-11-05 23:19:11,879:INFO:_master_model_container: 23
2023-11-05 23:19:11,879:INFO:_display_container: 4
2023-11-05 23:19:11,922:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE09339DB0>)])
2023-11-05 23:19:11,956:INFO:finalize_model() successfully completed......................................
2023-11-05 23:19:12,203:INFO:Initializing save_model()
2023-11-05 23:19:12,203:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE09339DB0>)]), model_name=cnt_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\josec\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer...
                 TransformerWrapper(include=['season', 'hr', 'weekday',
                                             'weathersit', 'day'],
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-11-05 23:19:12,203:INFO:Adding model into prep_pipe
2023-11-05 23:19:12,203:WARNING:Only Model saved as it was a pipeline.
2023-11-05 23:19:12,219:INFO:cnt_model.pkl saved in current working directory
2023-11-05 23:19:12,260:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE09339DB0>)])
2023-11-05 23:19:12,260:INFO:save_model() successfully completed......................................
2023-11-05 23:19:12,422:INFO:Initializing plot_model()
2023-11-05 23:19:12,423:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE09339DB0>)]), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, system=True)
2023-11-05 23:19:12,423:INFO:Checking exceptions
2023-11-05 23:19:12,431:INFO:Preloading libraries
2023-11-05 23:19:12,434:INFO:Copying training dataset
2023-11-05 23:19:12,434:INFO:Plot type: error
2023-11-05 23:19:12,814:INFO:Fitting Model
2023-11-05 23:19:12,829:INFO:Scoring test/hold-out set
2023-11-05 23:19:12,887:INFO:Saving 'Prediction Error.png'
2023-11-05 23:19:13,338:INFO:Visual Rendered Successfully
2023-11-05 23:19:13,471:INFO:plot_model() successfully completed......................................
2023-11-05 23:22:21,906:INFO:Initializing load_model()
2023-11-05 23:22:21,906:INFO:load_model(model_name=cnt_model, platform=None, authentication=None, verbose=True)
2023-11-05 23:22:21,976:INFO:Initializing predict_model()
2023-11-05 23:22:21,976:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE05774760>, estimator=Pipeline(memory=FastMemory(location=C:\Users\josec\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE08E45B10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CE05B1D900>)
2023-11-05 23:22:21,977:INFO:Checking exceptions
2023-11-05 23:22:21,977:INFO:Preloading libraries
2023-11-05 23:22:21,980:INFO:Set up data.
2023-11-05 23:22:21,988:INFO:Set up index.
2023-11-05 23:29:18,931:INFO:PyCaret RegressionExperiment
2023-11-05 23:29:18,931:INFO:Logging name: reg-default-name
2023-11-05 23:29:18,931:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-05 23:29:18,931:INFO:version 3.1.0
2023-11-05 23:29:18,931:INFO:Initializing setup()
2023-11-05 23:29:18,931:INFO:self.USI: 89ff
2023-11-05 23:29:18,931:INFO:self._variable_keys: {'n_jobs_param', 'fold_generator', 'USI', 'target_param', 'pipeline', 'logging_param', 'fold_groups_param', 'exp_id', 'transform_target_param', 'X_test', 'seed', 'log_plots_param', '_available_plots', 'memory', 'data', '_ml_usecase', 'X_train', 'y_train', 'gpu_n_jobs_param', 'fold_shuffle_param', 'gpu_param', 'idx', 'exp_name_log', 'y_test', 'y', 'html_param', 'X'}
2023-11-05 23:29:18,931:INFO:Checking environment
2023-11-05 23:29:18,931:INFO:python_version: 3.10.4
2023-11-05 23:29:18,931:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-11-05 23:29:18,931:INFO:machine: AMD64
2023-11-05 23:29:18,931:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-05 23:29:18,935:INFO:Memory: svmem(total=8301043712, available=1190088704, percent=85.7, used=7110955008, free=1190088704)
2023-11-05 23:29:18,935:INFO:Physical Core: 10
2023-11-05 23:29:18,935:INFO:Logical Core: 12
2023-11-05 23:29:18,935:INFO:Checking libraries
2023-11-05 23:29:18,936:INFO:System:
2023-11-05 23:29:18,936:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-11-05 23:29:18,936:INFO:executable: C:\Users\josec\AppData\Local\Programs\Python\Python310\python.exe
2023-11-05 23:29:18,936:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-05 23:29:18,936:INFO:PyCaret required dependencies:
2023-11-05 23:29:18,936:INFO:                 pip: 22.0.4
2023-11-05 23:29:18,936:INFO:          setuptools: 58.1.0
2023-11-05 23:29:18,936:INFO:             pycaret: 3.1.0
2023-11-05 23:29:18,936:INFO:             IPython: 8.14.0
2023-11-05 23:29:18,936:INFO:          ipywidgets: 8.0.6
2023-11-05 23:29:18,936:INFO:                tqdm: 4.66.1
2023-11-05 23:29:18,936:INFO:               numpy: 1.23.5
2023-11-05 23:29:18,936:INFO:              pandas: 1.5.3
2023-11-05 23:29:18,936:INFO:              jinja2: 3.1.2
2023-11-05 23:29:18,936:INFO:               scipy: 1.10.1
2023-11-05 23:29:18,936:INFO:              joblib: 1.3.2
2023-11-05 23:29:18,936:INFO:             sklearn: 1.2.2
2023-11-05 23:29:18,936:INFO:                pyod: 1.1.1
2023-11-05 23:29:18,936:INFO:            imblearn: 0.11.0
2023-11-05 23:29:18,936:INFO:   category_encoders: 2.6.3
2023-11-05 23:29:18,936:INFO:            lightgbm: 4.1.0
2023-11-05 23:29:18,936:INFO:               numba: 0.58.1
2023-11-05 23:29:18,937:INFO:            requests: 2.31.0
2023-11-05 23:29:18,937:INFO:          matplotlib: 3.7.2
2023-11-05 23:29:18,937:INFO:          scikitplot: 0.3.7
2023-11-05 23:29:18,937:INFO:         yellowbrick: 1.5
2023-11-05 23:29:18,937:INFO:              plotly: 5.16.1
2023-11-05 23:29:18,937:INFO:    plotly-resampler: Not installed
2023-11-05 23:29:18,937:INFO:             kaleido: 0.2.1
2023-11-05 23:29:18,937:INFO:           schemdraw: 0.15
2023-11-05 23:29:18,937:INFO:         statsmodels: 0.14.0
2023-11-05 23:29:18,937:INFO:              sktime: 0.21.1
2023-11-05 23:29:18,937:INFO:               tbats: 1.1.3
2023-11-05 23:29:18,937:INFO:            pmdarima: 2.0.4
2023-11-05 23:29:18,937:INFO:              psutil: 5.9.5
2023-11-05 23:29:18,937:INFO:          markupsafe: 2.1.3
2023-11-05 23:29:18,937:INFO:             pickle5: Not installed
2023-11-05 23:29:18,937:INFO:         cloudpickle: 2.2.1
2023-11-05 23:29:18,937:INFO:         deprecation: 2.1.0
2023-11-05 23:29:18,937:INFO:              xxhash: 3.4.1
2023-11-05 23:29:18,937:INFO:           wurlitzer: Not installed
2023-11-05 23:29:18,937:INFO:PyCaret optional dependencies:
2023-11-05 23:29:18,937:INFO:                shap: 0.43.0
2023-11-05 23:29:18,937:INFO:           interpret: 0.4.4
2023-11-05 23:29:18,937:INFO:                umap: 0.5.4
2023-11-05 23:29:18,938:INFO:     ydata_profiling: 4.6.0
2023-11-05 23:29:18,938:INFO:  explainerdashboard: 0.4.3
2023-11-05 23:29:18,938:INFO:             autoviz: Not installed
2023-11-05 23:29:18,938:INFO:           fairlearn: 0.7.0
2023-11-05 23:29:18,938:INFO:          deepchecks: Not installed
2023-11-05 23:29:18,938:INFO:             xgboost: 2.0.0
2023-11-05 23:29:18,938:INFO:            catboost: 1.2.2
2023-11-05 23:29:18,938:INFO:              kmodes: 0.12.2
2023-11-05 23:29:18,938:INFO:             mlxtend: 0.23.0
2023-11-05 23:29:18,938:INFO:       statsforecast: 1.5.0
2023-11-05 23:29:18,938:INFO:        tune_sklearn: 0.4.6
2023-11-05 23:29:18,938:INFO:                 ray: 2.8.0
2023-11-05 23:29:18,938:INFO:            hyperopt: 0.2.7
2023-11-05 23:29:18,938:INFO:              optuna: 3.4.0
2023-11-05 23:29:18,938:INFO:               skopt: 0.9.0
2023-11-05 23:29:18,938:INFO:              mlflow: 1.30.1
2023-11-05 23:29:18,938:INFO:              gradio: 3.50.2
2023-11-05 23:29:18,938:INFO:             fastapi: 0.104.0
2023-11-05 23:29:18,938:INFO:             uvicorn: 0.23.2
2023-11-05 23:29:18,938:INFO:              m2cgen: 0.10.0
2023-11-05 23:29:18,938:INFO:           evidently: 0.2.8
2023-11-05 23:29:18,938:INFO:               fugue: 0.8.6
2023-11-05 23:29:18,938:INFO:           streamlit: 1.26.0
2023-11-05 23:29:18,938:INFO:             prophet: Not installed
2023-11-05 23:29:18,938:INFO:None
2023-11-05 23:29:18,939:INFO:Set up data.
2023-11-05 23:29:18,949:INFO:Set up folding strategy.
2023-11-05 23:29:18,949:INFO:Set up train/test split.
2023-11-05 23:29:18,958:INFO:Set up index.
2023-11-05 23:29:18,958:INFO:Assigning column types.
2023-11-05 23:29:18,963:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-05 23:29:18,963:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-05 23:29:18,967:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-05 23:29:18,972:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,028:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,064:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,065:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:29:19,067:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:29:19,067:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,071:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,074:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,126:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,165:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,166:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:29:19,168:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:29:19,168:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-05 23:29:19,172:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,176:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,246:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,281:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,282:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:29:19,284:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:29:19,288:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,293:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,348:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,409:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,410:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:29:19,413:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:29:19,413:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-05 23:29:19,423:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,479:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,533:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,533:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:29:19,535:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:29:19,546:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,600:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,638:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,639:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:29:19,641:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:29:19,641:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-05 23:29:19,695:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,727:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,727:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:29:19,730:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:29:19,787:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,830:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,830:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:29:19,832:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:29:19,833:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-05 23:29:19,885:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:29:19,945:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:29:19,947:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:29:19,999:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:29:20,033:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:29:20,036:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:29:20,036:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-05 23:29:20,123:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:29:20,125:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:29:20,217:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:29:20,220:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:29:20,221:INFO:Preparing preprocessing pipeline...
2023-11-05 23:29:20,221:INFO:Set up simple imputation.
2023-11-05 23:29:20,225:INFO:Set up encoding of ordinal features.
2023-11-05 23:29:20,228:INFO:Set up encoding of categorical features.
2023-11-05 23:29:20,228:INFO:Set up removing multicollinearity.
2023-11-05 23:29:20,228:INFO:Set up feature normalization.
2023-11-05 23:29:20,685:INFO:Finished creating preprocessing pipeline.
2023-11-05 23:29:20,728:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\josec\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer...
                 TransformerWrapper(include=['season', 'hr', 'weekday',
                                             'weathersit', 'day'],
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler()))])
2023-11-05 23:29:20,728:INFO:Creating final display dataframe.
2023-11-05 23:29:21,241:INFO:Setup _display_container:                     Description             Value
0                    Session id               124
1                        Target            casual
2                   Target type        Regression
3           Original data shape       (16510, 12)
4        Transformed data shape       (16510, 77)
5   Transformed train set shape       (13208, 77)
6    Transformed test set shape        (3302, 77)
7              Ordinal features                 2
8              Numeric features                 4
9          Categorical features                 7
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.9
18                    Normalize              True
19             Normalize method            robust
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              89ff
2023-11-05 23:29:21,333:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:29:21,335:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:29:21,422:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:29:21,424:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:29:21,424:INFO:setup() successfully completed in 2.6s...............
2023-11-05 23:29:21,424:INFO:Initializing compare_models()
2023-11-05 23:29:21,425:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, include=None, fold=5, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-05 23:29:21,425:INFO:Checking exceptions
2023-11-05 23:29:21,426:INFO:Preparing display monitor
2023-11-05 23:29:21,481:INFO:Initializing Linear Regression
2023-11-05 23:29:21,482:INFO:Total runtime is 1.6681353251139323e-05 minutes
2023-11-05 23:29:21,488:INFO:SubProcess create_model() called ==================================
2023-11-05 23:29:21,489:INFO:Initializing create_model()
2023-11-05 23:29:21,489:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=lr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:29:21,489:INFO:Checking exceptions
2023-11-05 23:29:21,489:INFO:Importing libraries
2023-11-05 23:29:21,489:INFO:Copying training dataset
2023-11-05 23:29:21,495:INFO:Defining folds
2023-11-05 23:29:21,495:INFO:Declaring metric variables
2023-11-05 23:29:21,499:INFO:Importing untrained model
2023-11-05 23:29:21,507:INFO:Linear Regression Imported successfully
2023-11-05 23:29:21,514:INFO:Starting cross validation
2023-11-05 23:29:21,516:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:29:30,035:INFO:Calculating mean and std
2023-11-05 23:29:30,039:INFO:Creating metrics dataframe
2023-11-05 23:29:30,047:INFO:Uploading results into container
2023-11-05 23:29:30,049:INFO:Uploading model into container now
2023-11-05 23:29:30,053:INFO:_master_model_container: 1
2023-11-05 23:29:30,054:INFO:_display_container: 2
2023-11-05 23:29:30,055:INFO:LinearRegression(n_jobs=-1)
2023-11-05 23:29:30,056:INFO:create_model() successfully completed......................................
2023-11-05 23:29:30,651:INFO:SubProcess create_model() end ==================================
2023-11-05 23:29:30,651:INFO:Creating metrics dataframe
2023-11-05 23:29:30,663:INFO:Initializing Lasso Regression
2023-11-05 23:29:30,663:INFO:Total runtime is 0.1530381480852763 minutes
2023-11-05 23:29:30,668:INFO:SubProcess create_model() called ==================================
2023-11-05 23:29:30,669:INFO:Initializing create_model()
2023-11-05 23:29:30,669:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=lasso, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:29:30,669:INFO:Checking exceptions
2023-11-05 23:29:30,669:INFO:Importing libraries
2023-11-05 23:29:30,669:INFO:Copying training dataset
2023-11-05 23:29:30,678:INFO:Defining folds
2023-11-05 23:29:30,678:INFO:Declaring metric variables
2023-11-05 23:29:30,685:INFO:Importing untrained model
2023-11-05 23:29:30,688:INFO:Lasso Regression Imported successfully
2023-11-05 23:29:30,694:INFO:Starting cross validation
2023-11-05 23:29:30,697:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:29:36,798:INFO:Calculating mean and std
2023-11-05 23:29:36,801:INFO:Creating metrics dataframe
2023-11-05 23:29:36,815:INFO:Uploading results into container
2023-11-05 23:29:36,817:INFO:Uploading model into container now
2023-11-05 23:29:36,817:INFO:_master_model_container: 2
2023-11-05 23:29:36,818:INFO:_display_container: 2
2023-11-05 23:29:36,818:INFO:Lasso(random_state=124)
2023-11-05 23:29:36,818:INFO:create_model() successfully completed......................................
2023-11-05 23:29:37,001:INFO:SubProcess create_model() end ==================================
2023-11-05 23:29:37,001:INFO:Creating metrics dataframe
2023-11-05 23:29:37,010:INFO:Initializing Ridge Regression
2023-11-05 23:29:37,010:INFO:Total runtime is 0.2588050762812297 minutes
2023-11-05 23:29:37,014:INFO:SubProcess create_model() called ==================================
2023-11-05 23:29:37,015:INFO:Initializing create_model()
2023-11-05 23:29:37,015:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=ridge, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:29:37,016:INFO:Checking exceptions
2023-11-05 23:29:37,016:INFO:Importing libraries
2023-11-05 23:29:37,016:INFO:Copying training dataset
2023-11-05 23:29:37,021:INFO:Defining folds
2023-11-05 23:29:37,022:INFO:Declaring metric variables
2023-11-05 23:29:37,031:INFO:Importing untrained model
2023-11-05 23:29:37,052:INFO:Ridge Regression Imported successfully
2023-11-05 23:29:37,059:INFO:Starting cross validation
2023-11-05 23:29:37,062:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:29:41,986:INFO:Calculating mean and std
2023-11-05 23:29:41,988:INFO:Creating metrics dataframe
2023-11-05 23:29:42,000:INFO:Uploading results into container
2023-11-05 23:29:42,001:INFO:Uploading model into container now
2023-11-05 23:29:42,001:INFO:_master_model_container: 3
2023-11-05 23:29:42,001:INFO:_display_container: 2
2023-11-05 23:29:42,002:INFO:Ridge(random_state=124)
2023-11-05 23:29:42,003:INFO:create_model() successfully completed......................................
2023-11-05 23:29:42,211:INFO:SubProcess create_model() end ==================================
2023-11-05 23:29:42,211:INFO:Creating metrics dataframe
2023-11-05 23:29:42,221:INFO:Initializing Elastic Net
2023-11-05 23:29:42,221:INFO:Total runtime is 0.34566009442011514 minutes
2023-11-05 23:29:42,224:INFO:SubProcess create_model() called ==================================
2023-11-05 23:29:42,225:INFO:Initializing create_model()
2023-11-05 23:29:42,225:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=en, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:29:42,225:INFO:Checking exceptions
2023-11-05 23:29:42,225:INFO:Importing libraries
2023-11-05 23:29:42,225:INFO:Copying training dataset
2023-11-05 23:29:42,231:INFO:Defining folds
2023-11-05 23:29:42,231:INFO:Declaring metric variables
2023-11-05 23:29:42,235:INFO:Importing untrained model
2023-11-05 23:29:42,242:INFO:Elastic Net Imported successfully
2023-11-05 23:29:42,254:INFO:Starting cross validation
2023-11-05 23:29:42,257:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:29:43,258:INFO:Calculating mean and std
2023-11-05 23:29:43,260:INFO:Creating metrics dataframe
2023-11-05 23:29:43,264:INFO:Uploading results into container
2023-11-05 23:29:43,265:INFO:Uploading model into container now
2023-11-05 23:29:43,265:INFO:_master_model_container: 4
2023-11-05 23:29:43,265:INFO:_display_container: 2
2023-11-05 23:29:43,266:INFO:ElasticNet(random_state=124)
2023-11-05 23:29:43,267:INFO:create_model() successfully completed......................................
2023-11-05 23:29:43,406:INFO:SubProcess create_model() end ==================================
2023-11-05 23:29:43,406:INFO:Creating metrics dataframe
2023-11-05 23:29:43,416:INFO:Initializing Least Angle Regression
2023-11-05 23:29:43,416:INFO:Total runtime is 0.36558047533035276 minutes
2023-11-05 23:29:43,420:INFO:SubProcess create_model() called ==================================
2023-11-05 23:29:43,421:INFO:Initializing create_model()
2023-11-05 23:29:43,421:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=lar, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:29:43,421:INFO:Checking exceptions
2023-11-05 23:29:43,421:INFO:Importing libraries
2023-11-05 23:29:43,421:INFO:Copying training dataset
2023-11-05 23:29:43,427:INFO:Defining folds
2023-11-05 23:29:43,427:INFO:Declaring metric variables
2023-11-05 23:29:43,438:INFO:Importing untrained model
2023-11-05 23:29:43,447:INFO:Least Angle Regression Imported successfully
2023-11-05 23:29:43,455:INFO:Starting cross validation
2023-11-05 23:29:43,457:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:29:44,162:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 35 iterations, i.e. alpha=2.564e-01, with an active set of 34 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-11-05 23:29:44,163:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 36 iterations, i.e. alpha=2.291e-01, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-11-05 23:29:44,163:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 37 iterations, i.e. alpha=2.113e-01, with an active set of 36 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-11-05 23:29:44,165:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 45 iterations, i.e. alpha=1.108e-01, with an active set of 44 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-11-05 23:29:44,167:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 54 iterations, i.e. alpha=8.159e-02, with an active set of 53 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-11-05 23:29:44,168:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 57 iterations, i.e. alpha=6.632e-02, with an active set of 55 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-11-05 23:29:44,169:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 60 iterations, i.e. alpha=4.969e-02, with an active set of 58 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-11-05 23:29:44,170:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 69 iterations, i.e. alpha=2.949e-02, with an active set of 67 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-11-05 23:29:44,171:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 70 iterations, i.e. alpha=2.345e-02, with an active set of 68 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-11-05 23:29:44,261:INFO:Calculating mean and std
2023-11-05 23:29:44,262:INFO:Creating metrics dataframe
2023-11-05 23:29:44,265:INFO:Uploading results into container
2023-11-05 23:29:44,265:INFO:Uploading model into container now
2023-11-05 23:29:44,266:INFO:_master_model_container: 5
2023-11-05 23:29:44,266:INFO:_display_container: 2
2023-11-05 23:29:44,268:INFO:Lars(random_state=124)
2023-11-05 23:29:44,268:INFO:create_model() successfully completed......................................
2023-11-05 23:29:44,393:INFO:SubProcess create_model() end ==================================
2023-11-05 23:29:44,393:INFO:Creating metrics dataframe
2023-11-05 23:29:44,413:INFO:Initializing Lasso Least Angle Regression
2023-11-05 23:29:44,413:INFO:Total runtime is 0.3822045445442199 minutes
2023-11-05 23:29:44,419:INFO:SubProcess create_model() called ==================================
2023-11-05 23:29:44,419:INFO:Initializing create_model()
2023-11-05 23:29:44,420:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=llar, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:29:44,420:INFO:Checking exceptions
2023-11-05 23:29:44,420:INFO:Importing libraries
2023-11-05 23:29:44,421:INFO:Copying training dataset
2023-11-05 23:29:44,427:INFO:Defining folds
2023-11-05 23:29:44,427:INFO:Declaring metric variables
2023-11-05 23:29:44,436:INFO:Importing untrained model
2023-11-05 23:29:44,444:INFO:Lasso Least Angle Regression Imported successfully
2023-11-05 23:29:44,462:INFO:Starting cross validation
2023-11-05 23:29:44,464:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:29:45,252:INFO:Calculating mean and std
2023-11-05 23:29:45,254:INFO:Creating metrics dataframe
2023-11-05 23:29:45,257:INFO:Uploading results into container
2023-11-05 23:29:45,258:INFO:Uploading model into container now
2023-11-05 23:29:45,259:INFO:_master_model_container: 6
2023-11-05 23:29:45,259:INFO:_display_container: 2
2023-11-05 23:29:45,261:INFO:LassoLars(random_state=124)
2023-11-05 23:29:45,262:INFO:create_model() successfully completed......................................
2023-11-05 23:29:45,397:INFO:SubProcess create_model() end ==================================
2023-11-05 23:29:45,397:INFO:Creating metrics dataframe
2023-11-05 23:29:45,409:INFO:Initializing Orthogonal Matching Pursuit
2023-11-05 23:29:45,409:INFO:Total runtime is 0.3987885316212972 minutes
2023-11-05 23:29:45,412:INFO:SubProcess create_model() called ==================================
2023-11-05 23:29:45,413:INFO:Initializing create_model()
2023-11-05 23:29:45,413:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=omp, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:29:45,413:INFO:Checking exceptions
2023-11-05 23:29:45,414:INFO:Importing libraries
2023-11-05 23:29:45,414:INFO:Copying training dataset
2023-11-05 23:29:45,419:INFO:Defining folds
2023-11-05 23:29:45,419:INFO:Declaring metric variables
2023-11-05 23:29:45,426:INFO:Importing untrained model
2023-11-05 23:29:45,432:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-05 23:29:45,448:INFO:Starting cross validation
2023-11-05 23:29:45,451:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:29:46,212:INFO:Calculating mean and std
2023-11-05 23:29:46,232:INFO:Creating metrics dataframe
2023-11-05 23:29:46,238:INFO:Uploading results into container
2023-11-05 23:29:46,239:INFO:Uploading model into container now
2023-11-05 23:29:46,240:INFO:_master_model_container: 7
2023-11-05 23:29:46,240:INFO:_display_container: 2
2023-11-05 23:29:46,243:INFO:OrthogonalMatchingPursuit()
2023-11-05 23:29:46,244:INFO:create_model() successfully completed......................................
2023-11-05 23:29:46,377:INFO:SubProcess create_model() end ==================================
2023-11-05 23:29:46,378:INFO:Creating metrics dataframe
2023-11-05 23:29:46,393:INFO:Initializing Bayesian Ridge
2023-11-05 23:29:46,394:INFO:Total runtime is 0.41521389881769816 minutes
2023-11-05 23:29:46,398:INFO:SubProcess create_model() called ==================================
2023-11-05 23:29:46,399:INFO:Initializing create_model()
2023-11-05 23:29:46,399:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=br, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:29:46,399:INFO:Checking exceptions
2023-11-05 23:29:46,399:INFO:Importing libraries
2023-11-05 23:29:46,399:INFO:Copying training dataset
2023-11-05 23:29:46,405:INFO:Defining folds
2023-11-05 23:29:46,405:INFO:Declaring metric variables
2023-11-05 23:29:46,409:INFO:Importing untrained model
2023-11-05 23:29:46,415:INFO:Bayesian Ridge Imported successfully
2023-11-05 23:29:46,423:INFO:Starting cross validation
2023-11-05 23:29:46,426:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:29:47,408:INFO:Calculating mean and std
2023-11-05 23:29:47,409:INFO:Creating metrics dataframe
2023-11-05 23:29:47,412:INFO:Uploading results into container
2023-11-05 23:29:47,412:INFO:Uploading model into container now
2023-11-05 23:29:47,413:INFO:_master_model_container: 8
2023-11-05 23:29:47,413:INFO:_display_container: 2
2023-11-05 23:29:47,413:INFO:BayesianRidge()
2023-11-05 23:29:47,414:INFO:create_model() successfully completed......................................
2023-11-05 23:29:47,552:INFO:SubProcess create_model() end ==================================
2023-11-05 23:29:47,552:INFO:Creating metrics dataframe
2023-11-05 23:29:47,563:INFO:Initializing Passive Aggressive Regressor
2023-11-05 23:29:47,563:INFO:Total runtime is 0.43470112880071005 minutes
2023-11-05 23:29:47,566:INFO:SubProcess create_model() called ==================================
2023-11-05 23:29:47,566:INFO:Initializing create_model()
2023-11-05 23:29:47,566:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=par, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:29:47,566:INFO:Checking exceptions
2023-11-05 23:29:47,566:INFO:Importing libraries
2023-11-05 23:29:47,568:INFO:Copying training dataset
2023-11-05 23:29:47,574:INFO:Defining folds
2023-11-05 23:29:47,575:INFO:Declaring metric variables
2023-11-05 23:29:47,584:INFO:Importing untrained model
2023-11-05 23:29:47,596:INFO:Passive Aggressive Regressor Imported successfully
2023-11-05 23:29:47,606:INFO:Starting cross validation
2023-11-05 23:29:47,610:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:29:48,429:INFO:Calculating mean and std
2023-11-05 23:29:48,430:INFO:Creating metrics dataframe
2023-11-05 23:29:48,433:INFO:Uploading results into container
2023-11-05 23:29:48,433:INFO:Uploading model into container now
2023-11-05 23:29:48,433:INFO:_master_model_container: 9
2023-11-05 23:29:48,434:INFO:_display_container: 2
2023-11-05 23:29:48,434:INFO:PassiveAggressiveRegressor(random_state=124)
2023-11-05 23:29:48,434:INFO:create_model() successfully completed......................................
2023-11-05 23:29:48,565:INFO:SubProcess create_model() end ==================================
2023-11-05 23:29:48,565:INFO:Creating metrics dataframe
2023-11-05 23:29:48,577:INFO:Initializing Huber Regressor
2023-11-05 23:29:48,577:INFO:Total runtime is 0.4515963236490885 minutes
2023-11-05 23:29:48,580:INFO:SubProcess create_model() called ==================================
2023-11-05 23:29:48,581:INFO:Initializing create_model()
2023-11-05 23:29:48,581:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=huber, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:29:48,581:INFO:Checking exceptions
2023-11-05 23:29:48,581:INFO:Importing libraries
2023-11-05 23:29:48,581:INFO:Copying training dataset
2023-11-05 23:29:48,586:INFO:Defining folds
2023-11-05 23:29:48,586:INFO:Declaring metric variables
2023-11-05 23:29:48,589:INFO:Importing untrained model
2023-11-05 23:29:48,594:INFO:Huber Regressor Imported successfully
2023-11-05 23:29:48,608:INFO:Starting cross validation
2023-11-05 23:29:48,611:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:29:50,959:INFO:Calculating mean and std
2023-11-05 23:29:50,961:INFO:Creating metrics dataframe
2023-11-05 23:29:50,999:INFO:Uploading results into container
2023-11-05 23:29:51,000:INFO:Uploading model into container now
2023-11-05 23:29:51,001:INFO:_master_model_container: 10
2023-11-05 23:29:51,001:INFO:_display_container: 2
2023-11-05 23:29:51,002:INFO:HuberRegressor()
2023-11-05 23:29:51,002:INFO:create_model() successfully completed......................................
2023-11-05 23:29:51,152:INFO:SubProcess create_model() end ==================================
2023-11-05 23:29:51,152:INFO:Creating metrics dataframe
2023-11-05 23:29:51,166:INFO:Initializing K Neighbors Regressor
2023-11-05 23:29:51,167:INFO:Total runtime is 0.49475616216659546 minutes
2023-11-05 23:29:51,170:INFO:SubProcess create_model() called ==================================
2023-11-05 23:29:51,170:INFO:Initializing create_model()
2023-11-05 23:29:51,170:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=knn, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:29:51,170:INFO:Checking exceptions
2023-11-05 23:29:51,171:INFO:Importing libraries
2023-11-05 23:29:51,171:INFO:Copying training dataset
2023-11-05 23:29:51,179:INFO:Defining folds
2023-11-05 23:29:51,179:INFO:Declaring metric variables
2023-11-05 23:29:51,184:INFO:Importing untrained model
2023-11-05 23:29:51,191:INFO:K Neighbors Regressor Imported successfully
2023-11-05 23:29:51,201:INFO:Starting cross validation
2023-11-05 23:29:51,205:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:29:52,695:INFO:Calculating mean and std
2023-11-05 23:29:52,697:INFO:Creating metrics dataframe
2023-11-05 23:29:52,700:INFO:Uploading results into container
2023-11-05 23:29:52,701:INFO:Uploading model into container now
2023-11-05 23:29:52,701:INFO:_master_model_container: 11
2023-11-05 23:29:52,701:INFO:_display_container: 2
2023-11-05 23:29:52,702:INFO:KNeighborsRegressor(n_jobs=-1)
2023-11-05 23:29:52,702:INFO:create_model() successfully completed......................................
2023-11-05 23:29:52,841:INFO:SubProcess create_model() end ==================================
2023-11-05 23:29:52,841:INFO:Creating metrics dataframe
2023-11-05 23:29:52,852:INFO:Initializing Decision Tree Regressor
2023-11-05 23:29:52,852:INFO:Total runtime is 0.5228537877400716 minutes
2023-11-05 23:29:52,855:INFO:SubProcess create_model() called ==================================
2023-11-05 23:29:52,855:INFO:Initializing create_model()
2023-11-05 23:29:52,856:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=dt, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:29:52,856:INFO:Checking exceptions
2023-11-05 23:29:52,856:INFO:Importing libraries
2023-11-05 23:29:52,856:INFO:Copying training dataset
2023-11-05 23:29:52,862:INFO:Defining folds
2023-11-05 23:29:52,862:INFO:Declaring metric variables
2023-11-05 23:29:52,868:INFO:Importing untrained model
2023-11-05 23:29:52,883:INFO:Decision Tree Regressor Imported successfully
2023-11-05 23:29:52,890:INFO:Starting cross validation
2023-11-05 23:29:52,891:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:29:53,931:INFO:Calculating mean and std
2023-11-05 23:29:53,932:INFO:Creating metrics dataframe
2023-11-05 23:29:53,936:INFO:Uploading results into container
2023-11-05 23:29:53,938:INFO:Uploading model into container now
2023-11-05 23:29:53,939:INFO:_master_model_container: 12
2023-11-05 23:29:53,940:INFO:_display_container: 2
2023-11-05 23:29:53,940:INFO:DecisionTreeRegressor(random_state=124)
2023-11-05 23:29:53,940:INFO:create_model() successfully completed......................................
2023-11-05 23:29:54,110:INFO:SubProcess create_model() end ==================================
2023-11-05 23:29:54,110:INFO:Creating metrics dataframe
2023-11-05 23:29:54,123:INFO:Initializing Random Forest Regressor
2023-11-05 23:29:54,123:INFO:Total runtime is 0.5440226912498475 minutes
2023-11-05 23:29:54,127:INFO:SubProcess create_model() called ==================================
2023-11-05 23:29:54,127:INFO:Initializing create_model()
2023-11-05 23:29:54,127:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=rf, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:29:54,128:INFO:Checking exceptions
2023-11-05 23:29:54,128:INFO:Importing libraries
2023-11-05 23:29:54,128:INFO:Copying training dataset
2023-11-05 23:29:54,133:INFO:Defining folds
2023-11-05 23:29:54,133:INFO:Declaring metric variables
2023-11-05 23:29:54,140:INFO:Importing untrained model
2023-11-05 23:29:54,151:INFO:Random Forest Regressor Imported successfully
2023-11-05 23:29:54,162:INFO:Starting cross validation
2023-11-05 23:29:54,164:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:30:01,293:INFO:Calculating mean and std
2023-11-05 23:30:01,294:INFO:Creating metrics dataframe
2023-11-05 23:30:01,298:INFO:Uploading results into container
2023-11-05 23:30:01,299:INFO:Uploading model into container now
2023-11-05 23:30:01,299:INFO:_master_model_container: 13
2023-11-05 23:30:01,299:INFO:_display_container: 2
2023-11-05 23:30:01,300:INFO:RandomForestRegressor(n_jobs=-1, random_state=124)
2023-11-05 23:30:01,300:INFO:create_model() successfully completed......................................
2023-11-05 23:30:01,461:INFO:SubProcess create_model() end ==================================
2023-11-05 23:30:01,461:INFO:Creating metrics dataframe
2023-11-05 23:30:01,483:INFO:Initializing Extra Trees Regressor
2023-11-05 23:30:01,484:INFO:Total runtime is 0.6667109568913778 minutes
2023-11-05 23:30:01,488:INFO:SubProcess create_model() called ==================================
2023-11-05 23:30:01,488:INFO:Initializing create_model()
2023-11-05 23:30:01,489:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=et, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:30:01,489:INFO:Checking exceptions
2023-11-05 23:30:01,489:INFO:Importing libraries
2023-11-05 23:30:01,489:INFO:Copying training dataset
2023-11-05 23:30:01,496:INFO:Defining folds
2023-11-05 23:30:01,496:INFO:Declaring metric variables
2023-11-05 23:30:01,500:INFO:Importing untrained model
2023-11-05 23:30:01,518:INFO:Extra Trees Regressor Imported successfully
2023-11-05 23:30:01,527:INFO:Starting cross validation
2023-11-05 23:30:01,529:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:30:08,903:INFO:Calculating mean and std
2023-11-05 23:30:08,906:INFO:Creating metrics dataframe
2023-11-05 23:30:08,912:INFO:Uploading results into container
2023-11-05 23:30:08,914:INFO:Uploading model into container now
2023-11-05 23:30:08,916:INFO:_master_model_container: 14
2023-11-05 23:30:08,916:INFO:_display_container: 2
2023-11-05 23:30:08,917:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=124)
2023-11-05 23:30:08,917:INFO:create_model() successfully completed......................................
2023-11-05 23:30:09,094:INFO:SubProcess create_model() end ==================================
2023-11-05 23:30:09,094:INFO:Creating metrics dataframe
2023-11-05 23:30:09,113:INFO:Initializing AdaBoost Regressor
2023-11-05 23:30:09,113:INFO:Total runtime is 0.7938565293947857 minutes
2023-11-05 23:30:09,116:INFO:SubProcess create_model() called ==================================
2023-11-05 23:30:09,117:INFO:Initializing create_model()
2023-11-05 23:30:09,117:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=ada, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:30:09,117:INFO:Checking exceptions
2023-11-05 23:30:09,117:INFO:Importing libraries
2023-11-05 23:30:09,117:INFO:Copying training dataset
2023-11-05 23:30:09,125:INFO:Defining folds
2023-11-05 23:30:09,125:INFO:Declaring metric variables
2023-11-05 23:30:09,128:INFO:Importing untrained model
2023-11-05 23:30:09,132:INFO:AdaBoost Regressor Imported successfully
2023-11-05 23:30:09,143:INFO:Starting cross validation
2023-11-05 23:30:09,145:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:30:12,505:INFO:Calculating mean and std
2023-11-05 23:30:12,506:INFO:Creating metrics dataframe
2023-11-05 23:30:12,508:INFO:Uploading results into container
2023-11-05 23:30:12,509:INFO:Uploading model into container now
2023-11-05 23:30:12,509:INFO:_master_model_container: 15
2023-11-05 23:30:12,509:INFO:_display_container: 2
2023-11-05 23:30:12,510:INFO:AdaBoostRegressor(random_state=124)
2023-11-05 23:30:12,510:INFO:create_model() successfully completed......................................
2023-11-05 23:30:12,634:INFO:SubProcess create_model() end ==================================
2023-11-05 23:30:12,634:INFO:Creating metrics dataframe
2023-11-05 23:30:12,642:INFO:Initializing Gradient Boosting Regressor
2023-11-05 23:30:12,642:INFO:Total runtime is 0.8526881098747254 minutes
2023-11-05 23:30:12,646:INFO:SubProcess create_model() called ==================================
2023-11-05 23:30:12,646:INFO:Initializing create_model()
2023-11-05 23:30:12,646:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=gbr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:30:12,646:INFO:Checking exceptions
2023-11-05 23:30:12,647:INFO:Importing libraries
2023-11-05 23:30:12,647:INFO:Copying training dataset
2023-11-05 23:30:12,651:INFO:Defining folds
2023-11-05 23:30:12,651:INFO:Declaring metric variables
2023-11-05 23:30:12,654:INFO:Importing untrained model
2023-11-05 23:30:12,661:INFO:Gradient Boosting Regressor Imported successfully
2023-11-05 23:30:12,669:INFO:Starting cross validation
2023-11-05 23:30:12,672:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:30:15,580:INFO:Calculating mean and std
2023-11-05 23:30:15,581:INFO:Creating metrics dataframe
2023-11-05 23:30:15,584:INFO:Uploading results into container
2023-11-05 23:30:15,584:INFO:Uploading model into container now
2023-11-05 23:30:15,585:INFO:_master_model_container: 16
2023-11-05 23:30:15,585:INFO:_display_container: 2
2023-11-05 23:30:15,585:INFO:GradientBoostingRegressor(random_state=124)
2023-11-05 23:30:15,585:INFO:create_model() successfully completed......................................
2023-11-05 23:30:15,705:INFO:SubProcess create_model() end ==================================
2023-11-05 23:30:15,706:INFO:Creating metrics dataframe
2023-11-05 23:30:15,719:INFO:Initializing Extreme Gradient Boosting
2023-11-05 23:30:15,719:INFO:Total runtime is 0.9039612213770549 minutes
2023-11-05 23:30:15,724:INFO:SubProcess create_model() called ==================================
2023-11-05 23:30:15,724:INFO:Initializing create_model()
2023-11-05 23:30:15,724:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=xgboost, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:30:15,724:INFO:Checking exceptions
2023-11-05 23:30:15,724:INFO:Importing libraries
2023-11-05 23:30:15,724:INFO:Copying training dataset
2023-11-05 23:30:15,729:INFO:Defining folds
2023-11-05 23:30:15,729:INFO:Declaring metric variables
2023-11-05 23:30:15,732:INFO:Importing untrained model
2023-11-05 23:30:15,736:INFO:Extreme Gradient Boosting Imported successfully
2023-11-05 23:30:15,745:INFO:Starting cross validation
2023-11-05 23:30:15,747:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:30:16,891:INFO:Calculating mean and std
2023-11-05 23:30:16,892:INFO:Creating metrics dataframe
2023-11-05 23:30:16,895:INFO:Uploading results into container
2023-11-05 23:30:16,895:INFO:Uploading model into container now
2023-11-05 23:30:16,896:INFO:_master_model_container: 17
2023-11-05 23:30:16,896:INFO:_display_container: 2
2023-11-05 23:30:16,897:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=124, ...)
2023-11-05 23:30:16,898:INFO:create_model() successfully completed......................................
2023-11-05 23:30:17,025:INFO:SubProcess create_model() end ==================================
2023-11-05 23:30:17,025:INFO:Creating metrics dataframe
2023-11-05 23:30:17,035:INFO:Initializing Light Gradient Boosting Machine
2023-11-05 23:30:17,035:INFO:Total runtime is 0.9258921066919963 minutes
2023-11-05 23:30:17,038:INFO:SubProcess create_model() called ==================================
2023-11-05 23:30:17,038:INFO:Initializing create_model()
2023-11-05 23:30:17,038:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:30:17,038:INFO:Checking exceptions
2023-11-05 23:30:17,038:INFO:Importing libraries
2023-11-05 23:30:17,039:INFO:Copying training dataset
2023-11-05 23:30:17,043:INFO:Defining folds
2023-11-05 23:30:17,044:INFO:Declaring metric variables
2023-11-05 23:30:17,046:INFO:Importing untrained model
2023-11-05 23:30:17,051:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-05 23:30:17,063:INFO:Starting cross validation
2023-11-05 23:30:17,065:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:30:18,598:INFO:Calculating mean and std
2023-11-05 23:30:18,600:INFO:Creating metrics dataframe
2023-11-05 23:30:18,606:INFO:Uploading results into container
2023-11-05 23:30:18,607:INFO:Uploading model into container now
2023-11-05 23:30:18,608:INFO:_master_model_container: 18
2023-11-05 23:30:18,608:INFO:_display_container: 2
2023-11-05 23:30:18,610:INFO:LGBMRegressor(n_jobs=-1, random_state=124)
2023-11-05 23:30:18,610:INFO:create_model() successfully completed......................................
2023-11-05 23:30:18,769:INFO:SubProcess create_model() end ==================================
2023-11-05 23:30:18,769:INFO:Creating metrics dataframe
2023-11-05 23:30:18,781:INFO:Initializing CatBoost Regressor
2023-11-05 23:30:18,782:INFO:Total runtime is 0.9549918691317241 minutes
2023-11-05 23:30:18,784:INFO:SubProcess create_model() called ==================================
2023-11-05 23:30:18,785:INFO:Initializing create_model()
2023-11-05 23:30:18,785:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=catboost, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:30:18,785:INFO:Checking exceptions
2023-11-05 23:30:18,785:INFO:Importing libraries
2023-11-05 23:30:18,785:INFO:Copying training dataset
2023-11-05 23:30:18,791:INFO:Defining folds
2023-11-05 23:30:18,791:INFO:Declaring metric variables
2023-11-05 23:30:18,794:INFO:Importing untrained model
2023-11-05 23:30:18,814:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:30:18,821:INFO:Starting cross validation
2023-11-05 23:30:18,823:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:30:25,784:INFO:Calculating mean and std
2023-11-05 23:30:25,786:INFO:Creating metrics dataframe
2023-11-05 23:30:25,790:INFO:Uploading results into container
2023-11-05 23:30:25,790:INFO:Uploading model into container now
2023-11-05 23:30:25,791:INFO:_master_model_container: 19
2023-11-05 23:30:25,791:INFO:_display_container: 2
2023-11-05 23:30:25,791:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE096D7A90>
2023-11-05 23:30:25,791:INFO:create_model() successfully completed......................................
2023-11-05 23:30:25,924:INFO:SubProcess create_model() end ==================================
2023-11-05 23:30:25,924:INFO:Creating metrics dataframe
2023-11-05 23:30:25,943:INFO:Initializing Dummy Regressor
2023-11-05 23:30:25,943:INFO:Total runtime is 1.074363390604655 minutes
2023-11-05 23:30:25,947:INFO:SubProcess create_model() called ==================================
2023-11-05 23:30:25,947:INFO:Initializing create_model()
2023-11-05 23:30:25,947:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=dummy, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B409060>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:30:25,947:INFO:Checking exceptions
2023-11-05 23:30:25,947:INFO:Importing libraries
2023-11-05 23:30:25,947:INFO:Copying training dataset
2023-11-05 23:30:25,953:INFO:Defining folds
2023-11-05 23:30:25,953:INFO:Declaring metric variables
2023-11-05 23:30:25,956:INFO:Importing untrained model
2023-11-05 23:30:25,960:INFO:Dummy Regressor Imported successfully
2023-11-05 23:30:25,964:INFO:Starting cross validation
2023-11-05 23:30:25,966:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:30:26,699:INFO:Calculating mean and std
2023-11-05 23:30:26,700:INFO:Creating metrics dataframe
2023-11-05 23:30:26,703:INFO:Uploading results into container
2023-11-05 23:30:26,703:INFO:Uploading model into container now
2023-11-05 23:30:26,704:INFO:_master_model_container: 20
2023-11-05 23:30:26,704:INFO:_display_container: 2
2023-11-05 23:30:26,705:INFO:DummyRegressor()
2023-11-05 23:30:26,705:INFO:create_model() successfully completed......................................
2023-11-05 23:30:26,831:INFO:SubProcess create_model() end ==================================
2023-11-05 23:30:26,832:INFO:Creating metrics dataframe
2023-11-05 23:30:26,854:INFO:Initializing create_model()
2023-11-05 23:30:26,854:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE096D7A90>, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:30:26,854:INFO:Checking exceptions
2023-11-05 23:30:26,857:INFO:Importing libraries
2023-11-05 23:30:26,857:INFO:Copying training dataset
2023-11-05 23:30:26,861:INFO:Defining folds
2023-11-05 23:30:26,861:INFO:Declaring metric variables
2023-11-05 23:30:26,861:INFO:Importing untrained model
2023-11-05 23:30:26,861:INFO:Declaring custom model
2023-11-05 23:30:26,861:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:30:26,862:INFO:Cross validation set to False
2023-11-05 23:30:26,862:INFO:Fitting Model
2023-11-05 23:30:30,729:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0B40A020>
2023-11-05 23:30:30,729:INFO:create_model() successfully completed......................................
2023-11-05 23:30:30,883:INFO:_master_model_container: 20
2023-11-05 23:30:30,884:INFO:_display_container: 2
2023-11-05 23:30:30,884:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0B40A020>
2023-11-05 23:30:30,884:INFO:compare_models() successfully completed......................................
2023-11-05 23:37:08,049:INFO:Initializing create_model()
2023-11-05 23:37:08,049:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:37:08,049:INFO:Checking exceptions
2023-11-05 23:37:08,065:INFO:Importing libraries
2023-11-05 23:37:08,065:INFO:Copying training dataset
2023-11-05 23:37:08,073:INFO:Defining folds
2023-11-05 23:37:08,073:INFO:Declaring metric variables
2023-11-05 23:37:08,077:INFO:Importing untrained model
2023-11-05 23:37:08,084:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:37:08,094:INFO:Starting cross validation
2023-11-05 23:37:08,095:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:37:42,793:INFO:Calculating mean and std
2023-11-05 23:37:42,815:INFO:Creating metrics dataframe
2023-11-05 23:37:42,891:INFO:Finalizing model
2023-11-05 23:37:48,553:INFO:Uploading results into container
2023-11-05 23:37:48,555:INFO:Uploading model into container now
2023-11-05 23:37:48,594:INFO:_master_model_container: 21
2023-11-05 23:37:48,595:INFO:_display_container: 3
2023-11-05 23:37:48,595:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE096D5F00>
2023-11-05 23:37:48,595:INFO:create_model() successfully completed......................................
2023-11-05 23:37:49,405:INFO:Initializing tune_model()
2023-11-05 23:37:49,406:INFO:tune_model(estimator=<catboost.core.CatBoostRegressor object at 0x000001CE096D5F00>, fold=2, round=4, n_iter=2, custom_grid=None, optimize=MAE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>)
2023-11-05 23:37:49,406:INFO:Checking exceptions
2023-11-05 23:37:49,420:INFO:Copying training dataset
2023-11-05 23:37:49,426:INFO:Checking base model
2023-11-05 23:37:49,426:INFO:Base model : CatBoost Regressor
2023-11-05 23:37:49,431:INFO:Declaring metric variables
2023-11-05 23:37:49,434:INFO:Defining Hyperparameters
2023-11-05 23:37:49,605:INFO:Tuning with n_jobs=-1
2023-11-05 23:37:49,605:INFO:Initializing RandomizedSearchCV
2023-11-05 23:38:02,802:INFO:best_params: {'actual_estimator__random_strength': 0.0, 'actual_estimator__n_estimators': 230, 'actual_estimator__l2_leaf_reg': 7, 'actual_estimator__eta': 0.3, 'actual_estimator__depth': 2}
2023-11-05 23:38:02,806:INFO:Hyperparameter search completed
2023-11-05 23:38:02,806:INFO:SubProcess create_model() called ==================================
2023-11-05 23:38:02,807:INFO:Initializing create_model()
2023-11-05 23:38:02,808:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE0950CFA0>, fold=KFold(n_splits=2, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE09525360>, model_only=True, return_train_score=False, kwargs={'random_strength': 0.0, 'n_estimators': 230, 'l2_leaf_reg': 7, 'eta': 0.3, 'depth': 2})
2023-11-05 23:38:02,808:INFO:Checking exceptions
2023-11-05 23:38:02,809:INFO:Importing libraries
2023-11-05 23:38:02,809:INFO:Copying training dataset
2023-11-05 23:38:02,828:INFO:Defining folds
2023-11-05 23:38:02,828:INFO:Declaring metric variables
2023-11-05 23:38:02,840:INFO:Importing untrained model
2023-11-05 23:38:02,842:INFO:Declaring custom model
2023-11-05 23:38:02,856:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:38:02,879:INFO:Starting cross validation
2023-11-05 23:38:02,885:INFO:Cross validating with KFold(n_splits=2, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:38:04,035:INFO:Calculating mean and std
2023-11-05 23:38:04,037:INFO:Creating metrics dataframe
2023-11-05 23:38:04,046:INFO:Finalizing model
2023-11-05 23:38:05,084:INFO:Uploading results into container
2023-11-05 23:38:05,085:INFO:Uploading model into container now
2023-11-05 23:38:05,086:INFO:_master_model_container: 22
2023-11-05 23:38:05,086:INFO:_display_container: 4
2023-11-05 23:38:05,086:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE096D79D0>
2023-11-05 23:38:05,086:INFO:create_model() successfully completed......................................
2023-11-05 23:38:05,245:INFO:SubProcess create_model() end ==================================
2023-11-05 23:38:05,245:INFO:choose_better activated
2023-11-05 23:38:05,249:INFO:SubProcess create_model() called ==================================
2023-11-05 23:38:05,249:INFO:Initializing create_model()
2023-11-05 23:38:05,249:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE096D5F00>, fold=KFold(n_splits=2, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:38:05,249:INFO:Checking exceptions
2023-11-05 23:38:05,252:INFO:Importing libraries
2023-11-05 23:38:05,252:INFO:Copying training dataset
2023-11-05 23:38:05,258:INFO:Defining folds
2023-11-05 23:38:05,258:INFO:Declaring metric variables
2023-11-05 23:38:05,258:INFO:Importing untrained model
2023-11-05 23:38:05,258:INFO:Declaring custom model
2023-11-05 23:38:05,258:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:38:05,259:INFO:Starting cross validation
2023-11-05 23:38:05,260:INFO:Cross validating with KFold(n_splits=2, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:38:10,512:INFO:Calculating mean and std
2023-11-05 23:38:10,513:INFO:Creating metrics dataframe
2023-11-05 23:38:10,515:INFO:Finalizing model
2023-11-05 23:38:16,009:INFO:Uploading results into container
2023-11-05 23:38:16,010:INFO:Uploading model into container now
2023-11-05 23:38:16,010:INFO:_master_model_container: 23
2023-11-05 23:38:16,010:INFO:_display_container: 5
2023-11-05 23:38:16,010:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE08E479A0>
2023-11-05 23:38:16,010:INFO:create_model() successfully completed......................................
2023-11-05 23:38:16,161:INFO:SubProcess create_model() end ==================================
2023-11-05 23:38:16,161:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE08E479A0> result for MAE is 11.0149
2023-11-05 23:38:16,163:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE096D79D0> result for MAE is 15.1477
2023-11-05 23:38:16,163:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE08E479A0> is best model
2023-11-05 23:38:16,163:INFO:choose_better completed
2023-11-05 23:38:16,163:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-11-05 23:38:16,174:INFO:_master_model_container: 23
2023-11-05 23:38:16,174:INFO:_display_container: 4
2023-11-05 23:38:16,174:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE08E479A0>
2023-11-05 23:38:16,174:INFO:tune_model() successfully completed......................................
2023-11-05 23:38:16,352:INFO:Initializing finalize_model()
2023-11-05 23:38:16,352:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE08E479A0>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-11-05 23:38:16,352:INFO:Finalizing <catboost.core.CatBoostRegressor object at 0x000001CE08E479A0>
2023-11-05 23:38:16,356:INFO:Initializing create_model()
2023-11-05 23:38:16,356:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE08E479A0>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-11-05 23:38:16,356:INFO:Checking exceptions
2023-11-05 23:38:16,358:INFO:Importing libraries
2023-11-05 23:38:16,358:INFO:Copying training dataset
2023-11-05 23:38:16,359:INFO:Defining folds
2023-11-05 23:38:16,359:INFO:Declaring metric variables
2023-11-05 23:38:16,359:INFO:Importing untrained model
2023-11-05 23:38:16,359:INFO:Declaring custom model
2023-11-05 23:38:16,359:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:38:16,361:INFO:Cross validation set to False
2023-11-05 23:38:16,361:INFO:Fitting Model
2023-11-05 23:38:21,904:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE0B40A530>)])
2023-11-05 23:38:21,904:INFO:create_model() successfully completed......................................
2023-11-05 23:38:22,053:INFO:_master_model_container: 23
2023-11-05 23:38:22,053:INFO:_display_container: 4
2023-11-05 23:38:22,101:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE0B40A530>)])
2023-11-05 23:38:22,101:INFO:finalize_model() successfully completed......................................
2023-11-05 23:38:22,309:INFO:Initializing save_model()
2023-11-05 23:38:22,309:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE0B40A530>)]), model_name=cnt_model_casual, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\josec\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer...
                 TransformerWrapper(include=['season', 'hr', 'weekday',
                                             'weathersit', 'day'],
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-11-05 23:38:22,310:INFO:Adding model into prep_pipe
2023-11-05 23:38:22,310:WARNING:Only Model saved as it was a pipeline.
2023-11-05 23:38:22,324:INFO:cnt_model_casual.pkl saved in current working directory
2023-11-05 23:38:22,365:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE0B40A530>)])
2023-11-05 23:38:22,365:INFO:save_model() successfully completed......................................
2023-11-05 23:38:22,521:INFO:Initializing plot_model()
2023-11-05 23:38:22,521:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE0B40A530>)]), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, system=True)
2023-11-05 23:38:22,521:INFO:Checking exceptions
2023-11-05 23:38:22,525:INFO:Preloading libraries
2023-11-05 23:38:22,529:INFO:Copying training dataset
2023-11-05 23:38:22,529:INFO:Plot type: error
2023-11-05 23:38:22,781:INFO:Fitting Model
2023-11-05 23:38:22,793:INFO:Scoring test/hold-out set
2023-11-05 23:38:23,124:INFO:Visual Rendered Successfully
2023-11-05 23:38:23,325:INFO:plot_model() successfully completed......................................
2023-11-05 23:38:31,759:INFO:Initializing create_model()
2023-11-05 23:38:31,759:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:38:31,759:INFO:Checking exceptions
2023-11-05 23:38:31,766:INFO:Importing libraries
2023-11-05 23:38:31,766:INFO:Copying training dataset
2023-11-05 23:38:31,766:INFO:Defining folds
2023-11-05 23:38:31,766:INFO:Declaring metric variables
2023-11-05 23:38:31,782:INFO:Importing untrained model
2023-11-05 23:38:31,782:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:38:31,782:INFO:Starting cross validation
2023-11-05 23:38:31,782:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:38:54,383:INFO:Calculating mean and std
2023-11-05 23:38:54,387:INFO:Creating metrics dataframe
2023-11-05 23:38:54,400:INFO:Finalizing model
2023-11-05 23:39:01,478:INFO:Uploading results into container
2023-11-05 23:39:01,479:INFO:Uploading model into container now
2023-11-05 23:39:01,496:INFO:_master_model_container: 24
2023-11-05 23:39:01,497:INFO:_display_container: 5
2023-11-05 23:39:01,497:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE08D719C0>
2023-11-05 23:39:01,497:INFO:create_model() successfully completed......................................
2023-11-05 23:39:01,658:INFO:Initializing tune_model()
2023-11-05 23:39:01,658:INFO:tune_model(estimator=<catboost.core.CatBoostRegressor object at 0x000001CE08D719C0>, fold=2, round=4, n_iter=2, custom_grid=None, optimize=MAE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>)
2023-11-05 23:39:01,658:INFO:Checking exceptions
2023-11-05 23:39:01,688:INFO:Copying training dataset
2023-11-05 23:39:01,698:INFO:Checking base model
2023-11-05 23:39:01,698:INFO:Base model : CatBoost Regressor
2023-11-05 23:39:01,703:INFO:Declaring metric variables
2023-11-05 23:39:01,708:INFO:Defining Hyperparameters
2023-11-05 23:39:01,908:INFO:Tuning with n_jobs=-1
2023-11-05 23:39:01,908:INFO:Initializing RandomizedSearchCV
2023-11-05 23:39:07,240:INFO:best_params: {'actual_estimator__random_strength': 0.0, 'actual_estimator__n_estimators': 230, 'actual_estimator__l2_leaf_reg': 7, 'actual_estimator__eta': 0.3, 'actual_estimator__depth': 2}
2023-11-05 23:39:07,241:INFO:Hyperparameter search completed
2023-11-05 23:39:07,241:INFO:SubProcess create_model() called ==================================
2023-11-05 23:39:07,242:INFO:Initializing create_model()
2023-11-05 23:39:07,242:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE08D736A0>, fold=KFold(n_splits=2, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE091203D0>, model_only=True, return_train_score=False, kwargs={'random_strength': 0.0, 'n_estimators': 230, 'l2_leaf_reg': 7, 'eta': 0.3, 'depth': 2})
2023-11-05 23:39:07,242:INFO:Checking exceptions
2023-11-05 23:39:07,242:INFO:Importing libraries
2023-11-05 23:39:07,242:INFO:Copying training dataset
2023-11-05 23:39:07,252:INFO:Defining folds
2023-11-05 23:39:07,253:INFO:Declaring metric variables
2023-11-05 23:39:07,257:INFO:Importing untrained model
2023-11-05 23:39:07,258:INFO:Declaring custom model
2023-11-05 23:39:07,264:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:39:07,276:INFO:Starting cross validation
2023-11-05 23:39:07,279:INFO:Cross validating with KFold(n_splits=2, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:39:08,201:INFO:Calculating mean and std
2023-11-05 23:39:08,203:INFO:Creating metrics dataframe
2023-11-05 23:39:08,210:INFO:Finalizing model
2023-11-05 23:39:09,243:INFO:Uploading results into container
2023-11-05 23:39:09,244:INFO:Uploading model into container now
2023-11-05 23:39:09,245:INFO:_master_model_container: 25
2023-11-05 23:39:09,245:INFO:_display_container: 6
2023-11-05 23:39:09,245:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE096FB6D0>
2023-11-05 23:39:09,245:INFO:create_model() successfully completed......................................
2023-11-05 23:39:09,390:INFO:SubProcess create_model() end ==================================
2023-11-05 23:39:09,390:INFO:choose_better activated
2023-11-05 23:39:09,395:INFO:SubProcess create_model() called ==================================
2023-11-05 23:39:09,395:INFO:Initializing create_model()
2023-11-05 23:39:09,395:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE08D719C0>, fold=KFold(n_splits=2, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:39:09,396:INFO:Checking exceptions
2023-11-05 23:39:09,398:INFO:Importing libraries
2023-11-05 23:39:09,398:INFO:Copying training dataset
2023-11-05 23:39:09,404:INFO:Defining folds
2023-11-05 23:39:09,404:INFO:Declaring metric variables
2023-11-05 23:39:09,405:INFO:Importing untrained model
2023-11-05 23:39:09,405:INFO:Declaring custom model
2023-11-05 23:39:09,405:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:39:09,405:INFO:Starting cross validation
2023-11-05 23:39:09,407:INFO:Cross validating with KFold(n_splits=2, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:39:14,475:INFO:Calculating mean and std
2023-11-05 23:39:14,475:INFO:Creating metrics dataframe
2023-11-05 23:39:14,478:INFO:Finalizing model
2023-11-05 23:39:19,424:INFO:Uploading results into container
2023-11-05 23:39:19,425:INFO:Uploading model into container now
2023-11-05 23:39:19,426:INFO:_master_model_container: 26
2023-11-05 23:39:19,426:INFO:_display_container: 7
2023-11-05 23:39:19,426:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE096F9090>
2023-11-05 23:39:19,426:INFO:create_model() successfully completed......................................
2023-11-05 23:39:19,556:INFO:SubProcess create_model() end ==================================
2023-11-05 23:39:19,556:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE096F9090> result for MAE is 11.0149
2023-11-05 23:39:19,557:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE096FB6D0> result for MAE is 15.1477
2023-11-05 23:39:19,557:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE096F9090> is best model
2023-11-05 23:39:19,557:INFO:choose_better completed
2023-11-05 23:39:19,557:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-11-05 23:39:19,568:INFO:_master_model_container: 26
2023-11-05 23:39:19,568:INFO:_display_container: 6
2023-11-05 23:39:19,568:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE096F9090>
2023-11-05 23:39:19,568:INFO:tune_model() successfully completed......................................
2023-11-05 23:39:19,699:INFO:Initializing finalize_model()
2023-11-05 23:39:19,699:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE096F9090>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-11-05 23:39:19,699:INFO:Finalizing <catboost.core.CatBoostRegressor object at 0x000001CE096F9090>
2023-11-05 23:39:19,703:INFO:Initializing create_model()
2023-11-05 23:39:19,703:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE096F9090>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-11-05 23:39:19,703:INFO:Checking exceptions
2023-11-05 23:39:19,705:INFO:Importing libraries
2023-11-05 23:39:19,705:INFO:Copying training dataset
2023-11-05 23:39:19,705:INFO:Defining folds
2023-11-05 23:39:19,705:INFO:Declaring metric variables
2023-11-05 23:39:19,706:INFO:Importing untrained model
2023-11-05 23:39:19,706:INFO:Declaring custom model
2023-11-05 23:39:19,706:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:39:19,707:INFO:Cross validation set to False
2023-11-05 23:39:19,707:INFO:Fitting Model
2023-11-05 23:39:25,311:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE08D73E80>)])
2023-11-05 23:39:25,311:INFO:create_model() successfully completed......................................
2023-11-05 23:39:25,441:INFO:_master_model_container: 26
2023-11-05 23:39:25,441:INFO:_display_container: 6
2023-11-05 23:39:25,490:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE08D73E80>)])
2023-11-05 23:39:25,490:INFO:finalize_model() successfully completed......................................
2023-11-05 23:39:25,693:INFO:Initializing save_model()
2023-11-05 23:39:25,693:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE08D73E80>)]), model_name=cnt_model_casual, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\josec\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer...
                 TransformerWrapper(include=['season', 'hr', 'weekday',
                                             'weathersit', 'day'],
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-11-05 23:39:25,693:INFO:Adding model into prep_pipe
2023-11-05 23:39:25,693:WARNING:Only Model saved as it was a pipeline.
2023-11-05 23:39:25,705:INFO:cnt_model_casual.pkl saved in current working directory
2023-11-05 23:39:25,747:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE08D73E80>)])
2023-11-05 23:39:25,747:INFO:save_model() successfully completed......................................
2023-11-05 23:39:25,899:INFO:Initializing plot_model()
2023-11-05 23:39:25,899:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE08D73E80>)]), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, system=True)
2023-11-05 23:39:25,899:INFO:Checking exceptions
2023-11-05 23:39:25,904:INFO:Preloading libraries
2023-11-05 23:39:25,906:INFO:Copying training dataset
2023-11-05 23:39:25,906:INFO:Plot type: error
2023-11-05 23:39:26,157:INFO:Fitting Model
2023-11-05 23:39:26,157:INFO:Scoring test/hold-out set
2023-11-05 23:39:26,181:INFO:Saving 'Prediction Error.png'
2023-11-05 23:39:26,483:INFO:Visual Rendered Successfully
2023-11-05 23:39:26,607:INFO:plot_model() successfully completed......................................
2023-11-05 23:41:38,105:INFO:Initializing load_model()
2023-11-05 23:41:38,105:INFO:load_model(model_name=cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-05 23:41:38,186:INFO:Initializing predict_model()
2023-11-05 23:41:38,186:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE092384F0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\josec\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE08DA1F00>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CE08E32A70>)
2023-11-05 23:41:38,186:INFO:Checking exceptions
2023-11-05 23:41:38,186:INFO:Preloading libraries
2023-11-05 23:41:38,186:INFO:Set up data.
2023-11-05 23:41:38,203:INFO:Set up index.
2023-11-05 23:45:36,603:INFO:PyCaret RegressionExperiment
2023-11-05 23:45:36,603:INFO:Logging name: reg-default-name
2023-11-05 23:45:36,603:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-05 23:45:36,603:INFO:version 3.1.0
2023-11-05 23:45:36,603:INFO:Initializing setup()
2023-11-05 23:45:36,603:INFO:self.USI: 4e89
2023-11-05 23:45:36,603:INFO:self._variable_keys: {'n_jobs_param', 'fold_generator', 'USI', 'target_param', 'pipeline', 'logging_param', 'fold_groups_param', 'exp_id', 'transform_target_param', 'X_test', 'seed', 'log_plots_param', '_available_plots', 'memory', 'data', '_ml_usecase', 'X_train', 'y_train', 'gpu_n_jobs_param', 'fold_shuffle_param', 'gpu_param', 'idx', 'exp_name_log', 'y_test', 'y', 'html_param', 'X'}
2023-11-05 23:45:36,603:INFO:Checking environment
2023-11-05 23:45:36,603:INFO:python_version: 3.10.4
2023-11-05 23:45:36,604:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-11-05 23:45:36,604:INFO:machine: AMD64
2023-11-05 23:45:36,604:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-05 23:45:36,607:INFO:Memory: svmem(total=8301043712, available=1250594816, percent=84.9, used=7050448896, free=1250594816)
2023-11-05 23:45:36,607:INFO:Physical Core: 10
2023-11-05 23:45:36,607:INFO:Logical Core: 12
2023-11-05 23:45:36,607:INFO:Checking libraries
2023-11-05 23:45:36,607:INFO:System:
2023-11-05 23:45:36,607:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-11-05 23:45:36,607:INFO:executable: C:\Users\josec\AppData\Local\Programs\Python\Python310\python.exe
2023-11-05 23:45:36,607:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-05 23:45:36,607:INFO:PyCaret required dependencies:
2023-11-05 23:45:36,607:INFO:                 pip: 22.0.4
2023-11-05 23:45:36,607:INFO:          setuptools: 58.1.0
2023-11-05 23:45:36,607:INFO:             pycaret: 3.1.0
2023-11-05 23:45:36,607:INFO:             IPython: 8.14.0
2023-11-05 23:45:36,607:INFO:          ipywidgets: 8.0.6
2023-11-05 23:45:36,607:INFO:                tqdm: 4.66.1
2023-11-05 23:45:36,607:INFO:               numpy: 1.23.5
2023-11-05 23:45:36,607:INFO:              pandas: 1.5.3
2023-11-05 23:45:36,607:INFO:              jinja2: 3.1.2
2023-11-05 23:45:36,607:INFO:               scipy: 1.10.1
2023-11-05 23:45:36,607:INFO:              joblib: 1.3.2
2023-11-05 23:45:36,607:INFO:             sklearn: 1.2.2
2023-11-05 23:45:36,607:INFO:                pyod: 1.1.1
2023-11-05 23:45:36,607:INFO:            imblearn: 0.11.0
2023-11-05 23:45:36,607:INFO:   category_encoders: 2.6.3
2023-11-05 23:45:36,607:INFO:            lightgbm: 4.1.0
2023-11-05 23:45:36,607:INFO:               numba: 0.58.1
2023-11-05 23:45:36,607:INFO:            requests: 2.31.0
2023-11-05 23:45:36,607:INFO:          matplotlib: 3.7.2
2023-11-05 23:45:36,607:INFO:          scikitplot: 0.3.7
2023-11-05 23:45:36,607:INFO:         yellowbrick: 1.5
2023-11-05 23:45:36,607:INFO:              plotly: 5.16.1
2023-11-05 23:45:36,607:INFO:    plotly-resampler: Not installed
2023-11-05 23:45:36,608:INFO:             kaleido: 0.2.1
2023-11-05 23:45:36,608:INFO:           schemdraw: 0.15
2023-11-05 23:45:36,608:INFO:         statsmodels: 0.14.0
2023-11-05 23:45:36,608:INFO:              sktime: 0.21.1
2023-11-05 23:45:36,608:INFO:               tbats: 1.1.3
2023-11-05 23:45:36,608:INFO:            pmdarima: 2.0.4
2023-11-05 23:45:36,608:INFO:              psutil: 5.9.5
2023-11-05 23:45:36,608:INFO:          markupsafe: 2.1.3
2023-11-05 23:45:36,608:INFO:             pickle5: Not installed
2023-11-05 23:45:36,608:INFO:         cloudpickle: 2.2.1
2023-11-05 23:45:36,608:INFO:         deprecation: 2.1.0
2023-11-05 23:45:36,608:INFO:              xxhash: 3.4.1
2023-11-05 23:45:36,608:INFO:           wurlitzer: Not installed
2023-11-05 23:45:36,608:INFO:PyCaret optional dependencies:
2023-11-05 23:45:36,608:INFO:                shap: 0.43.0
2023-11-05 23:45:36,608:INFO:           interpret: 0.4.4
2023-11-05 23:45:36,608:INFO:                umap: 0.5.4
2023-11-05 23:45:36,608:INFO:     ydata_profiling: 4.6.0
2023-11-05 23:45:36,608:INFO:  explainerdashboard: 0.4.3
2023-11-05 23:45:36,608:INFO:             autoviz: Not installed
2023-11-05 23:45:36,608:INFO:           fairlearn: 0.7.0
2023-11-05 23:45:36,608:INFO:          deepchecks: Not installed
2023-11-05 23:45:36,608:INFO:             xgboost: 2.0.0
2023-11-05 23:45:36,608:INFO:            catboost: 1.2.2
2023-11-05 23:45:36,608:INFO:              kmodes: 0.12.2
2023-11-05 23:45:36,608:INFO:             mlxtend: 0.23.0
2023-11-05 23:45:36,608:INFO:       statsforecast: 1.5.0
2023-11-05 23:45:36,608:INFO:        tune_sklearn: 0.4.6
2023-11-05 23:45:36,608:INFO:                 ray: 2.8.0
2023-11-05 23:45:36,608:INFO:            hyperopt: 0.2.7
2023-11-05 23:45:36,608:INFO:              optuna: 3.4.0
2023-11-05 23:45:36,608:INFO:               skopt: 0.9.0
2023-11-05 23:45:36,608:INFO:              mlflow: 1.30.1
2023-11-05 23:45:36,608:INFO:              gradio: 3.50.2
2023-11-05 23:45:36,608:INFO:             fastapi: 0.104.0
2023-11-05 23:45:36,608:INFO:             uvicorn: 0.23.2
2023-11-05 23:45:36,608:INFO:              m2cgen: 0.10.0
2023-11-05 23:45:36,608:INFO:           evidently: 0.2.8
2023-11-05 23:45:36,608:INFO:               fugue: 0.8.6
2023-11-05 23:45:36,608:INFO:           streamlit: 1.26.0
2023-11-05 23:45:36,608:INFO:             prophet: Not installed
2023-11-05 23:45:36,608:INFO:None
2023-11-05 23:45:36,608:INFO:Set up data.
2023-11-05 23:45:36,617:INFO:Set up folding strategy.
2023-11-05 23:45:36,617:INFO:Set up train/test split.
2023-11-05 23:45:36,622:INFO:Set up index.
2023-11-05 23:45:36,622:INFO:Assigning column types.
2023-11-05 23:45:36,625:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-05 23:45:36,625:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,629:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,633:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,670:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,696:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,696:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:45:36,698:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:45:36,699:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,701:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,704:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,744:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,774:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,775:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:45:36,776:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:45:36,777:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-05 23:45:36,781:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,784:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,819:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,847:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,847:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:45:36,849:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:45:36,852:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,855:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,890:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,916:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,917:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:45:36,918:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:45:36,919:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-05 23:45:36,925:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,961:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,987:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:45:36,988:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:45:36,989:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:45:36,995:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-05 23:45:37,030:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:45:37,057:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:45:37,058:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:45:37,059:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:45:37,060:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-05 23:45:37,114:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:45:37,143:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:45:37,143:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:45:37,145:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:45:37,190:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:45:37,219:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-05 23:45:37,219:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:45:37,220:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:45:37,221:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-05 23:45:37,263:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:45:37,291:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:45:37,293:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:45:37,336:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-05 23:45:37,362:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:45:37,364:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:45:37,364:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-05 23:45:37,431:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:45:37,432:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:45:37,503:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:45:37,504:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:45:37,505:INFO:Preparing preprocessing pipeline...
2023-11-05 23:45:37,505:INFO:Set up simple imputation.
2023-11-05 23:45:37,509:INFO:Set up encoding of ordinal features.
2023-11-05 23:45:37,511:INFO:Set up encoding of categorical features.
2023-11-05 23:45:37,511:INFO:Set up removing multicollinearity.
2023-11-05 23:45:37,511:INFO:Set up feature normalization.
2023-11-05 23:45:37,892:INFO:Finished creating preprocessing pipeline.
2023-11-05 23:45:37,921:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\josec\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer...
                 TransformerWrapper(include=['season', 'hr', 'weekday',
                                             'weathersit', 'day'],
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler()))])
2023-11-05 23:45:37,922:INFO:Creating final display dataframe.
2023-11-05 23:45:38,244:INFO:Setup _display_container:                     Description             Value
0                    Session id               125
1                        Target        registered
2                   Target type        Regression
3           Original data shape       (16510, 12)
4        Transformed data shape       (16510, 77)
5   Transformed train set shape       (13208, 77)
6    Transformed test set shape        (3302, 77)
7              Ordinal features                 2
8              Numeric features                 4
9          Categorical features                 7
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.9
18                    Normalize              True
19             Normalize method            robust
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              4e89
2023-11-05 23:45:38,305:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:45:38,307:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:45:38,367:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-05 23:45:38,369:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-05 23:45:38,370:INFO:setup() successfully completed in 1.88s...............
2023-11-05 23:45:38,370:INFO:Initializing compare_models()
2023-11-05 23:45:38,370:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, include=None, fold=5, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-05 23:45:38,370:INFO:Checking exceptions
2023-11-05 23:45:38,371:INFO:Preparing display monitor
2023-11-05 23:45:38,395:INFO:Initializing Linear Regression
2023-11-05 23:45:38,395:INFO:Total runtime is 0.0 minutes
2023-11-05 23:45:38,398:INFO:SubProcess create_model() called ==================================
2023-11-05 23:45:38,398:INFO:Initializing create_model()
2023-11-05 23:45:38,398:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=lr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:45:38,398:INFO:Checking exceptions
2023-11-05 23:45:38,398:INFO:Importing libraries
2023-11-05 23:45:38,398:INFO:Copying training dataset
2023-11-05 23:45:38,403:INFO:Defining folds
2023-11-05 23:45:38,403:INFO:Declaring metric variables
2023-11-05 23:45:38,406:INFO:Importing untrained model
2023-11-05 23:45:38,410:INFO:Linear Regression Imported successfully
2023-11-05 23:45:38,415:INFO:Starting cross validation
2023-11-05 23:45:38,418:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:45:45,531:INFO:Calculating mean and std
2023-11-05 23:45:45,535:INFO:Creating metrics dataframe
2023-11-05 23:45:45,547:INFO:Uploading results into container
2023-11-05 23:45:45,551:INFO:Uploading model into container now
2023-11-05 23:45:45,566:INFO:_master_model_container: 1
2023-11-05 23:45:45,567:INFO:_display_container: 2
2023-11-05 23:45:45,568:INFO:LinearRegression(n_jobs=-1)
2023-11-05 23:45:45,568:INFO:create_model() successfully completed......................................
2023-11-05 23:45:46,284:INFO:SubProcess create_model() end ==================================
2023-11-05 23:45:46,285:INFO:Creating metrics dataframe
2023-11-05 23:45:46,291:INFO:Initializing Lasso Regression
2023-11-05 23:45:46,291:INFO:Total runtime is 0.13160471518834432 minutes
2023-11-05 23:45:46,293:INFO:SubProcess create_model() called ==================================
2023-11-05 23:45:46,294:INFO:Initializing create_model()
2023-11-05 23:45:46,294:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=lasso, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:45:46,294:INFO:Checking exceptions
2023-11-05 23:45:46,294:INFO:Importing libraries
2023-11-05 23:45:46,294:INFO:Copying training dataset
2023-11-05 23:45:46,298:INFO:Defining folds
2023-11-05 23:45:46,299:INFO:Declaring metric variables
2023-11-05 23:45:46,302:INFO:Importing untrained model
2023-11-05 23:45:46,306:INFO:Lasso Regression Imported successfully
2023-11-05 23:45:46,312:INFO:Starting cross validation
2023-11-05 23:45:46,314:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:45:51,725:INFO:Calculating mean and std
2023-11-05 23:45:51,728:INFO:Creating metrics dataframe
2023-11-05 23:45:51,736:INFO:Uploading results into container
2023-11-05 23:45:51,739:INFO:Uploading model into container now
2023-11-05 23:45:51,740:INFO:_master_model_container: 2
2023-11-05 23:45:51,741:INFO:_display_container: 2
2023-11-05 23:45:51,741:INFO:Lasso(random_state=125)
2023-11-05 23:45:51,742:INFO:create_model() successfully completed......................................
2023-11-05 23:45:51,945:INFO:SubProcess create_model() end ==================================
2023-11-05 23:45:51,945:INFO:Creating metrics dataframe
2023-11-05 23:45:51,952:INFO:Initializing Ridge Regression
2023-11-05 23:45:51,952:INFO:Total runtime is 0.22596323490142822 minutes
2023-11-05 23:45:51,956:INFO:SubProcess create_model() called ==================================
2023-11-05 23:45:51,957:INFO:Initializing create_model()
2023-11-05 23:45:51,957:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=ridge, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:45:51,957:INFO:Checking exceptions
2023-11-05 23:45:51,957:INFO:Importing libraries
2023-11-05 23:45:51,957:INFO:Copying training dataset
2023-11-05 23:45:51,964:INFO:Defining folds
2023-11-05 23:45:51,964:INFO:Declaring metric variables
2023-11-05 23:45:51,969:INFO:Importing untrained model
2023-11-05 23:45:51,976:INFO:Ridge Regression Imported successfully
2023-11-05 23:45:51,982:INFO:Starting cross validation
2023-11-05 23:45:51,983:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:45:55,592:INFO:Calculating mean and std
2023-11-05 23:45:55,593:INFO:Creating metrics dataframe
2023-11-05 23:45:55,596:INFO:Uploading results into container
2023-11-05 23:45:55,598:INFO:Uploading model into container now
2023-11-05 23:45:55,598:INFO:_master_model_container: 3
2023-11-05 23:45:55,599:INFO:_display_container: 2
2023-11-05 23:45:55,599:INFO:Ridge(random_state=125)
2023-11-05 23:45:55,599:INFO:create_model() successfully completed......................................
2023-11-05 23:45:55,772:INFO:SubProcess create_model() end ==================================
2023-11-05 23:45:55,772:INFO:Creating metrics dataframe
2023-11-05 23:45:55,780:INFO:Initializing Elastic Net
2023-11-05 23:45:55,780:INFO:Total runtime is 0.28976237376530967 minutes
2023-11-05 23:45:55,783:INFO:SubProcess create_model() called ==================================
2023-11-05 23:45:55,783:INFO:Initializing create_model()
2023-11-05 23:45:55,783:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=en, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:45:55,783:INFO:Checking exceptions
2023-11-05 23:45:55,783:INFO:Importing libraries
2023-11-05 23:45:55,783:INFO:Copying training dataset
2023-11-05 23:45:55,791:INFO:Defining folds
2023-11-05 23:45:55,791:INFO:Declaring metric variables
2023-11-05 23:45:55,796:INFO:Importing untrained model
2023-11-05 23:45:55,803:INFO:Elastic Net Imported successfully
2023-11-05 23:45:55,812:INFO:Starting cross validation
2023-11-05 23:45:55,814:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:45:56,529:INFO:Calculating mean and std
2023-11-05 23:45:56,530:INFO:Creating metrics dataframe
2023-11-05 23:45:56,533:INFO:Uploading results into container
2023-11-05 23:45:56,533:INFO:Uploading model into container now
2023-11-05 23:45:56,533:INFO:_master_model_container: 4
2023-11-05 23:45:56,533:INFO:_display_container: 2
2023-11-05 23:45:56,533:INFO:ElasticNet(random_state=125)
2023-11-05 23:45:56,534:INFO:create_model() successfully completed......................................
2023-11-05 23:45:56,675:INFO:SubProcess create_model() end ==================================
2023-11-05 23:45:56,675:INFO:Creating metrics dataframe
2023-11-05 23:45:56,688:INFO:Initializing Least Angle Regression
2023-11-05 23:45:56,688:INFO:Total runtime is 0.3048867662747701 minutes
2023-11-05 23:45:56,694:INFO:SubProcess create_model() called ==================================
2023-11-05 23:45:56,694:INFO:Initializing create_model()
2023-11-05 23:45:56,694:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=lar, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:45:56,694:INFO:Checking exceptions
2023-11-05 23:45:56,694:INFO:Importing libraries
2023-11-05 23:45:56,694:INFO:Copying training dataset
2023-11-05 23:45:56,699:INFO:Defining folds
2023-11-05 23:45:56,699:INFO:Declaring metric variables
2023-11-05 23:45:56,704:INFO:Importing untrained model
2023-11-05 23:45:56,711:INFO:Least Angle Regression Imported successfully
2023-11-05 23:45:56,719:INFO:Starting cross validation
2023-11-05 23:45:56,722:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:45:57,495:INFO:Calculating mean and std
2023-11-05 23:45:57,497:INFO:Creating metrics dataframe
2023-11-05 23:45:57,500:INFO:Uploading results into container
2023-11-05 23:45:57,501:INFO:Uploading model into container now
2023-11-05 23:45:57,501:INFO:_master_model_container: 5
2023-11-05 23:45:57,502:INFO:_display_container: 2
2023-11-05 23:45:57,504:INFO:Lars(random_state=125)
2023-11-05 23:45:57,504:INFO:create_model() successfully completed......................................
2023-11-05 23:45:57,627:INFO:SubProcess create_model() end ==================================
2023-11-05 23:45:57,628:INFO:Creating metrics dataframe
2023-11-05 23:45:57,634:INFO:Initializing Lasso Least Angle Regression
2023-11-05 23:45:57,634:INFO:Total runtime is 0.32066103219985964 minutes
2023-11-05 23:45:57,637:INFO:SubProcess create_model() called ==================================
2023-11-05 23:45:57,637:INFO:Initializing create_model()
2023-11-05 23:45:57,637:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=llar, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:45:57,637:INFO:Checking exceptions
2023-11-05 23:45:57,637:INFO:Importing libraries
2023-11-05 23:45:57,637:INFO:Copying training dataset
2023-11-05 23:45:57,641:INFO:Defining folds
2023-11-05 23:45:57,642:INFO:Declaring metric variables
2023-11-05 23:45:57,645:INFO:Importing untrained model
2023-11-05 23:45:57,649:INFO:Lasso Least Angle Regression Imported successfully
2023-11-05 23:45:57,656:INFO:Starting cross validation
2023-11-05 23:45:57,658:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:45:58,336:INFO:Calculating mean and std
2023-11-05 23:45:58,337:INFO:Creating metrics dataframe
2023-11-05 23:45:58,339:INFO:Uploading results into container
2023-11-05 23:45:58,339:INFO:Uploading model into container now
2023-11-05 23:45:58,340:INFO:_master_model_container: 6
2023-11-05 23:45:58,340:INFO:_display_container: 2
2023-11-05 23:45:58,340:INFO:LassoLars(random_state=125)
2023-11-05 23:45:58,340:INFO:create_model() successfully completed......................................
2023-11-05 23:45:58,459:INFO:SubProcess create_model() end ==================================
2023-11-05 23:45:58,459:INFO:Creating metrics dataframe
2023-11-05 23:45:58,466:INFO:Initializing Orthogonal Matching Pursuit
2023-11-05 23:45:58,466:INFO:Total runtime is 0.33452354272206625 minutes
2023-11-05 23:45:58,469:INFO:SubProcess create_model() called ==================================
2023-11-05 23:45:58,469:INFO:Initializing create_model()
2023-11-05 23:45:58,469:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=omp, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:45:58,469:INFO:Checking exceptions
2023-11-05 23:45:58,469:INFO:Importing libraries
2023-11-05 23:45:58,469:INFO:Copying training dataset
2023-11-05 23:45:58,474:INFO:Defining folds
2023-11-05 23:45:58,474:INFO:Declaring metric variables
2023-11-05 23:45:58,477:INFO:Importing untrained model
2023-11-05 23:45:58,481:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-05 23:45:58,489:INFO:Starting cross validation
2023-11-05 23:45:58,491:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:45:59,162:INFO:Calculating mean and std
2023-11-05 23:45:59,163:INFO:Creating metrics dataframe
2023-11-05 23:45:59,165:INFO:Uploading results into container
2023-11-05 23:45:59,165:INFO:Uploading model into container now
2023-11-05 23:45:59,166:INFO:_master_model_container: 7
2023-11-05 23:45:59,166:INFO:_display_container: 2
2023-11-05 23:45:59,166:INFO:OrthogonalMatchingPursuit()
2023-11-05 23:45:59,166:INFO:create_model() successfully completed......................................
2023-11-05 23:45:59,287:INFO:SubProcess create_model() end ==================================
2023-11-05 23:45:59,288:INFO:Creating metrics dataframe
2023-11-05 23:45:59,296:INFO:Initializing Bayesian Ridge
2023-11-05 23:45:59,296:INFO:Total runtime is 0.3483602046966553 minutes
2023-11-05 23:45:59,300:INFO:SubProcess create_model() called ==================================
2023-11-05 23:45:59,300:INFO:Initializing create_model()
2023-11-05 23:45:59,300:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=br, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:45:59,300:INFO:Checking exceptions
2023-11-05 23:45:59,300:INFO:Importing libraries
2023-11-05 23:45:59,301:INFO:Copying training dataset
2023-11-05 23:45:59,306:INFO:Defining folds
2023-11-05 23:45:59,306:INFO:Declaring metric variables
2023-11-05 23:45:59,309:INFO:Importing untrained model
2023-11-05 23:45:59,315:INFO:Bayesian Ridge Imported successfully
2023-11-05 23:45:59,322:INFO:Starting cross validation
2023-11-05 23:45:59,324:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:46:00,277:INFO:Calculating mean and std
2023-11-05 23:46:00,278:INFO:Creating metrics dataframe
2023-11-05 23:46:00,280:INFO:Uploading results into container
2023-11-05 23:46:00,280:INFO:Uploading model into container now
2023-11-05 23:46:00,281:INFO:_master_model_container: 8
2023-11-05 23:46:00,281:INFO:_display_container: 2
2023-11-05 23:46:00,281:INFO:BayesianRidge()
2023-11-05 23:46:00,281:INFO:create_model() successfully completed......................................
2023-11-05 23:46:00,397:INFO:SubProcess create_model() end ==================================
2023-11-05 23:46:00,397:INFO:Creating metrics dataframe
2023-11-05 23:46:00,409:INFO:Initializing Passive Aggressive Regressor
2023-11-05 23:46:00,409:INFO:Total runtime is 0.3669088443120321 minutes
2023-11-05 23:46:00,413:INFO:SubProcess create_model() called ==================================
2023-11-05 23:46:00,414:INFO:Initializing create_model()
2023-11-05 23:46:00,414:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=par, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:46:00,414:INFO:Checking exceptions
2023-11-05 23:46:00,414:INFO:Importing libraries
2023-11-05 23:46:00,414:INFO:Copying training dataset
2023-11-05 23:46:00,418:INFO:Defining folds
2023-11-05 23:46:00,419:INFO:Declaring metric variables
2023-11-05 23:46:00,423:INFO:Importing untrained model
2023-11-05 23:46:00,426:INFO:Passive Aggressive Regressor Imported successfully
2023-11-05 23:46:00,435:INFO:Starting cross validation
2023-11-05 23:46:00,437:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:46:01,175:INFO:Calculating mean and std
2023-11-05 23:46:01,176:INFO:Creating metrics dataframe
2023-11-05 23:46:01,178:INFO:Uploading results into container
2023-11-05 23:46:01,178:INFO:Uploading model into container now
2023-11-05 23:46:01,179:INFO:_master_model_container: 9
2023-11-05 23:46:01,179:INFO:_display_container: 2
2023-11-05 23:46:01,179:INFO:PassiveAggressiveRegressor(random_state=125)
2023-11-05 23:46:01,179:INFO:create_model() successfully completed......................................
2023-11-05 23:46:01,296:INFO:SubProcess create_model() end ==================================
2023-11-05 23:46:01,296:INFO:Creating metrics dataframe
2023-11-05 23:46:01,306:INFO:Initializing Huber Regressor
2023-11-05 23:46:01,306:INFO:Total runtime is 0.3818581302960714 minutes
2023-11-05 23:46:01,312:INFO:SubProcess create_model() called ==================================
2023-11-05 23:46:01,313:INFO:Initializing create_model()
2023-11-05 23:46:01,313:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=huber, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:46:01,313:INFO:Checking exceptions
2023-11-05 23:46:01,313:INFO:Importing libraries
2023-11-05 23:46:01,313:INFO:Copying training dataset
2023-11-05 23:46:01,322:INFO:Defining folds
2023-11-05 23:46:01,322:INFO:Declaring metric variables
2023-11-05 23:46:01,325:INFO:Importing untrained model
2023-11-05 23:46:01,332:INFO:Huber Regressor Imported successfully
2023-11-05 23:46:01,341:INFO:Starting cross validation
2023-11-05 23:46:01,343:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:46:04,304:INFO:Calculating mean and std
2023-11-05 23:46:04,306:INFO:Creating metrics dataframe
2023-11-05 23:46:04,319:INFO:Uploading results into container
2023-11-05 23:46:04,320:INFO:Uploading model into container now
2023-11-05 23:46:04,321:INFO:_master_model_container: 10
2023-11-05 23:46:04,322:INFO:_display_container: 2
2023-11-05 23:46:04,322:INFO:HuberRegressor()
2023-11-05 23:46:04,322:INFO:create_model() successfully completed......................................
2023-11-05 23:46:04,472:INFO:SubProcess create_model() end ==================================
2023-11-05 23:46:04,472:INFO:Creating metrics dataframe
2023-11-05 23:46:04,484:INFO:Initializing K Neighbors Regressor
2023-11-05 23:46:04,484:INFO:Total runtime is 0.4348283648490906 minutes
2023-11-05 23:46:04,488:INFO:SubProcess create_model() called ==================================
2023-11-05 23:46:04,488:INFO:Initializing create_model()
2023-11-05 23:46:04,488:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=knn, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:46:04,488:INFO:Checking exceptions
2023-11-05 23:46:04,489:INFO:Importing libraries
2023-11-05 23:46:04,489:INFO:Copying training dataset
2023-11-05 23:46:04,496:INFO:Defining folds
2023-11-05 23:46:04,496:INFO:Declaring metric variables
2023-11-05 23:46:04,500:INFO:Importing untrained model
2023-11-05 23:46:04,508:INFO:K Neighbors Regressor Imported successfully
2023-11-05 23:46:04,518:INFO:Starting cross validation
2023-11-05 23:46:04,520:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:46:06,376:INFO:Calculating mean and std
2023-11-05 23:46:06,377:INFO:Creating metrics dataframe
2023-11-05 23:46:06,383:INFO:Uploading results into container
2023-11-05 23:46:06,384:INFO:Uploading model into container now
2023-11-05 23:46:06,384:INFO:_master_model_container: 11
2023-11-05 23:46:06,384:INFO:_display_container: 2
2023-11-05 23:46:06,385:INFO:KNeighborsRegressor(n_jobs=-1)
2023-11-05 23:46:06,385:INFO:create_model() successfully completed......................................
2023-11-05 23:46:06,531:INFO:SubProcess create_model() end ==================================
2023-11-05 23:46:06,531:INFO:Creating metrics dataframe
2023-11-05 23:46:06,545:INFO:Initializing Decision Tree Regressor
2023-11-05 23:46:06,545:INFO:Total runtime is 0.4691676259040833 minutes
2023-11-05 23:46:06,549:INFO:SubProcess create_model() called ==================================
2023-11-05 23:46:06,549:INFO:Initializing create_model()
2023-11-05 23:46:06,550:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=dt, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:46:06,550:INFO:Checking exceptions
2023-11-05 23:46:06,550:INFO:Importing libraries
2023-11-05 23:46:06,550:INFO:Copying training dataset
2023-11-05 23:46:06,557:INFO:Defining folds
2023-11-05 23:46:06,557:INFO:Declaring metric variables
2023-11-05 23:46:06,561:INFO:Importing untrained model
2023-11-05 23:46:06,568:INFO:Decision Tree Regressor Imported successfully
2023-11-05 23:46:06,579:INFO:Starting cross validation
2023-11-05 23:46:06,580:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:46:07,725:INFO:Calculating mean and std
2023-11-05 23:46:07,726:INFO:Creating metrics dataframe
2023-11-05 23:46:07,731:INFO:Uploading results into container
2023-11-05 23:46:07,732:INFO:Uploading model into container now
2023-11-05 23:46:07,732:INFO:_master_model_container: 12
2023-11-05 23:46:07,732:INFO:_display_container: 2
2023-11-05 23:46:07,733:INFO:DecisionTreeRegressor(random_state=125)
2023-11-05 23:46:07,733:INFO:create_model() successfully completed......................................
2023-11-05 23:46:07,882:INFO:SubProcess create_model() end ==================================
2023-11-05 23:46:07,883:INFO:Creating metrics dataframe
2023-11-05 23:46:07,896:INFO:Initializing Random Forest Regressor
2023-11-05 23:46:07,896:INFO:Total runtime is 0.49168276786804205 minutes
2023-11-05 23:46:07,900:INFO:SubProcess create_model() called ==================================
2023-11-05 23:46:07,900:INFO:Initializing create_model()
2023-11-05 23:46:07,901:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=rf, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:46:07,901:INFO:Checking exceptions
2023-11-05 23:46:07,901:INFO:Importing libraries
2023-11-05 23:46:07,901:INFO:Copying training dataset
2023-11-05 23:46:07,907:INFO:Defining folds
2023-11-05 23:46:07,907:INFO:Declaring metric variables
2023-11-05 23:46:07,911:INFO:Importing untrained model
2023-11-05 23:46:07,917:INFO:Random Forest Regressor Imported successfully
2023-11-05 23:46:07,929:INFO:Starting cross validation
2023-11-05 23:46:07,933:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:46:21,970:INFO:Calculating mean and std
2023-11-05 23:46:21,972:INFO:Creating metrics dataframe
2023-11-05 23:46:21,977:INFO:Uploading results into container
2023-11-05 23:46:21,978:INFO:Uploading model into container now
2023-11-05 23:46:21,978:INFO:_master_model_container: 13
2023-11-05 23:46:21,978:INFO:_display_container: 2
2023-11-05 23:46:21,979:INFO:RandomForestRegressor(n_jobs=-1, random_state=125)
2023-11-05 23:46:21,979:INFO:create_model() successfully completed......................................
2023-11-05 23:46:22,134:INFO:SubProcess create_model() end ==================================
2023-11-05 23:46:22,134:INFO:Creating metrics dataframe
2023-11-05 23:46:22,149:INFO:Initializing Extra Trees Regressor
2023-11-05 23:46:22,149:INFO:Total runtime is 0.7292384862899781 minutes
2023-11-05 23:46:22,155:INFO:SubProcess create_model() called ==================================
2023-11-05 23:46:22,156:INFO:Initializing create_model()
2023-11-05 23:46:22,156:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=et, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:46:22,156:INFO:Checking exceptions
2023-11-05 23:46:22,156:INFO:Importing libraries
2023-11-05 23:46:22,156:INFO:Copying training dataset
2023-11-05 23:46:22,166:INFO:Defining folds
2023-11-05 23:46:22,166:INFO:Declaring metric variables
2023-11-05 23:46:22,170:INFO:Importing untrained model
2023-11-05 23:46:22,177:INFO:Extra Trees Regressor Imported successfully
2023-11-05 23:46:22,188:INFO:Starting cross validation
2023-11-05 23:46:22,191:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:46:35,973:INFO:Calculating mean and std
2023-11-05 23:46:35,975:INFO:Creating metrics dataframe
2023-11-05 23:46:35,981:INFO:Uploading results into container
2023-11-05 23:46:35,983:INFO:Uploading model into container now
2023-11-05 23:46:35,984:INFO:_master_model_container: 14
2023-11-05 23:46:35,984:INFO:_display_container: 2
2023-11-05 23:46:35,985:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=125)
2023-11-05 23:46:35,985:INFO:create_model() successfully completed......................................
2023-11-05 23:46:36,197:INFO:SubProcess create_model() end ==================================
2023-11-05 23:46:36,197:INFO:Creating metrics dataframe
2023-11-05 23:46:36,225:INFO:Initializing AdaBoost Regressor
2023-11-05 23:46:36,225:INFO:Total runtime is 0.9638419151306153 minutes
2023-11-05 23:46:36,234:INFO:SubProcess create_model() called ==================================
2023-11-05 23:46:36,235:INFO:Initializing create_model()
2023-11-05 23:46:36,235:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=ada, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:46:36,235:INFO:Checking exceptions
2023-11-05 23:46:36,235:INFO:Importing libraries
2023-11-05 23:46:36,235:INFO:Copying training dataset
2023-11-05 23:46:36,249:INFO:Defining folds
2023-11-05 23:46:36,249:INFO:Declaring metric variables
2023-11-05 23:46:36,254:INFO:Importing untrained model
2023-11-05 23:46:36,262:INFO:AdaBoost Regressor Imported successfully
2023-11-05 23:46:36,282:INFO:Starting cross validation
2023-11-05 23:46:36,286:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:46:38,996:INFO:Calculating mean and std
2023-11-05 23:46:38,997:INFO:Creating metrics dataframe
2023-11-05 23:46:39,007:INFO:Uploading results into container
2023-11-05 23:46:39,008:INFO:Uploading model into container now
2023-11-05 23:46:39,008:INFO:_master_model_container: 15
2023-11-05 23:46:39,008:INFO:_display_container: 2
2023-11-05 23:46:39,009:INFO:AdaBoostRegressor(random_state=125)
2023-11-05 23:46:39,009:INFO:create_model() successfully completed......................................
2023-11-05 23:46:39,142:INFO:SubProcess create_model() end ==================================
2023-11-05 23:46:39,142:INFO:Creating metrics dataframe
2023-11-05 23:46:39,153:INFO:Initializing Gradient Boosting Regressor
2023-11-05 23:46:39,153:INFO:Total runtime is 1.0126385211944582 minutes
2023-11-05 23:46:39,157:INFO:SubProcess create_model() called ==================================
2023-11-05 23:46:39,158:INFO:Initializing create_model()
2023-11-05 23:46:39,158:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=gbr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:46:39,158:INFO:Checking exceptions
2023-11-05 23:46:39,158:INFO:Importing libraries
2023-11-05 23:46:39,158:INFO:Copying training dataset
2023-11-05 23:46:39,163:INFO:Defining folds
2023-11-05 23:46:39,164:INFO:Declaring metric variables
2023-11-05 23:46:39,172:INFO:Importing untrained model
2023-11-05 23:46:39,177:INFO:Gradient Boosting Regressor Imported successfully
2023-11-05 23:46:39,183:INFO:Starting cross validation
2023-11-05 23:46:39,185:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:46:42,760:INFO:Calculating mean and std
2023-11-05 23:46:42,761:INFO:Creating metrics dataframe
2023-11-05 23:46:42,765:INFO:Uploading results into container
2023-11-05 23:46:42,766:INFO:Uploading model into container now
2023-11-05 23:46:42,767:INFO:_master_model_container: 16
2023-11-05 23:46:42,767:INFO:_display_container: 2
2023-11-05 23:46:42,768:INFO:GradientBoostingRegressor(random_state=125)
2023-11-05 23:46:42,768:INFO:create_model() successfully completed......................................
2023-11-05 23:46:42,909:INFO:SubProcess create_model() end ==================================
2023-11-05 23:46:42,909:INFO:Creating metrics dataframe
2023-11-05 23:46:42,924:INFO:Initializing Extreme Gradient Boosting
2023-11-05 23:46:42,924:INFO:Total runtime is 1.075483318169912 minutes
2023-11-05 23:46:42,929:INFO:SubProcess create_model() called ==================================
2023-11-05 23:46:42,929:INFO:Initializing create_model()
2023-11-05 23:46:42,929:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=xgboost, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:46:42,929:INFO:Checking exceptions
2023-11-05 23:46:42,929:INFO:Importing libraries
2023-11-05 23:46:42,929:INFO:Copying training dataset
2023-11-05 23:46:42,935:INFO:Defining folds
2023-11-05 23:46:42,935:INFO:Declaring metric variables
2023-11-05 23:46:42,939:INFO:Importing untrained model
2023-11-05 23:46:42,946:INFO:Extreme Gradient Boosting Imported successfully
2023-11-05 23:46:42,956:INFO:Starting cross validation
2023-11-05 23:46:42,959:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:46:44,352:INFO:Calculating mean and std
2023-11-05 23:46:44,354:INFO:Creating metrics dataframe
2023-11-05 23:46:44,358:INFO:Uploading results into container
2023-11-05 23:46:44,359:INFO:Uploading model into container now
2023-11-05 23:46:44,360:INFO:_master_model_container: 17
2023-11-05 23:46:44,360:INFO:_display_container: 2
2023-11-05 23:46:44,361:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=125, ...)
2023-11-05 23:46:44,361:INFO:create_model() successfully completed......................................
2023-11-05 23:46:44,493:INFO:SubProcess create_model() end ==================================
2023-11-05 23:46:44,495:INFO:Creating metrics dataframe
2023-11-05 23:46:44,515:INFO:Initializing Light Gradient Boosting Machine
2023-11-05 23:46:44,516:INFO:Total runtime is 1.1020193219184877 minutes
2023-11-05 23:46:44,521:INFO:SubProcess create_model() called ==================================
2023-11-05 23:46:44,521:INFO:Initializing create_model()
2023-11-05 23:46:44,521:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:46:44,521:INFO:Checking exceptions
2023-11-05 23:46:44,521:INFO:Importing libraries
2023-11-05 23:46:44,521:INFO:Copying training dataset
2023-11-05 23:46:44,531:INFO:Defining folds
2023-11-05 23:46:44,531:INFO:Declaring metric variables
2023-11-05 23:46:44,536:INFO:Importing untrained model
2023-11-05 23:46:44,542:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-05 23:46:44,549:INFO:Starting cross validation
2023-11-05 23:46:44,551:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:46:46,606:INFO:Calculating mean and std
2023-11-05 23:46:46,608:INFO:Creating metrics dataframe
2023-11-05 23:46:46,613:INFO:Uploading results into container
2023-11-05 23:46:46,614:INFO:Uploading model into container now
2023-11-05 23:46:46,615:INFO:_master_model_container: 18
2023-11-05 23:46:46,615:INFO:_display_container: 2
2023-11-05 23:46:46,616:INFO:LGBMRegressor(n_jobs=-1, random_state=125)
2023-11-05 23:46:46,616:INFO:create_model() successfully completed......................................
2023-11-05 23:46:46,790:INFO:SubProcess create_model() end ==================================
2023-11-05 23:46:46,791:INFO:Creating metrics dataframe
2023-11-05 23:46:46,811:INFO:Initializing CatBoost Regressor
2023-11-05 23:46:46,811:INFO:Total runtime is 1.1402701695760094 minutes
2023-11-05 23:46:46,815:INFO:SubProcess create_model() called ==================================
2023-11-05 23:46:46,815:INFO:Initializing create_model()
2023-11-05 23:46:46,815:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=catboost, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:46:46,816:INFO:Checking exceptions
2023-11-05 23:46:46,816:INFO:Importing libraries
2023-11-05 23:46:46,816:INFO:Copying training dataset
2023-11-05 23:46:46,823:INFO:Defining folds
2023-11-05 23:46:46,824:INFO:Declaring metric variables
2023-11-05 23:46:46,832:INFO:Importing untrained model
2023-11-05 23:46:46,844:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:46:46,852:INFO:Starting cross validation
2023-11-05 23:46:46,854:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:46:57,389:INFO:Calculating mean and std
2023-11-05 23:46:57,391:INFO:Creating metrics dataframe
2023-11-05 23:46:57,397:INFO:Uploading results into container
2023-11-05 23:46:57,398:INFO:Uploading model into container now
2023-11-05 23:46:57,398:INFO:_master_model_container: 19
2023-11-05 23:46:57,399:INFO:_display_container: 2
2023-11-05 23:46:57,399:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0B673190>
2023-11-05 23:46:57,399:INFO:create_model() successfully completed......................................
2023-11-05 23:46:57,576:INFO:SubProcess create_model() end ==================================
2023-11-05 23:46:57,576:INFO:Creating metrics dataframe
2023-11-05 23:46:57,593:INFO:Initializing Dummy Regressor
2023-11-05 23:46:57,594:INFO:Total runtime is 1.3199865341186525 minutes
2023-11-05 23:46:57,601:INFO:SubProcess create_model() called ==================================
2023-11-05 23:46:57,601:INFO:Initializing create_model()
2023-11-05 23:46:57,602:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=dummy, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE0B672DA0>, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:46:57,602:INFO:Checking exceptions
2023-11-05 23:46:57,602:INFO:Importing libraries
2023-11-05 23:46:57,602:INFO:Copying training dataset
2023-11-05 23:46:57,613:INFO:Defining folds
2023-11-05 23:46:57,614:INFO:Declaring metric variables
2023-11-05 23:46:57,618:INFO:Importing untrained model
2023-11-05 23:46:57,625:INFO:Dummy Regressor Imported successfully
2023-11-05 23:46:57,639:INFO:Starting cross validation
2023-11-05 23:46:57,643:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:46:58,790:INFO:Calculating mean and std
2023-11-05 23:46:58,792:INFO:Creating metrics dataframe
2023-11-05 23:46:58,796:INFO:Uploading results into container
2023-11-05 23:46:58,797:INFO:Uploading model into container now
2023-11-05 23:46:58,798:INFO:_master_model_container: 20
2023-11-05 23:46:58,798:INFO:_display_container: 2
2023-11-05 23:46:58,798:INFO:DummyRegressor()
2023-11-05 23:46:58,798:INFO:create_model() successfully completed......................................
2023-11-05 23:46:58,950:INFO:SubProcess create_model() end ==================================
2023-11-05 23:46:58,950:INFO:Creating metrics dataframe
2023-11-05 23:46:58,985:INFO:Initializing create_model()
2023-11-05 23:46:58,985:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE0B673190>, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:46:58,986:INFO:Checking exceptions
2023-11-05 23:46:58,988:INFO:Importing libraries
2023-11-05 23:46:58,988:INFO:Copying training dataset
2023-11-05 23:46:59,001:INFO:Defining folds
2023-11-05 23:46:59,001:INFO:Declaring metric variables
2023-11-05 23:46:59,001:INFO:Importing untrained model
2023-11-05 23:46:59,001:INFO:Declaring custom model
2023-11-05 23:46:59,001:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:46:59,004:INFO:Cross validation set to False
2023-11-05 23:46:59,004:INFO:Fitting Model
2023-11-05 23:47:04,621:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0B673460>
2023-11-05 23:47:04,621:INFO:create_model() successfully completed......................................
2023-11-05 23:47:04,806:INFO:_master_model_container: 20
2023-11-05 23:47:04,807:INFO:_display_container: 2
2023-11-05 23:47:04,807:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0B673460>
2023-11-05 23:47:04,807:INFO:compare_models() successfully completed......................................
2023-11-05 23:49:28,647:INFO:Initializing create_model()
2023-11-05 23:49:28,648:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:49:28,648:INFO:Checking exceptions
2023-11-05 23:49:28,680:INFO:Importing libraries
2023-11-05 23:49:28,680:INFO:Copying training dataset
2023-11-05 23:49:28,698:INFO:Defining folds
2023-11-05 23:49:28,698:INFO:Declaring metric variables
2023-11-05 23:49:28,704:INFO:Importing untrained model
2023-11-05 23:49:28,710:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:49:28,719:INFO:Starting cross validation
2023-11-05 23:49:28,725:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:49:44,101:INFO:Calculating mean and std
2023-11-05 23:49:44,104:INFO:Creating metrics dataframe
2023-11-05 23:49:44,119:INFO:Finalizing model
2023-11-05 23:49:49,853:INFO:Uploading results into container
2023-11-05 23:49:49,855:INFO:Uploading model into container now
2023-11-05 23:49:49,881:INFO:_master_model_container: 21
2023-11-05 23:49:49,881:INFO:_display_container: 3
2023-11-05 23:49:49,881:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0B40B3D0>
2023-11-05 23:49:49,881:INFO:create_model() successfully completed......................................
2023-11-05 23:49:50,293:INFO:Initializing tune_model()
2023-11-05 23:49:50,293:INFO:tune_model(estimator=<catboost.core.CatBoostRegressor object at 0x000001CE0B40B3D0>, fold=2, round=4, n_iter=2, custom_grid=None, optimize=MAE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>)
2023-11-05 23:49:50,293:INFO:Checking exceptions
2023-11-05 23:49:50,309:INFO:Copying training dataset
2023-11-05 23:49:50,314:INFO:Checking base model
2023-11-05 23:49:50,314:INFO:Base model : CatBoost Regressor
2023-11-05 23:49:50,319:INFO:Declaring metric variables
2023-11-05 23:49:50,324:INFO:Defining Hyperparameters
2023-11-05 23:49:50,515:INFO:Tuning with n_jobs=-1
2023-11-05 23:49:50,515:INFO:Initializing RandomizedSearchCV
2023-11-05 23:50:03,168:INFO:best_params: {'actual_estimator__random_strength': 0.4, 'actual_estimator__n_estimators': 300, 'actual_estimator__l2_leaf_reg': 5, 'actual_estimator__eta': 0.0001, 'actual_estimator__depth': 11}
2023-11-05 23:50:03,169:INFO:Hyperparameter search completed
2023-11-05 23:50:03,170:INFO:SubProcess create_model() called ==================================
2023-11-05 23:50:03,170:INFO:Initializing create_model()
2023-11-05 23:50:03,170:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE0B40AFE0>, fold=KFold(n_splits=2, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE095267A0>, model_only=True, return_train_score=False, kwargs={'random_strength': 0.4, 'n_estimators': 300, 'l2_leaf_reg': 5, 'eta': 0.0001, 'depth': 11})
2023-11-05 23:50:03,170:INFO:Checking exceptions
2023-11-05 23:50:03,170:INFO:Importing libraries
2023-11-05 23:50:03,171:INFO:Copying training dataset
2023-11-05 23:50:03,178:INFO:Defining folds
2023-11-05 23:50:03,178:INFO:Declaring metric variables
2023-11-05 23:50:03,184:INFO:Importing untrained model
2023-11-05 23:50:03,184:INFO:Declaring custom model
2023-11-05 23:50:03,189:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:50:03,199:INFO:Starting cross validation
2023-11-05 23:50:03,202:INFO:Cross validating with KFold(n_splits=2, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:50:13,304:INFO:Calculating mean and std
2023-11-05 23:50:13,305:INFO:Creating metrics dataframe
2023-11-05 23:50:13,311:INFO:Finalizing model
2023-11-05 23:50:21,766:INFO:Uploading results into container
2023-11-05 23:50:21,768:INFO:Uploading model into container now
2023-11-05 23:50:21,770:INFO:_master_model_container: 22
2023-11-05 23:50:21,770:INFO:_display_container: 4
2023-11-05 23:50:21,770:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0B29E4D0>
2023-11-05 23:50:21,770:INFO:create_model() successfully completed......................................
2023-11-05 23:50:21,901:INFO:SubProcess create_model() end ==================================
2023-11-05 23:50:21,901:INFO:choose_better activated
2023-11-05 23:50:21,904:INFO:SubProcess create_model() called ==================================
2023-11-05 23:50:21,905:INFO:Initializing create_model()
2023-11-05 23:50:21,905:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE0B40B3D0>, fold=KFold(n_splits=2, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:50:21,905:INFO:Checking exceptions
2023-11-05 23:50:21,906:INFO:Importing libraries
2023-11-05 23:50:21,906:INFO:Copying training dataset
2023-11-05 23:50:21,911:INFO:Defining folds
2023-11-05 23:50:21,911:INFO:Declaring metric variables
2023-11-05 23:50:21,912:INFO:Importing untrained model
2023-11-05 23:50:21,912:INFO:Declaring custom model
2023-11-05 23:50:21,912:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:50:21,912:INFO:Starting cross validation
2023-11-05 23:50:21,913:INFO:Cross validating with KFold(n_splits=2, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:50:26,729:INFO:Calculating mean and std
2023-11-05 23:50:26,729:INFO:Creating metrics dataframe
2023-11-05 23:50:26,732:INFO:Finalizing model
2023-11-05 23:50:31,770:INFO:Uploading results into container
2023-11-05 23:50:31,770:INFO:Uploading model into container now
2023-11-05 23:50:31,771:INFO:_master_model_container: 23
2023-11-05 23:50:31,771:INFO:_display_container: 5
2023-11-05 23:50:31,771:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0B29C1F0>
2023-11-05 23:50:31,771:INFO:create_model() successfully completed......................................
2023-11-05 23:50:31,912:INFO:SubProcess create_model() end ==================================
2023-11-05 23:50:31,912:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0B29C1F0> result for MAE is 38.626
2023-11-05 23:50:31,913:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0B29E4D0> result for MAE is 112.8095
2023-11-05 23:50:31,913:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0B29C1F0> is best model
2023-11-05 23:50:31,913:INFO:choose_better completed
2023-11-05 23:50:31,913:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-11-05 23:50:31,924:INFO:_master_model_container: 23
2023-11-05 23:50:31,924:INFO:_display_container: 4
2023-11-05 23:50:31,924:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0B29C1F0>
2023-11-05 23:50:31,924:INFO:tune_model() successfully completed......................................
2023-11-05 23:50:32,069:INFO:Initializing finalize_model()
2023-11-05 23:50:32,069:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE0B29C1F0>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-11-05 23:50:32,069:INFO:Finalizing <catboost.core.CatBoostRegressor object at 0x000001CE0B29C1F0>
2023-11-05 23:50:32,073:INFO:Initializing create_model()
2023-11-05 23:50:32,073:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE0B29C1F0>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-11-05 23:50:32,073:INFO:Checking exceptions
2023-11-05 23:50:32,075:INFO:Importing libraries
2023-11-05 23:50:32,075:INFO:Copying training dataset
2023-11-05 23:50:32,075:INFO:Defining folds
2023-11-05 23:50:32,075:INFO:Declaring metric variables
2023-11-05 23:50:32,077:INFO:Importing untrained model
2023-11-05 23:50:32,077:INFO:Declaring custom model
2023-11-05 23:50:32,077:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:50:32,078:INFO:Cross validation set to False
2023-11-05 23:50:32,078:INFO:Fitting Model
2023-11-05 23:50:38,217:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE0B40B760>)])
2023-11-05 23:50:38,218:INFO:create_model() successfully completed......................................
2023-11-05 23:50:38,360:INFO:_master_model_container: 23
2023-11-05 23:50:38,361:INFO:_display_container: 4
2023-11-05 23:50:38,417:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE0B40B760>)])
2023-11-05 23:50:38,417:INFO:finalize_model() successfully completed......................................
2023-11-05 23:50:38,634:INFO:Initializing save_model()
2023-11-05 23:50:38,634:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE0B40B760>)]), model_name=cnt_model_registered, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\josec\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer...
                 TransformerWrapper(include=['season', 'hr', 'weekday',
                                             'weathersit', 'day'],
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-11-05 23:50:38,634:INFO:Adding model into prep_pipe
2023-11-05 23:50:38,635:WARNING:Only Model saved as it was a pipeline.
2023-11-05 23:50:38,647:INFO:cnt_model_registered.pkl saved in current working directory
2023-11-05 23:50:38,690:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE0B40B760>)])
2023-11-05 23:50:38,690:INFO:save_model() successfully completed......................................
2023-11-05 23:50:38,847:INFO:Initializing plot_model()
2023-11-05 23:50:38,847:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE0B40B760>)]), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, system=True)
2023-11-05 23:50:38,848:INFO:Checking exceptions
2023-11-05 23:50:38,852:INFO:Preloading libraries
2023-11-05 23:50:38,854:INFO:Copying training dataset
2023-11-05 23:50:38,855:INFO:Plot type: error
2023-11-05 23:50:39,090:INFO:Fitting Model
2023-11-05 23:50:39,099:INFO:Scoring test/hold-out set
2023-11-05 23:50:39,392:INFO:Visual Rendered Successfully
2023-11-05 23:50:39,571:INFO:plot_model() successfully completed......................................
2023-11-05 23:51:00,849:INFO:Initializing create_model()
2023-11-05 23:51:00,850:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:51:00,850:INFO:Checking exceptions
2023-11-05 23:51:00,859:INFO:Importing libraries
2023-11-05 23:51:00,859:INFO:Copying training dataset
2023-11-05 23:51:00,859:INFO:Defining folds
2023-11-05 23:51:00,859:INFO:Declaring metric variables
2023-11-05 23:51:00,874:INFO:Importing untrained model
2023-11-05 23:51:00,874:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:51:00,874:INFO:Starting cross validation
2023-11-05 23:51:00,889:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:51:19,087:INFO:Calculating mean and std
2023-11-05 23:51:19,091:INFO:Creating metrics dataframe
2023-11-05 23:51:19,109:INFO:Finalizing model
2023-11-05 23:51:24,351:INFO:Uploading results into container
2023-11-05 23:51:24,352:INFO:Uploading model into container now
2023-11-05 23:51:24,370:INFO:_master_model_container: 24
2023-11-05 23:51:24,370:INFO:_display_container: 5
2023-11-05 23:51:24,370:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE08DA0190>
2023-11-05 23:51:24,370:INFO:create_model() successfully completed......................................
2023-11-05 23:51:24,527:INFO:Initializing tune_model()
2023-11-05 23:51:24,527:INFO:tune_model(estimator=<catboost.core.CatBoostRegressor object at 0x000001CE08DA0190>, fold=2, round=4, n_iter=2, custom_grid=None, optimize=MAE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>)
2023-11-05 23:51:24,528:INFO:Checking exceptions
2023-11-05 23:51:24,550:INFO:Copying training dataset
2023-11-05 23:51:24,555:INFO:Checking base model
2023-11-05 23:51:24,555:INFO:Base model : CatBoost Regressor
2023-11-05 23:51:24,560:INFO:Declaring metric variables
2023-11-05 23:51:24,565:INFO:Defining Hyperparameters
2023-11-05 23:51:24,724:INFO:Tuning with n_jobs=-1
2023-11-05 23:51:24,725:INFO:Initializing RandomizedSearchCV
2023-11-05 23:51:35,330:INFO:best_params: {'actual_estimator__random_strength': 0.4, 'actual_estimator__n_estimators': 300, 'actual_estimator__l2_leaf_reg': 5, 'actual_estimator__eta': 0.0001, 'actual_estimator__depth': 11}
2023-11-05 23:51:35,331:INFO:Hyperparameter search completed
2023-11-05 23:51:35,331:INFO:SubProcess create_model() called ==================================
2023-11-05 23:51:35,331:INFO:Initializing create_model()
2023-11-05 23:51:35,331:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE09435390>, fold=KFold(n_splits=2, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CE090CFDF0>, model_only=True, return_train_score=False, kwargs={'random_strength': 0.4, 'n_estimators': 300, 'l2_leaf_reg': 5, 'eta': 0.0001, 'depth': 11})
2023-11-05 23:51:35,332:INFO:Checking exceptions
2023-11-05 23:51:35,332:INFO:Importing libraries
2023-11-05 23:51:35,332:INFO:Copying training dataset
2023-11-05 23:51:35,339:INFO:Defining folds
2023-11-05 23:51:35,339:INFO:Declaring metric variables
2023-11-05 23:51:35,343:INFO:Importing untrained model
2023-11-05 23:51:35,343:INFO:Declaring custom model
2023-11-05 23:51:35,349:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:51:35,357:INFO:Starting cross validation
2023-11-05 23:51:35,359:INFO:Cross validating with KFold(n_splits=2, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:51:45,635:INFO:Calculating mean and std
2023-11-05 23:51:45,636:INFO:Creating metrics dataframe
2023-11-05 23:51:45,642:INFO:Finalizing model
2023-11-05 23:51:53,895:INFO:Uploading results into container
2023-11-05 23:51:53,898:INFO:Uploading model into container now
2023-11-05 23:51:53,899:INFO:_master_model_container: 25
2023-11-05 23:51:53,899:INFO:_display_container: 6
2023-11-05 23:51:53,899:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0B673EB0>
2023-11-05 23:51:53,899:INFO:create_model() successfully completed......................................
2023-11-05 23:51:54,044:INFO:SubProcess create_model() end ==================================
2023-11-05 23:51:54,044:INFO:choose_better activated
2023-11-05 23:51:54,047:INFO:SubProcess create_model() called ==================================
2023-11-05 23:51:54,047:INFO:Initializing create_model()
2023-11-05 23:51:54,048:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE08DA0190>, fold=KFold(n_splits=2, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-05 23:51:54,048:INFO:Checking exceptions
2023-11-05 23:51:54,050:INFO:Importing libraries
2023-11-05 23:51:54,050:INFO:Copying training dataset
2023-11-05 23:51:54,055:INFO:Defining folds
2023-11-05 23:51:54,055:INFO:Declaring metric variables
2023-11-05 23:51:54,055:INFO:Importing untrained model
2023-11-05 23:51:54,055:INFO:Declaring custom model
2023-11-05 23:51:54,055:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:51:54,055:INFO:Starting cross validation
2023-11-05 23:51:54,057:INFO:Cross validating with KFold(n_splits=2, random_state=None, shuffle=False), n_jobs=-1
2023-11-05 23:51:58,961:INFO:Calculating mean and std
2023-11-05 23:51:58,963:INFO:Creating metrics dataframe
2023-11-05 23:51:58,965:INFO:Finalizing model
2023-11-05 23:52:03,988:INFO:Uploading results into container
2023-11-05 23:52:03,989:INFO:Uploading model into container now
2023-11-05 23:52:03,989:INFO:_master_model_container: 26
2023-11-05 23:52:03,989:INFO:_display_container: 7
2023-11-05 23:52:03,989:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE09435D80>
2023-11-05 23:52:03,989:INFO:create_model() successfully completed......................................
2023-11-05 23:52:04,125:INFO:SubProcess create_model() end ==================================
2023-11-05 23:52:04,126:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE09435D80> result for MAE is 38.626
2023-11-05 23:52:04,126:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE0B673EB0> result for MAE is 112.8095
2023-11-05 23:52:04,126:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE09435D80> is best model
2023-11-05 23:52:04,126:INFO:choose_better completed
2023-11-05 23:52:04,126:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-11-05 23:52:04,136:INFO:_master_model_container: 26
2023-11-05 23:52:04,136:INFO:_display_container: 6
2023-11-05 23:52:04,136:INFO:<catboost.core.CatBoostRegressor object at 0x000001CE09435D80>
2023-11-05 23:52:04,136:INFO:tune_model() successfully completed......................................
2023-11-05 23:52:04,274:INFO:Initializing finalize_model()
2023-11-05 23:52:04,274:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE09435D80>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-11-05 23:52:04,274:INFO:Finalizing <catboost.core.CatBoostRegressor object at 0x000001CE09435D80>
2023-11-05 23:52:04,277:INFO:Initializing create_model()
2023-11-05 23:52:04,277:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=<catboost.core.CatBoostRegressor object at 0x000001CE09435D80>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-11-05 23:52:04,277:INFO:Checking exceptions
2023-11-05 23:52:04,279:INFO:Importing libraries
2023-11-05 23:52:04,279:INFO:Copying training dataset
2023-11-05 23:52:04,279:INFO:Defining folds
2023-11-05 23:52:04,279:INFO:Declaring metric variables
2023-11-05 23:52:04,279:INFO:Importing untrained model
2023-11-05 23:52:04,279:INFO:Declaring custom model
2023-11-05 23:52:04,280:INFO:CatBoost Regressor Imported successfully
2023-11-05 23:52:04,281:INFO:Cross validation set to False
2023-11-05 23:52:04,281:INFO:Fitting Model
2023-11-05 23:52:09,557:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE094369B0>)])
2023-11-05 23:52:09,557:INFO:create_model() successfully completed......................................
2023-11-05 23:52:09,687:INFO:_master_model_container: 26
2023-11-05 23:52:09,687:INFO:_display_container: 6
2023-11-05 23:52:09,734:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE094369B0>)])
2023-11-05 23:52:09,734:INFO:finalize_model() successfully completed......................................
2023-11-05 23:52:09,955:INFO:Initializing save_model()
2023-11-05 23:52:09,955:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE094369B0>)]), model_name=cnt_model_registered, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\josec\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer...
                 TransformerWrapper(include=['season', 'hr', 'weekday',
                                             'weathersit', 'day'],
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-11-05 23:52:09,955:INFO:Adding model into prep_pipe
2023-11-05 23:52:09,955:WARNING:Only Model saved as it was a pipeline.
2023-11-05 23:52:09,967:INFO:cnt_model_registered.pkl saved in current working directory
2023-11-05 23:52:10,010:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE094369B0>)])
2023-11-05 23:52:10,010:INFO:save_model() successfully completed......................................
2023-11-05 23:52:10,168:INFO:Initializing plot_model()
2023-11-05 23:52:10,168:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE094369B0>)]), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, system=True)
2023-11-05 23:52:10,168:INFO:Checking exceptions
2023-11-05 23:52:10,172:INFO:Preloading libraries
2023-11-05 23:52:10,174:INFO:Copying training dataset
2023-11-05 23:52:10,174:INFO:Plot type: error
2023-11-05 23:52:10,394:INFO:Fitting Model
2023-11-05 23:52:10,394:INFO:Scoring test/hold-out set
2023-11-05 23:52:10,420:INFO:Saving 'Prediction Error.png'
2023-11-05 23:52:10,699:INFO:Visual Rendered Successfully
2023-11-05 23:52:10,826:INFO:plot_model() successfully completed......................................
2023-11-05 23:54:05,683:INFO:Initializing load_model()
2023-11-05 23:54:05,683:INFO:load_model(model_name=cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-05 23:54:05,747:INFO:Initializing predict_model()
2023-11-05 23:54:05,748:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE08E80A30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\josec\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001CE0B678D30>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CE095B27A0>)
2023-11-05 23:54:05,748:INFO:Checking exceptions
2023-11-05 23:54:05,748:INFO:Preloading libraries
2023-11-05 23:54:05,751:INFO:Set up data.
2023-11-05 23:54:05,758:INFO:Set up index.
2023-11-06 00:30:22,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 00:30:22,359:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 00:30:22,359:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 00:30:22,359:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 00:30:22,676:INFO:Initializing load_model()
2023-11-06 00:30:22,676:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:30:24,139:INFO:Initializing load_model()
2023-11-06 00:30:24,139:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:30:24,154:INFO:Initializing load_model()
2023-11-06 00:30:24,154:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:30:39,203:INFO:Initializing load_model()
2023-11-06 00:30:39,203:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:30:39,209:INFO:Initializing load_model()
2023-11-06 00:30:39,210:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:30:39,219:INFO:Initializing load_model()
2023-11-06 00:30:39,219:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:38:31,541:INFO:Initializing load_model()
2023-11-06 00:38:31,542:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:38:31,555:INFO:Initializing load_model()
2023-11-06 00:38:31,555:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:38:31,562:INFO:Initializing load_model()
2023-11-06 00:38:31,562:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:38:34,819:INFO:Initializing load_model()
2023-11-06 00:38:34,819:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:38:34,836:INFO:Initializing load_model()
2023-11-06 00:38:34,836:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:38:34,852:INFO:Initializing load_model()
2023-11-06 00:38:34,852:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:38:36,852:INFO:Initializing load_model()
2023-11-06 00:38:36,852:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:38:36,852:INFO:Initializing load_model()
2023-11-06 00:38:36,852:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:38:36,869:INFO:Initializing load_model()
2023-11-06 00:38:36,869:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:38:38,987:INFO:Initializing load_model()
2023-11-06 00:38:38,987:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:38:39,002:INFO:Initializing load_model()
2023-11-06 00:38:39,002:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:38:39,002:INFO:Initializing load_model()
2023-11-06 00:38:39,002:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:46:42,287:INFO:Initializing load_model()
2023-11-06 00:46:42,288:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:46:42,307:INFO:Initializing load_model()
2023-11-06 00:46:42,307:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:46:42,319:INFO:Initializing load_model()
2023-11-06 00:46:42,319:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:46:52,704:INFO:Initializing load_model()
2023-11-06 00:46:52,706:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:46:52,720:INFO:Initializing load_model()
2023-11-06 00:46:52,720:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:46:52,731:INFO:Initializing load_model()
2023-11-06 00:46:52,731:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:46:54,611:INFO:Initializing load_model()
2023-11-06 00:46:54,611:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:46:54,622:INFO:Initializing load_model()
2023-11-06 00:46:54,622:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:46:54,634:INFO:Initializing load_model()
2023-11-06 00:46:54,634:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:48:50,651:INFO:Initializing load_model()
2023-11-06 00:48:50,651:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:48:50,657:INFO:Initializing load_model()
2023-11-06 00:48:50,657:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:48:50,664:INFO:Initializing load_model()
2023-11-06 00:48:50,664:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:52:29,540:INFO:Initializing load_model()
2023-11-06 00:52:29,540:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:52:29,548:INFO:Initializing load_model()
2023-11-06 00:52:29,548:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:52:29,556:INFO:Initializing load_model()
2023-11-06 00:52:29,556:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:52:32,735:INFO:Initializing load_model()
2023-11-06 00:52:32,735:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:52:32,747:INFO:Initializing load_model()
2023-11-06 00:52:32,747:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:52:32,755:INFO:Initializing load_model()
2023-11-06 00:52:32,755:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:52:46,081:INFO:Initializing load_model()
2023-11-06 00:52:46,081:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:52:46,090:INFO:Initializing load_model()
2023-11-06 00:52:46,090:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:52:46,099:INFO:Initializing load_model()
2023-11-06 00:52:46,099:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:52:57,140:INFO:Initializing load_model()
2023-11-06 00:52:57,140:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:52:57,156:INFO:Initializing load_model()
2023-11-06 00:52:57,156:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:52:57,172:INFO:Initializing load_model()
2023-11-06 00:52:57,172:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:53:09,942:INFO:Initializing load_model()
2023-11-06 00:53:09,942:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:53:09,970:INFO:Initializing load_model()
2023-11-06 00:53:09,970:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:53:09,980:INFO:Initializing load_model()
2023-11-06 00:53:09,980:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:53:50,710:INFO:Initializing load_model()
2023-11-06 00:53:50,710:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:53:50,716:INFO:Initializing load_model()
2023-11-06 00:53:50,716:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:53:50,722:INFO:Initializing load_model()
2023-11-06 00:53:50,722:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:53:53,661:INFO:Initializing load_model()
2023-11-06 00:53:53,661:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:53:53,667:INFO:Initializing load_model()
2023-11-06 00:53:53,667:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:53:53,673:INFO:Initializing load_model()
2023-11-06 00:53:53,673:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:54:10,951:INFO:Initializing load_model()
2023-11-06 00:54:10,952:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:54:10,958:INFO:Initializing load_model()
2023-11-06 00:54:10,958:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:54:10,964:INFO:Initializing load_model()
2023-11-06 00:54:10,964:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:54:23,770:INFO:Initializing load_model()
2023-11-06 00:54:23,770:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:54:23,776:INFO:Initializing load_model()
2023-11-06 00:54:23,776:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:54:23,781:INFO:Initializing load_model()
2023-11-06 00:54:23,781:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:54:26,993:INFO:Initializing load_model()
2023-11-06 00:54:26,993:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:54:27,009:INFO:Initializing load_model()
2023-11-06 00:54:27,009:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:54:27,024:INFO:Initializing load_model()
2023-11-06 00:54:27,024:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:55:44,689:INFO:Initializing load_model()
2023-11-06 00:55:44,689:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:55:44,695:INFO:Initializing load_model()
2023-11-06 00:55:44,696:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:55:44,702:INFO:Initializing load_model()
2023-11-06 00:55:44,703:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:55:48,159:INFO:Initializing load_model()
2023-11-06 00:55:48,159:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:55:48,165:INFO:Initializing load_model()
2023-11-06 00:55:48,165:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:55:48,171:INFO:Initializing load_model()
2023-11-06 00:55:48,171:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:56:04,409:INFO:Initializing load_model()
2023-11-06 00:56:04,409:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:56:04,416:INFO:Initializing load_model()
2023-11-06 00:56:04,416:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:56:04,422:INFO:Initializing load_model()
2023-11-06 00:56:04,422:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:56:06,622:INFO:Initializing load_model()
2023-11-06 00:56:06,623:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:56:06,628:INFO:Initializing load_model()
2023-11-06 00:56:06,629:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:56:06,635:INFO:Initializing load_model()
2023-11-06 00:56:06,635:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:58:00,699:INFO:Initializing load_model()
2023-11-06 00:58:00,699:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:58:00,706:INFO:Initializing load_model()
2023-11-06 00:58:00,706:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:58:00,711:INFO:Initializing load_model()
2023-11-06 00:58:00,711:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:58:12,896:INFO:Initializing load_model()
2023-11-06 00:58:12,896:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:58:12,904:INFO:Initializing load_model()
2023-11-06 00:58:12,904:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:58:12,911:INFO:Initializing load_model()
2023-11-06 00:58:12,911:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:58:15,711:INFO:Initializing load_model()
2023-11-06 00:58:15,711:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:58:15,718:INFO:Initializing load_model()
2023-11-06 00:58:15,718:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:58:15,724:INFO:Initializing load_model()
2023-11-06 00:58:15,724:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:59:24,157:INFO:Initializing load_model()
2023-11-06 00:59:24,157:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:59:24,163:INFO:Initializing load_model()
2023-11-06 00:59:24,164:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:59:24,170:INFO:Initializing load_model()
2023-11-06 00:59:24,170:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:59:28,083:INFO:Initializing load_model()
2023-11-06 00:59:28,083:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:59:28,084:INFO:Initializing load_model()
2023-11-06 00:59:28,097:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:59:28,098:INFO:Initializing load_model()
2023-11-06 00:59:28,098:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:59:55,692:INFO:Initializing load_model()
2023-11-06 00:59:55,693:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:59:55,699:INFO:Initializing load_model()
2023-11-06 00:59:55,699:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:59:55,704:INFO:Initializing load_model()
2023-11-06 00:59:55,704:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 00:59:58,142:INFO:Initializing load_model()
2023-11-06 00:59:58,142:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 00:59:58,152:INFO:Initializing load_model()
2023-11-06 00:59:58,152:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 00:59:58,158:INFO:Initializing load_model()
2023-11-06 00:59:58,158:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:00:19,596:INFO:Initializing load_model()
2023-11-06 01:00:19,597:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:00:19,607:INFO:Initializing load_model()
2023-11-06 01:00:19,607:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:00:19,616:INFO:Initializing load_model()
2023-11-06 01:00:19,617:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:00:22,116:INFO:Initializing load_model()
2023-11-06 01:00:22,116:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:00:22,122:INFO:Initializing load_model()
2023-11-06 01:00:22,122:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:00:22,122:INFO:Initializing load_model()
2023-11-06 01:00:22,122:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:00:51,786:INFO:Initializing load_model()
2023-11-06 01:00:51,786:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:00:51,793:INFO:Initializing load_model()
2023-11-06 01:00:51,793:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:00:51,799:INFO:Initializing load_model()
2023-11-06 01:00:51,799:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:00:53,924:INFO:Initializing load_model()
2023-11-06 01:00:53,924:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:00:53,932:INFO:Initializing load_model()
2023-11-06 01:00:53,932:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:00:53,938:INFO:Initializing load_model()
2023-11-06 01:00:53,938:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:00:57,215:INFO:Initializing load_model()
2023-11-06 01:00:57,215:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:00:57,226:INFO:Initializing load_model()
2023-11-06 01:00:57,226:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:00:57,232:INFO:Initializing load_model()
2023-11-06 01:00:57,232:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:00:59,713:INFO:Initializing load_model()
2023-11-06 01:00:59,713:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:00:59,729:INFO:Initializing load_model()
2023-11-06 01:00:59,729:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:00:59,746:INFO:Initializing load_model()
2023-11-06 01:00:59,746:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:01:02,231:INFO:Initializing load_model()
2023-11-06 01:01:02,231:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:01:02,247:INFO:Initializing load_model()
2023-11-06 01:01:02,247:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:01:02,265:INFO:Initializing load_model()
2023-11-06 01:01:02,265:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:01:02,612:INFO:Initializing load_model()
2023-11-06 01:01:02,612:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:01:02,630:INFO:Initializing load_model()
2023-11-06 01:01:02,630:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:01:02,647:INFO:Initializing load_model()
2023-11-06 01:01:02,647:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:02:12,839:INFO:Initializing load_model()
2023-11-06 01:02:12,839:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:02:12,847:INFO:Initializing load_model()
2023-11-06 01:02:12,847:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:02:12,854:INFO:Initializing load_model()
2023-11-06 01:02:12,854:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:02:31,318:INFO:Initializing load_model()
2023-11-06 01:02:31,319:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:02:31,325:INFO:Initializing load_model()
2023-11-06 01:02:31,325:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:02:31,330:INFO:Initializing load_model()
2023-11-06 01:02:31,330:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:03:08,329:INFO:Initializing load_model()
2023-11-06 01:03:08,329:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:03:08,335:INFO:Initializing load_model()
2023-11-06 01:03:08,335:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:03:08,341:INFO:Initializing load_model()
2023-11-06 01:03:08,341:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:03:12,483:INFO:Initializing load_model()
2023-11-06 01:03:12,483:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:03:12,499:INFO:Initializing load_model()
2023-11-06 01:03:12,499:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:03:12,516:INFO:Initializing load_model()
2023-11-06 01:03:12,516:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:06:08,138:INFO:Initializing load_model()
2023-11-06 01:06:08,139:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:06:08,147:INFO:Initializing load_model()
2023-11-06 01:06:08,147:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:06:08,155:INFO:Initializing load_model()
2023-11-06 01:06:08,155:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:06:11,654:INFO:Initializing load_model()
2023-11-06 01:06:11,654:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:06:11,659:INFO:Initializing load_model()
2023-11-06 01:06:11,659:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:06:11,676:INFO:Initializing load_model()
2023-11-06 01:06:11,676:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:06:14,691:INFO:Initializing load_model()
2023-11-06 01:06:14,691:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:06:14,708:INFO:Initializing load_model()
2023-11-06 01:06:14,708:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:06:14,724:INFO:Initializing load_model()
2023-11-06 01:06:14,724:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:11:20,400:INFO:Initializing load_model()
2023-11-06 01:11:20,400:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:11:20,408:INFO:Initializing load_model()
2023-11-06 01:11:20,408:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:11:20,414:INFO:Initializing load_model()
2023-11-06 01:11:20,414:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:11:25,048:INFO:Initializing load_model()
2023-11-06 01:11:25,048:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:11:25,064:INFO:Initializing load_model()
2023-11-06 01:11:25,064:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:11:25,080:INFO:Initializing load_model()
2023-11-06 01:11:25,080:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:11:29,996:INFO:Initializing load_model()
2023-11-06 01:11:29,996:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:11:30,004:INFO:Initializing load_model()
2023-11-06 01:11:30,004:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:11:30,020:INFO:Initializing load_model()
2023-11-06 01:11:30,020:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:11:30,337:INFO:Initializing load_model()
2023-11-06 01:11:30,337:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:11:30,345:INFO:Initializing load_model()
2023-11-06 01:11:30,345:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:11:30,360:INFO:Initializing load_model()
2023-11-06 01:11:30,360:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:12:16,023:INFO:Initializing load_model()
2023-11-06 01:12:16,023:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:12:16,029:INFO:Initializing load_model()
2023-11-06 01:12:16,030:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:12:16,036:INFO:Initializing load_model()
2023-11-06 01:12:16,036:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:12:21,723:INFO:Initializing load_model()
2023-11-06 01:12:21,723:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:12:21,753:INFO:Initializing load_model()
2023-11-06 01:12:21,753:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:12:21,772:INFO:Initializing load_model()
2023-11-06 01:12:21,773:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:12:22,118:INFO:Initializing load_model()
2023-11-06 01:12:22,118:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:12:22,135:INFO:Initializing load_model()
2023-11-06 01:12:22,135:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:12:22,147:INFO:Initializing load_model()
2023-11-06 01:12:22,147:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:15:08,745:INFO:Initializing load_model()
2023-11-06 01:15:08,745:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:15:08,751:INFO:Initializing load_model()
2023-11-06 01:15:08,751:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:15:08,757:INFO:Initializing load_model()
2023-11-06 01:15:08,757:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:15:13,665:INFO:Initializing load_model()
2023-11-06 01:15:13,665:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:15:13,685:INFO:Initializing load_model()
2023-11-06 01:15:13,685:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:15:13,698:INFO:Initializing load_model()
2023-11-06 01:15:13,698:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:15:37,524:INFO:Initializing load_model()
2023-11-06 01:15:37,524:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:15:37,530:INFO:Initializing load_model()
2023-11-06 01:15:37,530:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:15:37,536:INFO:Initializing load_model()
2023-11-06 01:15:37,536:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:15:58,167:INFO:Initializing load_model()
2023-11-06 01:15:58,167:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:15:58,173:INFO:Initializing load_model()
2023-11-06 01:15:58,173:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:15:58,179:INFO:Initializing load_model()
2023-11-06 01:15:58,179:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:16:02,659:INFO:Initializing load_model()
2023-11-06 01:16:02,659:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:16:02,675:INFO:Initializing load_model()
2023-11-06 01:16:02,675:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:16:02,691:INFO:Initializing load_model()
2023-11-06 01:16:02,691:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:17:01,211:INFO:Initializing load_model()
2023-11-06 01:17:01,211:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:17:01,218:INFO:Initializing load_model()
2023-11-06 01:17:01,218:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:17:01,224:INFO:Initializing load_model()
2023-11-06 01:17:01,224:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:20:20,872:INFO:Initializing load_model()
2023-11-06 01:20:20,873:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:20:20,879:INFO:Initializing load_model()
2023-11-06 01:20:20,879:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:20:20,885:INFO:Initializing load_model()
2023-11-06 01:20:20,885:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:20:20,960:INFO:Initializing predict_model()
2023-11-06 01:20:20,960:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C83BB20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C640700>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C690E50>)
2023-11-06 01:20:20,960:INFO:Checking exceptions
2023-11-06 01:20:20,960:INFO:Preloading libraries
2023-11-06 01:21:01,669:INFO:Initializing load_model()
2023-11-06 01:21:01,669:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:21:01,675:INFO:Initializing load_model()
2023-11-06 01:21:01,675:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:21:01,681:INFO:Initializing load_model()
2023-11-06 01:21:01,681:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:21:01,757:INFO:Initializing predict_model()
2023-11-06 01:21:01,757:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C67C700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C9F8460>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99B8CF370>)
2023-11-06 01:21:01,757:INFO:Checking exceptions
2023-11-06 01:21:01,758:INFO:Preloading libraries
2023-11-06 01:21:01,759:INFO:Set up data.
2023-11-06 01:21:01,767:INFO:Set up index.
2023-11-06 01:21:31,466:INFO:Initializing load_model()
2023-11-06 01:21:31,466:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:21:31,474:INFO:Initializing load_model()
2023-11-06 01:21:31,475:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:21:31,482:INFO:Initializing load_model()
2023-11-06 01:21:31,482:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:21:31,547:INFO:Initializing predict_model()
2023-11-06 01:21:31,547:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E9FD55E770>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C7DAE30>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C60B0A0>)
2023-11-06 01:21:31,547:INFO:Checking exceptions
2023-11-06 01:21:31,547:INFO:Preloading libraries
2023-11-06 01:21:31,547:INFO:Set up data.
2023-11-06 01:21:31,550:INFO:Set up index.
2023-11-06 01:21:35,979:INFO:Initializing load_model()
2023-11-06 01:21:35,979:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:21:35,987:INFO:Initializing load_model()
2023-11-06 01:21:35,987:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:21:36,003:INFO:Initializing load_model()
2023-11-06 01:21:36,003:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:21:36,133:INFO:Initializing predict_model()
2023-11-06 01:21:36,133:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C9F87F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C9F9990>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C690AF0>)
2023-11-06 01:21:36,133:INFO:Checking exceptions
2023-11-06 01:21:36,133:INFO:Preloading libraries
2023-11-06 01:21:36,133:INFO:Set up data.
2023-11-06 01:21:36,144:INFO:Set up index.
2023-11-06 01:21:42,537:INFO:Initializing load_model()
2023-11-06 01:21:42,537:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:21:42,584:INFO:Initializing load_model()
2023-11-06 01:21:42,586:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:21:42,600:INFO:Initializing load_model()
2023-11-06 01:21:42,600:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:21:42,733:INFO:Initializing predict_model()
2023-11-06 01:21:42,733:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C9F9BA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C561E10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99B8CF370>)
2023-11-06 01:21:42,770:INFO:Checking exceptions
2023-11-06 01:21:42,770:INFO:Preloading libraries
2023-11-06 01:21:42,771:INFO:Set up data.
2023-11-06 01:21:42,779:INFO:Set up index.
2023-11-06 01:22:16,294:INFO:Initializing load_model()
2023-11-06 01:22:16,295:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:22:16,301:INFO:Initializing load_model()
2023-11-06 01:22:16,301:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:22:16,306:INFO:Initializing load_model()
2023-11-06 01:22:16,307:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:22:16,360:INFO:Initializing predict_model()
2023-11-06 01:22:16,360:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C838FA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C7DB670>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C9A1D80>)
2023-11-06 01:22:16,360:INFO:Checking exceptions
2023-11-06 01:22:16,360:INFO:Preloading libraries
2023-11-06 01:22:16,360:INFO:Set up data.
2023-11-06 01:22:16,363:INFO:Set up index.
2023-11-06 01:23:42,853:INFO:Initializing load_model()
2023-11-06 01:23:42,853:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:23:42,861:INFO:Initializing load_model()
2023-11-06 01:23:42,861:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:23:42,867:INFO:Initializing load_model()
2023-11-06 01:23:42,867:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:23:42,928:INFO:Initializing predict_model()
2023-11-06 01:23:42,929:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C9F8A30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C9FA8F0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C60AB90>)
2023-11-06 01:23:42,929:INFO:Checking exceptions
2023-11-06 01:23:42,929:INFO:Preloading libraries
2023-11-06 01:23:42,929:INFO:Set up data.
2023-11-06 01:23:42,932:INFO:Set up index.
2023-11-06 01:23:43,125:INFO:Initializing predict_model()
2023-11-06 01:23:43,125:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C67D570>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99CA9CA30>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C736710>)
2023-11-06 01:23:43,126:INFO:Checking exceptions
2023-11-06 01:23:43,126:INFO:Preloading libraries
2023-11-06 01:23:43,126:INFO:Set up data.
2023-11-06 01:23:43,128:INFO:Set up index.
2023-11-06 01:23:43,353:INFO:Initializing predict_model()
2023-11-06 01:23:43,353:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C67CDF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C7D9C60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C736710>)
2023-11-06 01:23:43,354:INFO:Checking exceptions
2023-11-06 01:23:43,354:INFO:Preloading libraries
2023-11-06 01:23:43,354:INFO:Set up data.
2023-11-06 01:23:43,360:INFO:Set up index.
2023-11-06 01:24:10,577:INFO:Initializing load_model()
2023-11-06 01:24:10,577:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:10,583:INFO:Initializing load_model()
2023-11-06 01:24:10,583:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:10,588:INFO:Initializing load_model()
2023-11-06 01:24:10,588:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:10,649:INFO:Initializing predict_model()
2023-11-06 01:24:10,650:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99CA9CFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C67C7F0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C9A1FC0>)
2023-11-06 01:24:10,650:INFO:Checking exceptions
2023-11-06 01:24:10,650:INFO:Preloading libraries
2023-11-06 01:24:10,650:INFO:Set up data.
2023-11-06 01:24:10,652:INFO:Set up index.
2023-11-06 01:24:10,843:INFO:Initializing predict_model()
2023-11-06 01:24:10,843:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99CA9C280>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C9F9BD0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C6911B0>)
2023-11-06 01:24:10,843:INFO:Checking exceptions
2023-11-06 01:24:10,843:INFO:Preloading libraries
2023-11-06 01:24:10,844:INFO:Set up data.
2023-11-06 01:24:10,847:INFO:Set up index.
2023-11-06 01:24:11,078:INFO:Initializing predict_model()
2023-11-06 01:24:11,078:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99CA9C640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C9FBB20>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C6911B0>)
2023-11-06 01:24:11,079:INFO:Checking exceptions
2023-11-06 01:24:11,079:INFO:Preloading libraries
2023-11-06 01:24:11,079:INFO:Set up data.
2023-11-06 01:24:11,082:INFO:Set up index.
2023-11-06 01:24:17,377:INFO:Initializing load_model()
2023-11-06 01:24:17,377:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:17,393:INFO:Initializing load_model()
2023-11-06 01:24:17,393:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:17,409:INFO:Initializing load_model()
2023-11-06 01:24:17,409:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:17,556:INFO:Initializing predict_model()
2023-11-06 01:24:17,556:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C839F90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C67DDE0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C690F70>)
2023-11-06 01:24:17,556:INFO:Checking exceptions
2023-11-06 01:24:17,556:INFO:Preloading libraries
2023-11-06 01:24:17,556:INFO:Set up data.
2023-11-06 01:24:17,561:INFO:Set up index.
2023-11-06 01:24:17,895:INFO:Initializing predict_model()
2023-11-06 01:24:17,895:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C641FC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C83A110>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C690F70>)
2023-11-06 01:24:17,895:INFO:Checking exceptions
2023-11-06 01:24:17,895:INFO:Preloading libraries
2023-11-06 01:24:17,895:INFO:Set up data.
2023-11-06 01:24:17,903:INFO:Set up index.
2023-11-06 01:24:18,239:INFO:Initializing predict_model()
2023-11-06 01:24:18,239:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C9FA080>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C9F8C10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C690F70>)
2023-11-06 01:24:18,240:INFO:Checking exceptions
2023-11-06 01:24:18,241:INFO:Preloading libraries
2023-11-06 01:24:18,241:INFO:Set up data.
2023-11-06 01:24:18,247:INFO:Set up index.
2023-11-06 01:24:23,760:INFO:Initializing load_model()
2023-11-06 01:24:23,760:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:23,768:INFO:Initializing load_model()
2023-11-06 01:24:23,768:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:23,785:INFO:Initializing load_model()
2023-11-06 01:24:23,785:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:23,914:INFO:Initializing predict_model()
2023-11-06 01:24:23,922:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C6419C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C83B280>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C6925F0>)
2023-11-06 01:24:23,922:INFO:Checking exceptions
2023-11-06 01:24:23,922:INFO:Preloading libraries
2023-11-06 01:24:23,922:INFO:Set up data.
2023-11-06 01:24:23,930:INFO:Set up index.
2023-11-06 01:24:24,244:INFO:Initializing predict_model()
2023-11-06 01:24:24,244:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C9FAAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C67F2E0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C6925F0>)
2023-11-06 01:24:24,244:INFO:Checking exceptions
2023-11-06 01:24:24,252:INFO:Preloading libraries
2023-11-06 01:24:24,252:INFO:Set up data.
2023-11-06 01:24:24,260:INFO:Set up index.
2023-11-06 01:24:24,613:INFO:Initializing predict_model()
2023-11-06 01:24:24,613:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C67F790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C67C790>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C6925F0>)
2023-11-06 01:24:24,613:INFO:Checking exceptions
2023-11-06 01:24:24,613:INFO:Preloading libraries
2023-11-06 01:24:24,613:INFO:Set up data.
2023-11-06 01:24:24,629:INFO:Set up index.
2023-11-06 01:24:30,728:INFO:Initializing load_model()
2023-11-06 01:24:30,728:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:30,744:INFO:Initializing load_model()
2023-11-06 01:24:30,744:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:30,752:INFO:Initializing load_model()
2023-11-06 01:24:30,752:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:30,952:INFO:Initializing predict_model()
2023-11-06 01:24:30,952:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99CA9FEB0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C641510>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C691870>)
2023-11-06 01:24:30,952:INFO:Checking exceptions
2023-11-06 01:24:30,952:INFO:Preloading libraries
2023-11-06 01:24:30,952:INFO:Set up data.
2023-11-06 01:24:30,956:INFO:Set up index.
2023-11-06 01:24:31,267:INFO:Initializing predict_model()
2023-11-06 01:24:31,267:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99CA9CBE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99CA9FDF0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C691870>)
2023-11-06 01:24:31,267:INFO:Checking exceptions
2023-11-06 01:24:31,273:INFO:Preloading libraries
2023-11-06 01:24:31,273:INFO:Set up data.
2023-11-06 01:24:31,274:INFO:Set up index.
2023-11-06 01:24:31,640:INFO:Initializing predict_model()
2023-11-06 01:24:31,640:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C562B60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C67E320>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C691870>)
2023-11-06 01:24:31,640:INFO:Checking exceptions
2023-11-06 01:24:31,640:INFO:Preloading libraries
2023-11-06 01:24:31,640:INFO:Set up data.
2023-11-06 01:24:31,645:INFO:Set up index.
2023-11-06 01:24:39,912:INFO:Initializing load_model()
2023-11-06 01:24:39,912:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:39,926:INFO:Initializing load_model()
2023-11-06 01:24:39,926:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:39,937:INFO:Initializing load_model()
2023-11-06 01:24:39,937:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:40,154:INFO:Initializing predict_model()
2023-11-06 01:24:40,155:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C561AB0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C9F8160>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C691B40>)
2023-11-06 01:24:40,155:INFO:Checking exceptions
2023-11-06 01:24:40,155:INFO:Preloading libraries
2023-11-06 01:24:40,155:INFO:Set up data.
2023-11-06 01:24:40,162:INFO:Set up index.
2023-11-06 01:24:40,473:INFO:Initializing predict_model()
2023-11-06 01:24:40,473:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99CA9D000>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C9FB160>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C691B40>)
2023-11-06 01:24:40,473:INFO:Checking exceptions
2023-11-06 01:24:40,473:INFO:Preloading libraries
2023-11-06 01:24:40,473:INFO:Set up data.
2023-11-06 01:24:40,473:INFO:Set up index.
2023-11-06 01:24:40,847:INFO:Initializing predict_model()
2023-11-06 01:24:40,847:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E9FD55E920>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C642380>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C691B40>)
2023-11-06 01:24:40,847:INFO:Checking exceptions
2023-11-06 01:24:40,847:INFO:Preloading libraries
2023-11-06 01:24:40,847:INFO:Set up data.
2023-11-06 01:24:40,855:INFO:Set up index.
2023-11-06 01:24:44,159:INFO:Initializing load_model()
2023-11-06 01:24:44,159:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:44,176:INFO:Initializing load_model()
2023-11-06 01:24:44,177:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:44,193:INFO:Initializing load_model()
2023-11-06 01:24:44,193:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:44,354:INFO:Initializing predict_model()
2023-11-06 01:24:44,354:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C67FAC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C67EC80>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C692710>)
2023-11-06 01:24:44,354:INFO:Checking exceptions
2023-11-06 01:24:44,354:INFO:Preloading libraries
2023-11-06 01:24:44,354:INFO:Set up data.
2023-11-06 01:24:44,364:INFO:Set up index.
2023-11-06 01:24:44,863:INFO:Initializing load_model()
2023-11-06 01:24:44,863:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:44,879:INFO:Initializing load_model()
2023-11-06 01:24:44,879:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:44,896:INFO:Initializing load_model()
2023-11-06 01:24:44,896:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:24:45,166:INFO:Initializing predict_model()
2023-11-06 01:24:45,166:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C67DF30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C641B70>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C6913F0>)
2023-11-06 01:24:45,166:INFO:Checking exceptions
2023-11-06 01:24:45,166:INFO:Preloading libraries
2023-11-06 01:24:45,166:INFO:Set up data.
2023-11-06 01:24:45,172:INFO:Set up index.
2023-11-06 01:24:45,506:INFO:Initializing predict_model()
2023-11-06 01:24:45,506:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C643EE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C67D1B0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C6913F0>)
2023-11-06 01:24:45,506:INFO:Checking exceptions
2023-11-06 01:24:45,506:INFO:Preloading libraries
2023-11-06 01:24:45,506:INFO:Set up data.
2023-11-06 01:24:45,514:INFO:Set up index.
2023-11-06 01:24:45,872:INFO:Initializing predict_model()
2023-11-06 01:24:45,872:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C67D3C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C9FAAA0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C6913F0>)
2023-11-06 01:24:45,872:INFO:Checking exceptions
2023-11-06 01:24:45,872:INFO:Preloading libraries
2023-11-06 01:24:45,872:INFO:Set up data.
2023-11-06 01:24:45,880:INFO:Set up index.
2023-11-06 01:25:02,458:INFO:Initializing load_model()
2023-11-06 01:25:02,458:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:25:02,472:INFO:Initializing load_model()
2023-11-06 01:25:02,472:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:25:02,485:INFO:Initializing load_model()
2023-11-06 01:25:02,485:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:25:02,642:INFO:Initializing predict_model()
2023-11-06 01:25:02,642:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C67E800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C83AA40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C690E50>)
2023-11-06 01:25:02,642:INFO:Checking exceptions
2023-11-06 01:25:02,642:INFO:Preloading libraries
2023-11-06 01:25:02,642:INFO:Set up data.
2023-11-06 01:25:02,651:INFO:Set up index.
2023-11-06 01:25:02,993:INFO:Initializing predict_model()
2023-11-06 01:25:02,993:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E9FD55DF60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C642E60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C690E50>)
2023-11-06 01:25:02,993:INFO:Checking exceptions
2023-11-06 01:25:02,993:INFO:Preloading libraries
2023-11-06 01:25:02,993:INFO:Set up data.
2023-11-06 01:25:03,001:INFO:Set up index.
2023-11-06 01:25:03,329:INFO:Initializing predict_model()
2023-11-06 01:25:03,330:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C562C80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E9FD55ED40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C690E50>)
2023-11-06 01:25:03,330:INFO:Checking exceptions
2023-11-06 01:25:03,330:INFO:Preloading libraries
2023-11-06 01:25:03,330:INFO:Set up data.
2023-11-06 01:25:03,337:INFO:Set up index.
2023-11-06 01:25:25,529:INFO:Initializing load_model()
2023-11-06 01:25:25,530:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:25:25,536:INFO:Initializing load_model()
2023-11-06 01:25:25,536:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:25:25,543:INFO:Initializing load_model()
2023-11-06 01:25:25,543:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:25:25,616:INFO:Initializing predict_model()
2023-11-06 01:25:25,617:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C562D70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C67EF20>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C6927A0>)
2023-11-06 01:25:25,617:INFO:Checking exceptions
2023-11-06 01:25:25,617:INFO:Preloading libraries
2023-11-06 01:25:25,617:INFO:Set up data.
2023-11-06 01:25:25,621:INFO:Set up index.
2023-11-06 01:26:15,707:INFO:Initializing load_model()
2023-11-06 01:26:15,707:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:26:15,714:INFO:Initializing load_model()
2023-11-06 01:26:15,714:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:26:15,722:INFO:Initializing load_model()
2023-11-06 01:26:15,722:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:26:15,807:INFO:Initializing predict_model()
2023-11-06 01:26:15,807:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E9FD55DA80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C67DED0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C60B0A0>)
2023-11-06 01:26:15,807:INFO:Checking exceptions
2023-11-06 01:26:15,807:INFO:Preloading libraries
2023-11-06 01:26:15,808:INFO:Set up data.
2023-11-06 01:26:15,811:INFO:Set up index.
2023-11-06 01:27:50,715:INFO:Initializing load_model()
2023-11-06 01:27:50,716:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:27:50,725:INFO:Initializing load_model()
2023-11-06 01:27:50,725:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:27:50,730:INFO:Initializing load_model()
2023-11-06 01:27:50,730:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:27:50,804:INFO:Initializing predict_model()
2023-11-06 01:27:50,805:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E9FD55EDD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C9F94B0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C736710>)
2023-11-06 01:27:50,805:INFO:Checking exceptions
2023-11-06 01:27:50,805:INFO:Preloading libraries
2023-11-06 01:27:50,806:INFO:Set up data.
2023-11-06 01:27:50,809:INFO:Set up index.
2023-11-06 01:29:43,747:INFO:Initializing load_model()
2023-11-06 01:29:43,747:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:29:43,755:INFO:Initializing load_model()
2023-11-06 01:29:43,755:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:29:43,760:INFO:Initializing load_model()
2023-11-06 01:29:43,761:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:29:43,985:INFO:Initializing predict_model()
2023-11-06 01:29:43,986:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C7D8EE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C560C40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C692710>)
2023-11-06 01:29:43,987:INFO:Checking exceptions
2023-11-06 01:29:43,987:INFO:Preloading libraries
2023-11-06 01:29:43,989:INFO:Set up data.
2023-11-06 01:29:43,992:INFO:Set up index.
2023-11-06 01:29:54,465:INFO:Initializing load_model()
2023-11-06 01:29:54,465:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:29:54,479:INFO:Initializing load_model()
2023-11-06 01:29:54,479:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:29:54,485:INFO:Initializing load_model()
2023-11-06 01:29:54,485:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:29:54,679:INFO:Initializing predict_model()
2023-11-06 01:29:54,679:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C83ACB0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C838550>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99B8CF490>)
2023-11-06 01:29:54,679:INFO:Checking exceptions
2023-11-06 01:29:54,679:INFO:Preloading libraries
2023-11-06 01:29:54,682:INFO:Set up data.
2023-11-06 01:29:54,684:INFO:Set up index.
2023-11-06 01:30:08,809:INFO:Initializing load_model()
2023-11-06 01:30:08,809:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:30:08,817:INFO:Initializing load_model()
2023-11-06 01:30:08,817:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:30:08,833:INFO:Initializing load_model()
2023-11-06 01:30:08,833:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:30:09,066:INFO:Initializing predict_model()
2023-11-06 01:30:09,066:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C6417E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C839B10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C6095A0>)
2023-11-06 01:30:09,066:INFO:Checking exceptions
2023-11-06 01:30:09,066:INFO:Preloading libraries
2023-11-06 01:30:09,066:INFO:Set up data.
2023-11-06 01:30:09,083:INFO:Set up index.
2023-11-06 01:30:14,061:INFO:Initializing load_model()
2023-11-06 01:30:14,061:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:30:14,077:INFO:Initializing load_model()
2023-11-06 01:30:14,077:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:30:14,085:INFO:Initializing load_model()
2023-11-06 01:30:14,085:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:30:52,861:INFO:Initializing load_model()
2023-11-06 01:30:52,861:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:30:52,877:INFO:Initializing load_model()
2023-11-06 01:30:52,877:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:30:52,932:INFO:Initializing load_model()
2023-11-06 01:30:52,932:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:30:53,155:INFO:Initializing predict_model()
2023-11-06 01:30:53,155:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C94D000>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E095960>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E9FD55B010>)
2023-11-06 01:30:53,155:INFO:Checking exceptions
2023-11-06 01:30:53,155:INFO:Preloading libraries
2023-11-06 01:30:53,155:INFO:Set up data.
2023-11-06 01:30:53,176:INFO:Set up index.
2023-11-06 01:33:03,348:INFO:Initializing load_model()
2023-11-06 01:33:03,348:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:33:03,364:INFO:Initializing load_model()
2023-11-06 01:33:03,364:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:33:03,364:INFO:Initializing load_model()
2023-11-06 01:33:03,364:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:33:03,655:INFO:Initializing predict_model()
2023-11-06 01:33:03,655:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D854460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D8575B0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C8B8E50>)
2023-11-06 01:33:03,655:INFO:Checking exceptions
2023-11-06 01:33:03,655:INFO:Preloading libraries
2023-11-06 01:33:03,655:INFO:Set up data.
2023-11-06 01:33:03,667:INFO:Set up index.
2023-11-06 01:40:23,244:INFO:Initializing load_model()
2023-11-06 01:40:23,244:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:40:23,253:INFO:Initializing load_model()
2023-11-06 01:40:23,254:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:40:23,264:INFO:Initializing load_model()
2023-11-06 01:40:23,264:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:40:23,323:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:34: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:40:23,380:INFO:Initializing predict_model()
2023-11-06 01:40:23,381:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D854760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C94F340>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99B8CF490>)
2023-11-06 01:40:23,381:INFO:Checking exceptions
2023-11-06 01:40:23,381:INFO:Preloading libraries
2023-11-06 01:40:23,382:INFO:Set up data.
2023-11-06 01:40:23,385:INFO:Set up index.
2023-11-06 01:42:35,917:INFO:Initializing load_model()
2023-11-06 01:42:35,917:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:42:35,921:INFO:Initializing load_model()
2023-11-06 01:42:35,921:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:42:35,939:INFO:Initializing load_model()
2023-11-06 01:42:35,939:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:42:36,027:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:34: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:42:36,074:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\streamlit\type_util.py:797: UserWarning:

The DataFrame has column names of mixed type. They will be converted to strings and not roundtrip correctly.


2023-11-06 01:42:36,172:INFO:Initializing predict_model()
2023-11-06 01:42:36,172:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D854D60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E7F3C10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C7369E0>)
2023-11-06 01:42:36,172:INFO:Checking exceptions
2023-11-06 01:42:36,172:INFO:Preloading libraries
2023-11-06 01:42:36,172:INFO:Set up data.
2023-11-06 01:42:36,172:INFO:Set up index.
2023-11-06 01:42:50,415:INFO:Initializing load_model()
2023-11-06 01:42:50,415:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:42:50,422:INFO:Initializing load_model()
2023-11-06 01:42:50,422:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:42:50,430:INFO:Initializing load_model()
2023-11-06 01:42:50,430:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:42:50,480:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:34: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:42:50,539:INFO:Initializing predict_model()
2023-11-06 01:42:50,539:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99E058040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E05AC80>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E9FD55A290>)
2023-11-06 01:42:50,540:INFO:Checking exceptions
2023-11-06 01:42:50,540:INFO:Preloading libraries
2023-11-06 01:42:50,540:INFO:Set up data.
2023-11-06 01:42:50,547:INFO:Set up index.
2023-11-06 01:44:37,048:INFO:Initializing load_model()
2023-11-06 01:44:37,049:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:44:37,056:INFO:Initializing load_model()
2023-11-06 01:44:37,056:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:44:37,062:INFO:Initializing load_model()
2023-11-06 01:44:37,062:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:44:37,107:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:34: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:44:37,111:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\streamlit\type_util.py:797: UserWarning:

The DataFrame has column names of mixed type. They will be converted to strings and not roundtrip correctly.


2023-11-06 01:44:37,172:INFO:Initializing predict_model()
2023-11-06 01:44:37,173:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99E05BC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E059CF0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C60A950>)
2023-11-06 01:44:37,173:INFO:Checking exceptions
2023-11-06 01:44:37,173:INFO:Preloading libraries
2023-11-06 01:44:37,173:INFO:Set up data.
2023-11-06 01:44:37,177:INFO:Set up index.
2023-11-06 01:46:15,687:INFO:Initializing load_model()
2023-11-06 01:46:15,687:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:46:15,702:INFO:Initializing load_model()
2023-11-06 01:46:15,702:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:46:15,709:INFO:Initializing load_model()
2023-11-06 01:46:15,709:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:46:15,756:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:34: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:46:15,834:INFO:Initializing predict_model()
2023-11-06 01:46:15,834:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D854850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D855B70>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99D3C1B40>)
2023-11-06 01:46:15,834:INFO:Checking exceptions
2023-11-06 01:46:15,834:INFO:Preloading libraries
2023-11-06 01:46:15,834:INFO:Set up data.
2023-11-06 01:46:15,834:INFO:Set up index.
2023-11-06 01:46:27,505:INFO:Initializing load_model()
2023-11-06 01:46:27,505:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:46:27,512:INFO:Initializing load_model()
2023-11-06 01:46:27,512:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:46:27,517:INFO:Initializing load_model()
2023-11-06 01:46:27,517:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:46:27,565:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:34: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:46:58,633:INFO:Initializing load_model()
2023-11-06 01:46:58,633:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:46:58,639:INFO:Initializing load_model()
2023-11-06 01:46:58,639:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:46:58,646:INFO:Initializing load_model()
2023-11-06 01:46:58,646:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:46:58,704:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:34: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:47:16,950:INFO:Initializing load_model()
2023-11-06 01:47:16,950:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:47:16,956:INFO:Initializing load_model()
2023-11-06 01:47:16,956:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:47:16,962:INFO:Initializing load_model()
2023-11-06 01:47:16,962:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:47:17,009:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:34: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:47:17,064:INFO:Initializing predict_model()
2023-11-06 01:47:17,064:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D855CF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C94C6A0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C60AB00>)
2023-11-06 01:47:17,065:INFO:Checking exceptions
2023-11-06 01:47:17,065:INFO:Preloading libraries
2023-11-06 01:47:17,065:INFO:Set up data.
2023-11-06 01:47:17,068:INFO:Set up index.
2023-11-06 01:47:57,434:INFO:Initializing load_model()
2023-11-06 01:47:57,435:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:47:57,441:INFO:Initializing load_model()
2023-11-06 01:47:57,441:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:47:57,447:INFO:Initializing load_model()
2023-11-06 01:47:57,447:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:47:57,495:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:34: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:47:57,575:INFO:Initializing predict_model()
2023-11-06 01:47:57,576:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99E7F3E80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D856D70>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C6927A0>)
2023-11-06 01:47:57,576:INFO:Checking exceptions
2023-11-06 01:47:57,576:INFO:Preloading libraries
2023-11-06 01:47:57,576:INFO:Set up data.
2023-11-06 01:47:57,580:INFO:Set up index.
2023-11-06 01:48:12,349:INFO:Initializing load_model()
2023-11-06 01:48:12,350:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:48:12,356:INFO:Initializing load_model()
2023-11-06 01:48:12,356:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:48:12,362:INFO:Initializing load_model()
2023-11-06 01:48:12,362:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:48:12,406:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:34: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:48:12,462:INFO:Initializing predict_model()
2023-11-06 01:48:12,462:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99E058BE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E058580>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C6091B0>)
2023-11-06 01:48:12,462:INFO:Checking exceptions
2023-11-06 01:48:12,463:INFO:Preloading libraries
2023-11-06 01:48:12,463:INFO:Set up data.
2023-11-06 01:48:12,471:INFO:Set up index.
2023-11-06 01:48:39,181:INFO:Initializing load_model()
2023-11-06 01:48:39,181:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:48:39,187:INFO:Initializing load_model()
2023-11-06 01:48:39,187:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:48:39,194:INFO:Initializing load_model()
2023-11-06 01:48:39,194:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:48:39,241:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:34: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:48:39,295:INFO:Initializing predict_model()
2023-11-06 01:48:39,295:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99E7F0850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E0587F0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C5240>)
2023-11-06 01:48:39,296:INFO:Checking exceptions
2023-11-06 01:48:39,296:INFO:Preloading libraries
2023-11-06 01:48:39,296:INFO:Set up data.
2023-11-06 01:48:39,301:INFO:Set up index.
2023-11-06 01:49:22,733:INFO:Initializing load_model()
2023-11-06 01:49:22,733:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:49:22,739:INFO:Initializing load_model()
2023-11-06 01:49:22,739:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:49:22,745:INFO:Initializing load_model()
2023-11-06 01:49:22,746:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:49:22,789:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:49:22,850:INFO:Initializing predict_model()
2023-11-06 01:49:22,850:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99E05B820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D854D30>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C690160>)
2023-11-06 01:49:22,851:INFO:Checking exceptions
2023-11-06 01:49:22,851:INFO:Preloading libraries
2023-11-06 01:49:22,851:INFO:Set up data.
2023-11-06 01:49:22,855:INFO:Set up index.
2023-11-06 01:49:37,007:INFO:Initializing load_model()
2023-11-06 01:49:37,007:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:49:37,018:INFO:Initializing load_model()
2023-11-06 01:49:37,018:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:49:37,023:INFO:Initializing load_model()
2023-11-06 01:49:37,024:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:49:37,086:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:49:37,161:INFO:Initializing predict_model()
2023-11-06 01:49:37,161:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99E05BDC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E7F3FD0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C5360>)
2023-11-06 01:49:37,161:INFO:Checking exceptions
2023-11-06 01:49:37,162:INFO:Preloading libraries
2023-11-06 01:49:37,162:INFO:Set up data.
2023-11-06 01:49:37,168:INFO:Set up index.
2023-11-06 01:49:40,695:INFO:Initializing load_model()
2023-11-06 01:49:40,695:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:49:40,716:INFO:Initializing load_model()
2023-11-06 01:49:40,716:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:49:40,732:INFO:Initializing load_model()
2023-11-06 01:49:40,732:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:49:40,986:INFO:Initializing load_model()
2023-11-06 01:49:40,986:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:49:41,022:INFO:Initializing load_model()
2023-11-06 01:49:41,022:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:49:41,056:INFO:Initializing load_model()
2023-11-06 01:49:41,056:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:49:41,338:INFO:Initializing load_model()
2023-11-06 01:49:41,338:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:49:41,353:INFO:Initializing load_model()
2023-11-06 01:49:41,353:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:49:41,367:INFO:Initializing load_model()
2023-11-06 01:49:41,367:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:49:41,485:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:49:41,635:INFO:Initializing predict_model()
2023-11-06 01:49:41,635:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C94ECB0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C94FC10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C690160>)
2023-11-06 01:49:41,635:INFO:Checking exceptions
2023-11-06 01:49:41,635:INFO:Preloading libraries
2023-11-06 01:49:41,635:INFO:Set up data.
2023-11-06 01:49:41,652:INFO:Set up index.
2023-11-06 01:49:51,625:INFO:Initializing load_model()
2023-11-06 01:49:51,625:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:49:51,632:INFO:Initializing load_model()
2023-11-06 01:49:51,632:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:49:51,684:INFO:Initializing load_model()
2023-11-06 01:49:51,684:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:49:51,781:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:49:51,923:INFO:Initializing predict_model()
2023-11-06 01:49:51,923:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C94C9A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E7F1B10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C690160>)
2023-11-06 01:49:51,923:INFO:Checking exceptions
2023-11-06 01:49:51,923:INFO:Preloading libraries
2023-11-06 01:49:51,923:INFO:Set up data.
2023-11-06 01:49:51,931:INFO:Set up index.
2023-11-06 01:50:30,948:INFO:Initializing load_model()
2023-11-06 01:50:30,949:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:50:30,954:INFO:Initializing load_model()
2023-11-06 01:50:30,955:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:50:30,960:INFO:Initializing load_model()
2023-11-06 01:50:30,960:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:50:31,009:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:50:31,082:INFO:Initializing predict_model()
2023-11-06 01:50:31,082:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99E7F2770>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E058790>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C5360>)
2023-11-06 01:50:31,082:INFO:Checking exceptions
2023-11-06 01:50:31,082:INFO:Preloading libraries
2023-11-06 01:50:31,083:INFO:Set up data.
2023-11-06 01:50:31,086:INFO:Set up index.
2023-11-06 01:50:33,823:INFO:Initializing load_model()
2023-11-06 01:50:33,823:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:50:33,832:INFO:Initializing load_model()
2023-11-06 01:50:33,832:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:50:33,838:INFO:Initializing load_model()
2023-11-06 01:50:33,838:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:50:33,887:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:50:33,942:INFO:Initializing predict_model()
2023-11-06 01:50:33,943:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99E7F3F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E7F2020>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C52D0>)
2023-11-06 01:50:33,943:INFO:Checking exceptions
2023-11-06 01:50:33,943:INFO:Preloading libraries
2023-11-06 01:50:33,943:INFO:Set up data.
2023-11-06 01:50:33,948:INFO:Set up index.
2023-11-06 01:51:01,080:INFO:Initializing load_model()
2023-11-06 01:51:01,081:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:51:01,087:INFO:Initializing load_model()
2023-11-06 01:51:01,087:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:51:01,092:INFO:Initializing load_model()
2023-11-06 01:51:01,093:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:51:01,140:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:51:01,192:INFO:Initializing predict_model()
2023-11-06 01:51:01,192:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D854790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E7F1480>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C5240>)
2023-11-06 01:51:01,192:INFO:Checking exceptions
2023-11-06 01:51:01,192:INFO:Preloading libraries
2023-11-06 01:51:01,193:INFO:Set up data.
2023-11-06 01:51:01,196:INFO:Set up index.
2023-11-06 01:53:27,455:INFO:Initializing load_model()
2023-11-06 01:53:27,455:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:53:27,461:INFO:Initializing load_model()
2023-11-06 01:53:27,461:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:53:27,467:INFO:Initializing load_model()
2023-11-06 01:53:27,467:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:53:27,510:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:53:41,020:INFO:Initializing load_model()
2023-11-06 01:53:41,020:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:53:41,026:INFO:Initializing load_model()
2023-11-06 01:53:41,026:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:53:41,032:INFO:Initializing load_model()
2023-11-06 01:53:41,032:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:53:41,082:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:53:56,521:INFO:Initializing load_model()
2023-11-06 01:53:56,521:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:53:56,527:INFO:Initializing load_model()
2023-11-06 01:53:56,528:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:53:56,534:INFO:Initializing load_model()
2023-11-06 01:53:56,534:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:53:56,580:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:53:56,670:INFO:Initializing predict_model()
2023-11-06 01:53:56,670:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99E7F07F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E7F1480>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C690160>)
2023-11-06 01:53:56,670:INFO:Checking exceptions
2023-11-06 01:53:56,670:INFO:Preloading libraries
2023-11-06 01:53:56,671:INFO:Set up data.
2023-11-06 01:53:56,674:INFO:Set up index.
2023-11-06 01:54:09,364:INFO:Initializing load_model()
2023-11-06 01:54:09,364:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:54:09,373:INFO:Initializing load_model()
2023-11-06 01:54:09,373:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:54:09,379:INFO:Initializing load_model()
2023-11-06 01:54:09,379:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:54:09,425:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:54:09,510:INFO:Initializing predict_model()
2023-11-06 01:54:09,510:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99E0963E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E096C50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E7E2710>)
2023-11-06 01:54:09,511:INFO:Checking exceptions
2023-11-06 01:54:09,511:INFO:Preloading libraries
2023-11-06 01:54:09,511:INFO:Set up data.
2023-11-06 01:54:09,514:INFO:Set up index.
2023-11-06 01:54:27,917:INFO:Initializing load_model()
2023-11-06 01:54:27,918:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:54:27,924:INFO:Initializing load_model()
2023-11-06 01:54:27,924:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:54:27,929:INFO:Initializing load_model()
2023-11-06 01:54:27,930:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:54:27,976:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:54:28,039:INFO:Initializing predict_model()
2023-11-06 01:54:28,039:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99CA9D390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E0964A0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E7E2710>)
2023-11-06 01:54:28,040:INFO:Checking exceptions
2023-11-06 01:54:28,040:INFO:Preloading libraries
2023-11-06 01:54:28,040:INFO:Set up data.
2023-11-06 01:54:28,044:INFO:Set up index.
2023-11-06 01:56:06,578:INFO:Initializing load_model()
2023-11-06 01:56:06,578:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:06,584:INFO:Initializing load_model()
2023-11-06 01:56:06,584:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:06,590:INFO:Initializing load_model()
2023-11-06 01:56:06,590:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:06,640:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:56:06,722:INFO:Initializing predict_model()
2023-11-06 01:56:06,722:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D4239D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D423FD0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C60A7A0>)
2023-11-06 01:56:06,722:INFO:Checking exceptions
2023-11-06 01:56:06,722:INFO:Preloading libraries
2023-11-06 01:56:06,722:INFO:Set up data.
2023-11-06 01:56:06,727:INFO:Set up index.
2023-11-06 01:56:27,409:INFO:Initializing load_model()
2023-11-06 01:56:27,409:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:27,425:INFO:Initializing load_model()
2023-11-06 01:56:27,425:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:27,444:INFO:Initializing load_model()
2023-11-06 01:56:27,444:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:27,568:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:56:27,743:INFO:Initializing predict_model()
2023-11-06 01:56:27,743:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D4231C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E7F21D0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C690CA0>)
2023-11-06 01:56:27,743:INFO:Checking exceptions
2023-11-06 01:56:27,743:INFO:Preloading libraries
2023-11-06 01:56:27,743:INFO:Set up data.
2023-11-06 01:56:27,757:INFO:Set up index.
2023-11-06 01:56:28,292:INFO:Initializing load_model()
2023-11-06 01:56:28,292:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:28,292:INFO:Initializing load_model()
2023-11-06 01:56:28,308:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:28,309:INFO:Initializing load_model()
2023-11-06 01:56:28,309:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:28,410:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:56:28,523:INFO:Initializing predict_model()
2023-11-06 01:56:28,523:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C562D70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E7F1600>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C52D0>)
2023-11-06 01:56:28,523:INFO:Checking exceptions
2023-11-06 01:56:28,523:INFO:Preloading libraries
2023-11-06 01:56:28,523:INFO:Set up data.
2023-11-06 01:56:28,530:INFO:Set up index.
2023-11-06 01:56:31,978:INFO:Initializing load_model()
2023-11-06 01:56:31,978:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:31,990:INFO:Initializing load_model()
2023-11-06 01:56:31,990:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:32,004:INFO:Initializing load_model()
2023-11-06 01:56:32,004:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:32,092:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:56:32,207:INFO:Initializing predict_model()
2023-11-06 01:56:32,208:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99CA9C250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E094F40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C52D0>)
2023-11-06 01:56:32,208:INFO:Checking exceptions
2023-11-06 01:56:32,208:INFO:Preloading libraries
2023-11-06 01:56:32,208:INFO:Set up data.
2023-11-06 01:56:32,214:INFO:Set up index.
2023-11-06 01:56:34,593:INFO:Initializing load_model()
2023-11-06 01:56:34,593:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:34,602:INFO:Initializing load_model()
2023-11-06 01:56:34,606:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:34,618:INFO:Initializing load_model()
2023-11-06 01:56:34,618:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:34,707:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:56:34,865:INFO:Initializing predict_model()
2023-11-06 01:56:34,865:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99E0947F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E0971C0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C6901F0>)
2023-11-06 01:56:34,865:INFO:Checking exceptions
2023-11-06 01:56:34,865:INFO:Preloading libraries
2023-11-06 01:56:34,865:INFO:Set up data.
2023-11-06 01:56:34,874:INFO:Set up index.
2023-11-06 01:56:38,190:INFO:Initializing load_model()
2023-11-06 01:56:38,190:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:38,203:INFO:Initializing load_model()
2023-11-06 01:56:38,203:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:38,207:INFO:Initializing load_model()
2023-11-06 01:56:38,207:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:38,306:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:56:38,409:INFO:Initializing predict_model()
2023-11-06 01:56:38,409:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C5620B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D423910>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C690550>)
2023-11-06 01:56:38,409:INFO:Checking exceptions
2023-11-06 01:56:38,409:INFO:Preloading libraries
2023-11-06 01:56:38,409:INFO:Set up data.
2023-11-06 01:56:38,414:INFO:Set up index.
2023-11-06 01:56:42,108:INFO:Initializing load_model()
2023-11-06 01:56:42,108:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:42,118:INFO:Initializing load_model()
2023-11-06 01:56:42,118:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:42,134:INFO:Initializing load_model()
2023-11-06 01:56:42,134:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:42,224:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:56:42,329:INFO:Initializing predict_model()
2023-11-06 01:56:42,329:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D422830>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D421FC0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C52D0>)
2023-11-06 01:56:42,329:INFO:Checking exceptions
2023-11-06 01:56:42,329:INFO:Preloading libraries
2023-11-06 01:56:42,329:INFO:Set up data.
2023-11-06 01:56:42,329:INFO:Set up index.
2023-11-06 01:56:54,265:INFO:Initializing load_model()
2023-11-06 01:56:54,265:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:54,274:INFO:Initializing load_model()
2023-11-06 01:56:54,274:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:54,299:INFO:Initializing load_model()
2023-11-06 01:56:54,299:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:56:54,396:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:56:54,502:INFO:Initializing predict_model()
2023-11-06 01:56:54,502:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C5620B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E0950F0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C60AA70>)
2023-11-06 01:56:54,502:INFO:Checking exceptions
2023-11-06 01:56:54,502:INFO:Preloading libraries
2023-11-06 01:56:54,502:INFO:Set up data.
2023-11-06 01:56:54,507:INFO:Set up index.
2023-11-06 01:57:01,943:INFO:Initializing load_model()
2023-11-06 01:57:01,943:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:57:01,957:INFO:Initializing load_model()
2023-11-06 01:57:01,957:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:57:01,969:INFO:Initializing load_model()
2023-11-06 01:57:01,969:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:57:02,060:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:57:02,165:INFO:Initializing predict_model()
2023-11-06 01:57:02,165:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99E0963E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E094340>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C734940>)
2023-11-06 01:57:02,199:INFO:Checking exceptions
2023-11-06 01:57:02,199:INFO:Preloading libraries
2023-11-06 01:57:02,199:INFO:Set up data.
2023-11-06 01:57:02,206:INFO:Set up index.
2023-11-06 01:57:15,906:INFO:Initializing load_model()
2023-11-06 01:57:15,906:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:57:15,925:INFO:Initializing load_model()
2023-11-06 01:57:15,925:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:57:15,934:INFO:Initializing load_model()
2023-11-06 01:57:15,934:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:57:16,031:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:57:16,134:INFO:Initializing predict_model()
2023-11-06 01:57:16,134:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C560F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D421ED0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C52D0>)
2023-11-06 01:57:16,134:INFO:Checking exceptions
2023-11-06 01:57:16,134:INFO:Preloading libraries
2023-11-06 01:57:16,134:INFO:Set up data.
2023-11-06 01:57:16,142:INFO:Set up index.
2023-11-06 01:57:37,773:INFO:Initializing load_model()
2023-11-06 01:57:37,773:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 01:57:37,790:INFO:Initializing load_model()
2023-11-06 01:57:37,790:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 01:57:37,807:INFO:Initializing load_model()
2023-11-06 01:57:37,807:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 01:57:37,940:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 01:57:38,049:INFO:Initializing predict_model()
2023-11-06 01:57:38,049:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C562D70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E0586A0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C60ADD0>)
2023-11-06 01:57:38,049:INFO:Checking exceptions
2023-11-06 01:57:38,050:INFO:Preloading libraries
2023-11-06 01:57:38,050:INFO:Set up data.
2023-11-06 01:57:38,056:INFO:Set up index.
2023-11-06 02:00:15,654:INFO:Initializing load_model()
2023-11-06 02:00:15,654:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:00:15,670:INFO:Initializing load_model()
2023-11-06 02:00:15,670:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:00:15,686:INFO:Initializing load_model()
2023-11-06 02:00:15,686:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:00:15,789:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:00:26,139:INFO:Initializing load_model()
2023-11-06 02:00:26,139:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:00:26,154:INFO:Initializing load_model()
2023-11-06 02:00:26,154:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:00:26,165:INFO:Initializing load_model()
2023-11-06 02:00:26,165:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:00:26,296:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:00:31,136:INFO:Initializing load_model()
2023-11-06 02:00:31,136:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:00:31,153:INFO:Initializing load_model()
2023-11-06 02:00:31,153:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:00:31,163:INFO:Initializing load_model()
2023-11-06 02:00:31,163:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:00:31,256:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:00:45,753:INFO:Initializing load_model()
2023-11-06 02:00:45,753:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:00:45,769:INFO:Initializing load_model()
2023-11-06 02:00:45,769:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:00:45,786:INFO:Initializing load_model()
2023-11-06 02:00:45,786:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:00:45,869:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:00:45,987:INFO:Initializing predict_model()
2023-11-06 02:00:45,987:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D422920>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E05B2B0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99D8B7D90>)
2023-11-06 02:00:45,987:INFO:Checking exceptions
2023-11-06 02:00:45,987:INFO:Preloading libraries
2023-11-06 02:00:45,987:INFO:Set up data.
2023-11-06 02:00:45,996:INFO:Set up index.
2023-11-06 02:01:56,720:INFO:Initializing load_model()
2023-11-06 02:01:56,721:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:01:56,728:INFO:Initializing load_model()
2023-11-06 02:01:56,728:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:01:56,733:INFO:Initializing load_model()
2023-11-06 02:01:56,733:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:01:56,783:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:01:56,842:INFO:Initializing predict_model()
2023-11-06 02:01:56,842:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D420A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E05A1D0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99B8CF490>)
2023-11-06 02:01:56,842:INFO:Checking exceptions
2023-11-06 02:01:56,843:INFO:Preloading libraries
2023-11-06 02:01:56,843:INFO:Set up data.
2023-11-06 02:01:56,847:INFO:Set up index.
2023-11-06 02:02:01,428:INFO:Initializing load_model()
2023-11-06 02:02:01,434:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:02:01,437:INFO:Initializing load_model()
2023-11-06 02:02:01,437:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:02:01,453:INFO:Initializing load_model()
2023-11-06 02:02:01,453:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:02:01,552:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:02:01,663:INFO:Initializing predict_model()
2023-11-06 02:02:01,663:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D4222C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D4233D0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E923400>)
2023-11-06 02:02:01,663:INFO:Checking exceptions
2023-11-06 02:02:01,663:INFO:Preloading libraries
2023-11-06 02:02:01,663:INFO:Set up data.
2023-11-06 02:02:01,667:INFO:Set up index.
2023-11-06 02:02:04,652:INFO:Initializing load_model()
2023-11-06 02:02:04,652:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:02:04,669:INFO:Initializing load_model()
2023-11-06 02:02:04,669:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:02:04,685:INFO:Initializing load_model()
2023-11-06 02:02:04,685:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:02:04,792:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:02:04,903:INFO:Initializing predict_model()
2023-11-06 02:02:04,904:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99E058E20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E059FC0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C60A4D0>)
2023-11-06 02:02:04,904:INFO:Checking exceptions
2023-11-06 02:02:04,904:INFO:Preloading libraries
2023-11-06 02:02:04,904:INFO:Set up data.
2023-11-06 02:02:04,911:INFO:Set up index.
2023-11-06 02:02:09,485:INFO:Initializing load_model()
2023-11-06 02:02:09,485:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:02:09,501:INFO:Initializing load_model()
2023-11-06 02:02:09,502:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:02:09,504:INFO:Initializing load_model()
2023-11-06 02:02:09,504:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:02:09,603:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:02:15,751:INFO:Initializing load_model()
2023-11-06 02:02:15,756:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:02:15,768:INFO:Initializing load_model()
2023-11-06 02:02:15,768:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:02:15,784:INFO:Initializing load_model()
2023-11-06 02:02:15,784:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:02:15,889:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:02:20,934:INFO:Initializing load_model()
2023-11-06 02:02:20,934:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:02:20,951:INFO:Initializing load_model()
2023-11-06 02:02:20,951:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:02:20,962:INFO:Initializing load_model()
2023-11-06 02:02:20,962:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:02:21,058:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:02:54,595:INFO:Initializing load_model()
2023-11-06 02:02:54,596:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:02:54,602:INFO:Initializing load_model()
2023-11-06 02:02:54,602:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:02:54,608:INFO:Initializing load_model()
2023-11-06 02:02:54,608:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:02:54,674:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:04:09,210:INFO:Initializing load_model()
2023-11-06 02:04:09,210:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:04:09,216:INFO:Initializing load_model()
2023-11-06 02:04:09,217:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:04:09,222:INFO:Initializing load_model()
2023-11-06 02:04:09,222:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:04:09,274:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:04:09,324:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:43: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:04:22,201:INFO:Initializing load_model()
2023-11-06 02:04:22,201:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:04:22,216:INFO:Initializing load_model()
2023-11-06 02:04:22,216:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:04:22,232:INFO:Initializing load_model()
2023-11-06 02:04:22,232:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:04:22,323:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:04:22,349:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:43: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:04:53,450:INFO:Initializing load_model()
2023-11-06 02:04:53,450:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:04:53,466:INFO:Initializing load_model()
2023-11-06 02:04:53,466:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:04:53,476:INFO:Initializing load_model()
2023-11-06 02:04:53,476:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:04:58,466:INFO:Initializing load_model()
2023-11-06 02:04:58,466:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:04:58,475:INFO:Initializing load_model()
2023-11-06 02:04:58,475:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:04:58,483:INFO:Initializing load_model()
2023-11-06 02:04:58,483:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:04:58,744:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:04:58,793:INFO:Initializing predict_model()
2023-11-06 02:04:58,798:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D358880>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D3627A0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C60A4D0>)
2023-11-06 02:04:58,798:INFO:Checking exceptions
2023-11-06 02:04:58,798:INFO:Preloading libraries
2023-11-06 02:04:58,798:INFO:Set up data.
2023-11-06 02:04:58,801:INFO:Set up index.
2023-11-06 02:05:04,315:INFO:Initializing load_model()
2023-11-06 02:05:04,315:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:05:04,315:INFO:Initializing load_model()
2023-11-06 02:05:04,315:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:05:04,315:INFO:Initializing load_model()
2023-11-06 02:05:04,315:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:05:04,376:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:05:04,465:INFO:Initializing predict_model()
2023-11-06 02:05:04,465:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D358A60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D359B10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C60A4D0>)
2023-11-06 02:05:04,465:INFO:Checking exceptions
2023-11-06 02:05:04,465:INFO:Preloading libraries
2023-11-06 02:05:04,465:INFO:Set up data.
2023-11-06 02:05:04,465:INFO:Set up index.
2023-11-06 02:05:08,373:INFO:Initializing load_model()
2023-11-06 02:05:08,373:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:05:08,381:INFO:Initializing load_model()
2023-11-06 02:05:08,381:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:05:08,384:INFO:Initializing load_model()
2023-11-06 02:05:08,384:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:05:08,436:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:05:08,452:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:43: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:11:14,537:INFO:Initializing load_model()
2023-11-06 02:11:14,537:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:11:14,545:INFO:Initializing load_model()
2023-11-06 02:11:14,545:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:11:14,550:INFO:Initializing load_model()
2023-11-06 02:11:14,550:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:11:14,603:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:11:14,680:INFO:Initializing predict_model()
2023-11-06 02:11:14,680:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D359720>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D3628F0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C5480>)
2023-11-06 02:11:14,680:INFO:Checking exceptions
2023-11-06 02:11:14,680:INFO:Preloading libraries
2023-11-06 02:11:14,681:INFO:Set up data.
2023-11-06 02:11:14,684:INFO:Set up index.
2023-11-06 02:11:29,463:INFO:Initializing load_model()
2023-11-06 02:11:29,464:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:11:29,470:INFO:Initializing load_model()
2023-11-06 02:11:29,470:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:11:29,476:INFO:Initializing load_model()
2023-11-06 02:11:29,477:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:11:29,522:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:11:29,595:INFO:Initializing predict_model()
2023-11-06 02:11:29,595:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D359480>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D35ABF0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C690CA0>)
2023-11-06 02:11:29,595:INFO:Checking exceptions
2023-11-06 02:11:29,595:INFO:Preloading libraries
2023-11-06 02:11:29,595:INFO:Set up data.
2023-11-06 02:11:29,598:INFO:Set up index.
2023-11-06 02:14:31,516:INFO:Initializing load_model()
2023-11-06 02:14:31,516:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:14:31,523:INFO:Initializing load_model()
2023-11-06 02:14:31,523:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:14:31,528:INFO:Initializing load_model()
2023-11-06 02:14:31,529:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:14:31,582:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:14:31,649:INFO:Initializing predict_model()
2023-11-06 02:14:31,649:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D3A7E20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D35A1A0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C5480>)
2023-11-06 02:14:31,649:INFO:Checking exceptions
2023-11-06 02:14:31,650:INFO:Preloading libraries
2023-11-06 02:14:31,650:INFO:Set up data.
2023-11-06 02:14:31,653:INFO:Set up index.
2023-11-06 02:14:42,902:INFO:Initializing load_model()
2023-11-06 02:14:42,902:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:14:42,918:INFO:Initializing load_model()
2023-11-06 02:14:42,918:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:14:42,934:INFO:Initializing load_model()
2023-11-06 02:14:42,934:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:14:43,052:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:14:43,205:INFO:Initializing predict_model()
2023-11-06 02:14:43,213:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D3A53F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D363490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C60A4D0>)
2023-11-06 02:14:43,213:INFO:Checking exceptions
2023-11-06 02:14:43,213:INFO:Preloading libraries
2023-11-06 02:14:43,213:INFO:Set up data.
2023-11-06 02:14:43,221:INFO:Set up index.
2023-11-06 02:14:47,006:INFO:Initializing load_model()
2023-11-06 02:14:47,006:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:14:47,006:INFO:Initializing load_model()
2023-11-06 02:14:47,006:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:14:47,022:INFO:Initializing load_model()
2023-11-06 02:14:47,022:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:14:47,123:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:14:47,221:INFO:Initializing predict_model()
2023-11-06 02:14:47,221:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D3A53C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D3610C0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C5360>)
2023-11-06 02:14:47,247:INFO:Checking exceptions
2023-11-06 02:14:47,247:INFO:Preloading libraries
2023-11-06 02:14:47,249:INFO:Set up data.
2023-11-06 02:14:47,256:INFO:Set up index.
2023-11-06 02:19:08,051:INFO:Initializing load_model()
2023-11-06 02:19:08,051:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:19:08,068:INFO:Initializing load_model()
2023-11-06 02:19:08,069:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:19:08,084:INFO:Initializing load_model()
2023-11-06 02:19:08,084:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:19:08,175:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:19:08,277:INFO:Initializing predict_model()
2023-11-06 02:19:08,278:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D3A47F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D358BB0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C5360>)
2023-11-06 02:19:08,279:INFO:Checking exceptions
2023-11-06 02:19:08,279:INFO:Preloading libraries
2023-11-06 02:19:08,281:INFO:Set up data.
2023-11-06 02:19:08,291:INFO:Set up index.
2023-11-06 02:26:17,405:INFO:Initializing load_model()
2023-11-06 02:26:17,405:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:26:17,413:INFO:Initializing load_model()
2023-11-06 02:26:17,413:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:26:17,422:INFO:Initializing load_model()
2023-11-06 02:26:17,422:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:26:35,448:INFO:Initializing load_model()
2023-11-06 02:26:35,448:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:26:35,454:INFO:Initializing load_model()
2023-11-06 02:26:35,455:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:26:35,461:INFO:Initializing load_model()
2023-11-06 02:26:35,461:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:26:35,548:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:26:35,651:INFO:Initializing predict_model()
2023-11-06 02:26:35,652:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D361FC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D361990>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C5480>)
2023-11-06 02:26:35,652:INFO:Checking exceptions
2023-11-06 02:26:35,652:INFO:Preloading libraries
2023-11-06 02:26:35,652:INFO:Set up data.
2023-11-06 02:26:35,655:INFO:Set up index.
2023-11-06 02:26:38,975:INFO:Initializing load_model()
2023-11-06 02:26:38,975:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:26:38,984:INFO:Initializing load_model()
2023-11-06 02:26:38,984:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:26:38,990:INFO:Initializing load_model()
2023-11-06 02:26:38,990:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:26:39,045:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:26:39,145:INFO:Initializing predict_model()
2023-11-06 02:26:39,145:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C94D1B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D360EB0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C60A4D0>)
2023-11-06 02:26:39,145:INFO:Checking exceptions
2023-11-06 02:26:39,145:INFO:Preloading libraries
2023-11-06 02:26:39,145:INFO:Set up data.
2023-11-06 02:26:39,160:INFO:Set up index.
2023-11-06 02:26:41,877:INFO:Initializing load_model()
2023-11-06 02:26:41,877:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:26:41,889:INFO:Initializing load_model()
2023-11-06 02:26:41,889:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:26:41,894:INFO:Initializing load_model()
2023-11-06 02:26:41,894:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:26:42,193:INFO:Initializing load_model()
2023-11-06 02:26:42,193:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:26:42,214:INFO:Initializing load_model()
2023-11-06 02:26:42,214:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:26:42,226:INFO:Initializing load_model()
2023-11-06 02:26:42,227:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:26:42,363:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:26:42,467:INFO:Initializing predict_model()
2023-11-06 02:26:42,467:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C94D870>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D360520>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C5480>)
2023-11-06 02:26:42,477:INFO:Checking exceptions
2023-11-06 02:26:42,477:INFO:Preloading libraries
2023-11-06 02:26:42,478:INFO:Set up data.
2023-11-06 02:26:42,481:INFO:Set up index.
2023-11-06 02:31:26,809:INFO:Initializing load_model()
2023-11-06 02:31:26,809:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:31:26,820:INFO:Initializing load_model()
2023-11-06 02:31:26,820:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:31:26,828:INFO:Initializing load_model()
2023-11-06 02:31:26,828:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:32:05,623:INFO:Initializing load_model()
2023-11-06 02:32:05,623:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:32:05,630:INFO:Initializing load_model()
2023-11-06 02:32:05,630:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:32:05,635:INFO:Initializing load_model()
2023-11-06 02:32:05,635:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:32:58,737:INFO:Initializing load_model()
2023-11-06 02:32:58,737:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:32:58,748:INFO:Initializing load_model()
2023-11-06 02:32:58,748:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:32:58,754:INFO:Initializing load_model()
2023-11-06 02:32:58,754:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:33:10,058:INFO:Initializing load_model()
2023-11-06 02:33:10,058:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:33:10,066:INFO:Initializing load_model()
2023-11-06 02:33:10,066:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:33:10,075:INFO:Initializing load_model()
2023-11-06 02:33:10,075:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:34:06,409:INFO:Initializing load_model()
2023-11-06 02:34:06,409:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:34:06,415:INFO:Initializing load_model()
2023-11-06 02:34:06,415:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:34:06,421:INFO:Initializing load_model()
2023-11-06 02:34:06,421:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:34:06,479:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:34:06,611:INFO:Initializing predict_model()
2023-11-06 02:34:06,611:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C8DB6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99C8D9AE0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E922A70>)
2023-11-06 02:34:06,611:INFO:Checking exceptions
2023-11-06 02:34:06,611:INFO:Preloading libraries
2023-11-06 02:34:06,612:INFO:Set up data.
2023-11-06 02:34:06,616:INFO:Set up index.
2023-11-06 02:34:09,188:INFO:Initializing load_model()
2023-11-06 02:34:09,188:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:34:09,194:INFO:Initializing load_model()
2023-11-06 02:34:09,194:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:34:09,201:INFO:Initializing load_model()
2023-11-06 02:34:09,201:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:34:09,265:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:34:09,358:INFO:Initializing predict_model()
2023-11-06 02:34:09,358:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D3E5EA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D3E55A0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C5480>)
2023-11-06 02:34:09,358:INFO:Checking exceptions
2023-11-06 02:34:09,358:INFO:Preloading libraries
2023-11-06 02:34:09,359:INFO:Set up data.
2023-11-06 02:34:09,364:INFO:Set up index.
2023-11-06 02:34:33,643:INFO:Initializing load_model()
2023-11-06 02:34:33,643:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:34:33,649:INFO:Initializing load_model()
2023-11-06 02:34:33,649:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:34:33,655:INFO:Initializing load_model()
2023-11-06 02:34:33,655:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:34:33,703:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:34:33,774:INFO:Initializing predict_model()
2023-11-06 02:34:33,775:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D3E6470>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D3E5E10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C8BB2E0>)
2023-11-06 02:34:33,775:INFO:Checking exceptions
2023-11-06 02:34:33,775:INFO:Preloading libraries
2023-11-06 02:34:33,776:INFO:Set up data.
2023-11-06 02:34:33,784:INFO:Set up index.
2023-11-06 02:35:18,355:INFO:Initializing load_model()
2023-11-06 02:35:18,355:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:18,361:INFO:Initializing load_model()
2023-11-06 02:35:18,362:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:18,368:INFO:Initializing load_model()
2023-11-06 02:35:18,368:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:20,452:INFO:Initializing load_model()
2023-11-06 02:35:20,452:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:20,458:INFO:Initializing load_model()
2023-11-06 02:35:20,459:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:20,506:INFO:Initializing load_model()
2023-11-06 02:35:20,507:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:20,565:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:35:20,649:INFO:Initializing predict_model()
2023-11-06 02:35:20,649:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99E05BA00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D363E80>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E7E2710>)
2023-11-06 02:35:20,650:INFO:Checking exceptions
2023-11-06 02:35:20,650:INFO:Preloading libraries
2023-11-06 02:35:20,650:INFO:Set up data.
2023-11-06 02:35:20,654:INFO:Set up index.
2023-11-06 02:35:23,196:INFO:Initializing load_model()
2023-11-06 02:35:23,196:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:23,212:INFO:Initializing load_model()
2023-11-06 02:35:23,212:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:23,228:INFO:Initializing load_model()
2023-11-06 02:35:23,228:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:30,542:INFO:Initializing load_model()
2023-11-06 02:35:30,542:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:30,552:INFO:Initializing load_model()
2023-11-06 02:35:30,552:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:30,583:INFO:Initializing load_model()
2023-11-06 02:35:30,583:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:34,518:INFO:Initializing load_model()
2023-11-06 02:35:34,518:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:34,535:INFO:Initializing load_model()
2023-11-06 02:35:34,535:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:34,551:INFO:Initializing load_model()
2023-11-06 02:35:34,551:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:37,002:INFO:Initializing load_model()
2023-11-06 02:35:37,002:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:37,017:INFO:Initializing load_model()
2023-11-06 02:35:37,017:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:37,018:INFO:Initializing load_model()
2023-11-06 02:35:37,018:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:37,242:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:35:37,389:INFO:Initializing predict_model()
2023-11-06 02:35:37,389:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D422740>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E8EDD20>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E27A5F0>)
2023-11-06 02:35:37,390:INFO:Checking exceptions
2023-11-06 02:35:37,390:INFO:Preloading libraries
2023-11-06 02:35:37,391:INFO:Set up data.
2023-11-06 02:35:37,396:INFO:Set up index.
2023-11-06 02:35:41,568:INFO:Initializing load_model()
2023-11-06 02:35:41,568:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:41,586:INFO:Initializing load_model()
2023-11-06 02:35:41,586:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:41,602:INFO:Initializing load_model()
2023-11-06 02:35:41,602:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:41,725:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:35:41,858:INFO:Initializing predict_model()
2023-11-06 02:35:41,858:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D3A47F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E8EE9E0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E299510>)
2023-11-06 02:35:41,858:INFO:Checking exceptions
2023-11-06 02:35:41,858:INFO:Preloading libraries
2023-11-06 02:35:41,858:INFO:Set up data.
2023-11-06 02:35:41,866:INFO:Set up index.
2023-11-06 02:35:45,434:INFO:Initializing load_model()
2023-11-06 02:35:45,434:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:45,451:INFO:Initializing load_model()
2023-11-06 02:35:45,451:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:45,462:INFO:Initializing load_model()
2023-11-06 02:35:45,462:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:35:45,560:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:35:45,735:INFO:Initializing predict_model()
2023-11-06 02:35:45,735:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D423C70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99E8EDA20>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E299510>)
2023-11-06 02:35:45,735:INFO:Checking exceptions
2023-11-06 02:35:45,735:INFO:Preloading libraries
2023-11-06 02:35:45,735:INFO:Set up data.
2023-11-06 02:35:45,739:INFO:Set up index.
2023-11-06 02:39:34,241:INFO:Initializing load_model()
2023-11-06 02:39:34,241:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:34,248:INFO:Initializing load_model()
2023-11-06 02:39:34,248:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:34,254:INFO:Initializing load_model()
2023-11-06 02:39:34,254:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:34,310:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:39:34,377:INFO:Initializing predict_model()
2023-11-06 02:39:34,377:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D423C40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D3A7D60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E27A4D0>)
2023-11-06 02:39:34,378:INFO:Checking exceptions
2023-11-06 02:39:34,378:INFO:Preloading libraries
2023-11-06 02:39:34,378:INFO:Set up data.
2023-11-06 02:39:34,382:INFO:Set up index.
2023-11-06 02:39:37,085:INFO:Initializing load_model()
2023-11-06 02:39:37,085:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:37,091:INFO:Initializing load_model()
2023-11-06 02:39:37,091:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:37,098:INFO:Initializing load_model()
2023-11-06 02:39:37,099:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:37,150:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:39:37,216:INFO:Initializing predict_model()
2023-11-06 02:39:37,216:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D420850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D3A7F40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99D2C70A0>)
2023-11-06 02:39:37,216:INFO:Checking exceptions
2023-11-06 02:39:37,216:INFO:Preloading libraries
2023-11-06 02:39:37,217:INFO:Set up data.
2023-11-06 02:39:37,221:INFO:Set up index.
2023-11-06 02:39:40,994:INFO:Initializing load_model()
2023-11-06 02:39:40,994:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:41,014:INFO:Initializing load_model()
2023-11-06 02:39:41,014:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:41,026:INFO:Initializing load_model()
2023-11-06 02:39:41,026:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:41,115:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:39:41,247:INFO:Initializing predict_model()
2023-11-06 02:39:41,247:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99E8EDAB0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D3A46A0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99D2C70A0>)
2023-11-06 02:39:41,247:INFO:Checking exceptions
2023-11-06 02:39:41,247:INFO:Preloading libraries
2023-11-06 02:39:41,247:INFO:Set up data.
2023-11-06 02:39:41,247:INFO:Set up index.
2023-11-06 02:39:43,231:INFO:Initializing load_model()
2023-11-06 02:39:43,231:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:43,245:INFO:Initializing load_model()
2023-11-06 02:39:43,245:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:43,262:INFO:Initializing load_model()
2023-11-06 02:39:43,262:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:46,843:INFO:Initializing load_model()
2023-11-06 02:39:46,843:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:46,859:INFO:Initializing load_model()
2023-11-06 02:39:46,859:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:46,875:INFO:Initializing load_model()
2023-11-06 02:39:46,875:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:53,313:INFO:Initializing load_model()
2023-11-06 02:39:53,313:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:53,330:INFO:Initializing load_model()
2023-11-06 02:39:53,330:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:53,348:INFO:Initializing load_model()
2023-11-06 02:39:53,348:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:55,913:INFO:Initializing load_model()
2023-11-06 02:39:55,913:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:55,930:INFO:Initializing load_model()
2023-11-06 02:39:55,930:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:55,944:INFO:Initializing load_model()
2023-11-06 02:39:55,944:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:58,509:INFO:Initializing load_model()
2023-11-06 02:39:58,509:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:58,515:INFO:Initializing load_model()
2023-11-06 02:39:58,528:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:39:58,530:INFO:Initializing load_model()
2023-11-06 02:39:58,530:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:40:03,861:INFO:Initializing load_model()
2023-11-06 02:40:03,862:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:40:03,878:INFO:Initializing load_model()
2023-11-06 02:40:03,878:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:40:03,900:INFO:Initializing load_model()
2023-11-06 02:40:03,900:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:40:04,002:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:40:04,096:INFO:Initializing predict_model()
2023-11-06 02:40:04,096:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D6F5990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D2FF640>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99DE6A050>)
2023-11-06 02:40:04,096:INFO:Checking exceptions
2023-11-06 02:40:04,096:INFO:Preloading libraries
2023-11-06 02:40:04,096:INFO:Set up data.
2023-11-06 02:40:04,115:INFO:Set up index.
2023-11-06 02:41:16,351:INFO:Initializing load_model()
2023-11-06 02:41:16,351:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:41:16,357:INFO:Initializing load_model()
2023-11-06 02:41:16,358:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:41:16,363:INFO:Initializing load_model()
2023-11-06 02:41:16,364:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:41:16,414:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:41:16,476:INFO:Initializing predict_model()
2023-11-06 02:41:16,476:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D358220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D6F42B0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C8BB910>)
2023-11-06 02:41:16,477:INFO:Checking exceptions
2023-11-06 02:41:16,477:INFO:Preloading libraries
2023-11-06 02:41:16,477:INFO:Set up data.
2023-11-06 02:41:16,482:INFO:Set up index.
2023-11-06 02:41:56,881:INFO:Initializing load_model()
2023-11-06 02:41:56,881:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:41:56,887:INFO:Initializing load_model()
2023-11-06 02:41:56,887:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:41:56,893:INFO:Initializing load_model()
2023-11-06 02:41:56,893:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:41:56,944:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:41:57,020:INFO:Initializing predict_model()
2023-11-06 02:41:57,020:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C7DBD60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D8D7A60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C737910>)
2023-11-06 02:41:57,020:INFO:Checking exceptions
2023-11-06 02:41:57,020:INFO:Preloading libraries
2023-11-06 02:41:57,021:INFO:Set up data.
2023-11-06 02:41:57,024:INFO:Set up index.
2023-11-06 02:42:22,398:INFO:Initializing load_model()
2023-11-06 02:42:22,398:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:42:22,404:INFO:Initializing load_model()
2023-11-06 02:42:22,404:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:42:22,410:INFO:Initializing load_model()
2023-11-06 02:42:22,410:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:42:22,456:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:42:22,517:INFO:Initializing predict_model()
2023-11-06 02:42:22,517:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C909D80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D8D5F90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E280F70>)
2023-11-06 02:42:22,518:INFO:Checking exceptions
2023-11-06 02:42:22,518:INFO:Preloading libraries
2023-11-06 02:42:22,518:INFO:Set up data.
2023-11-06 02:42:22,523:INFO:Set up index.
2023-11-06 02:42:24,713:INFO:Initializing load_model()
2023-11-06 02:42:24,714:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:42:24,720:INFO:Initializing load_model()
2023-11-06 02:42:24,720:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:42:24,726:INFO:Initializing load_model()
2023-11-06 02:42:24,726:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:42:26,794:INFO:Initializing load_model()
2023-11-06 02:42:26,794:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:42:26,804:INFO:Initializing load_model()
2023-11-06 02:42:26,804:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:42:26,820:INFO:Initializing load_model()
2023-11-06 02:42:26,821:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:42:26,927:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:42:27,070:INFO:Initializing predict_model()
2023-11-06 02:42:27,070:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DAF47C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DAF40A0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99DD860E0>)
2023-11-06 02:42:27,070:INFO:Checking exceptions
2023-11-06 02:42:27,070:INFO:Preloading libraries
2023-11-06 02:42:27,070:INFO:Set up data.
2023-11-06 02:42:27,080:INFO:Set up index.
2023-11-06 02:43:12,211:INFO:Initializing load_model()
2023-11-06 02:43:12,211:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:43:12,220:INFO:Initializing load_model()
2023-11-06 02:43:12,220:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:43:12,227:INFO:Initializing load_model()
2023-11-06 02:43:12,227:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:43:12,273:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:43:12,340:INFO:Initializing predict_model()
2023-11-06 02:43:12,340:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DAF67D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D712530>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E299510>)
2023-11-06 02:43:12,340:INFO:Checking exceptions
2023-11-06 02:43:12,341:INFO:Preloading libraries
2023-11-06 02:43:12,341:INFO:Set up data.
2023-11-06 02:43:12,344:INFO:Set up index.
2023-11-06 02:43:52,422:INFO:Initializing load_model()
2023-11-06 02:43:52,422:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:43:52,430:INFO:Initializing load_model()
2023-11-06 02:43:52,430:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:43:52,435:INFO:Initializing load_model()
2023-11-06 02:43:52,436:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:43:52,490:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:43:52,567:INFO:Initializing predict_model()
2023-11-06 02:43:52,567:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D6B1F60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D0E34F0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C5360>)
2023-11-06 02:43:52,567:INFO:Checking exceptions
2023-11-06 02:43:52,567:INFO:Preloading libraries
2023-11-06 02:43:52,568:INFO:Set up data.
2023-11-06 02:43:52,570:INFO:Set up index.
2023-11-06 02:44:10,114:INFO:Initializing load_model()
2023-11-06 02:44:10,114:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:44:10,121:INFO:Initializing load_model()
2023-11-06 02:44:10,121:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:44:10,127:INFO:Initializing load_model()
2023-11-06 02:44:10,127:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:44:10,183:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:44:10,249:INFO:Initializing predict_model()
2023-11-06 02:44:10,249:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D0E2AA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D6B1D50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C5360>)
2023-11-06 02:44:10,249:INFO:Checking exceptions
2023-11-06 02:44:10,249:INFO:Preloading libraries
2023-11-06 02:44:10,249:INFO:Set up data.
2023-11-06 02:44:10,254:INFO:Set up index.
2023-11-06 02:44:37,178:INFO:Initializing load_model()
2023-11-06 02:44:37,178:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:44:37,192:INFO:Initializing load_model()
2023-11-06 02:44:37,192:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:44:37,193:INFO:Initializing load_model()
2023-11-06 02:44:37,193:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:44:37,300:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:44:37,417:INFO:Initializing predict_model()
2023-11-06 02:44:37,455:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D0E2EF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D0E38E0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C692200>)
2023-11-06 02:44:37,455:INFO:Checking exceptions
2023-11-06 02:44:37,457:INFO:Preloading libraries
2023-11-06 02:44:37,457:INFO:Set up data.
2023-11-06 02:44:37,466:INFO:Set up index.
2023-11-06 02:44:38,009:INFO:Initializing load_model()
2023-11-06 02:44:38,009:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:44:38,025:INFO:Initializing load_model()
2023-11-06 02:44:38,025:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:44:38,042:INFO:Initializing load_model()
2023-11-06 02:44:38,042:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:44:38,170:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:44:38,283:INFO:Initializing predict_model()
2023-11-06 02:44:38,283:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D0E0640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D0E24D0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E0C5480>)
2023-11-06 02:44:38,283:INFO:Checking exceptions
2023-11-06 02:44:38,283:INFO:Preloading libraries
2023-11-06 02:44:38,283:INFO:Set up data.
2023-11-06 02:44:38,296:INFO:Set up index.
2023-11-06 02:44:41,278:INFO:Initializing load_model()
2023-11-06 02:44:41,278:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:44:41,292:INFO:Initializing load_model()
2023-11-06 02:44:41,292:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:44:41,305:INFO:Initializing load_model()
2023-11-06 02:44:41,305:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:44:41,394:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:44:41,509:INFO:Initializing predict_model()
2023-11-06 02:44:41,509:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DAF6620>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D0E2F20>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C60A4D0>)
2023-11-06 02:44:41,509:INFO:Checking exceptions
2023-11-06 02:44:41,509:INFO:Preloading libraries
2023-11-06 02:44:41,509:INFO:Set up data.
2023-11-06 02:44:41,509:INFO:Set up index.
2023-11-06 02:46:02,302:INFO:Initializing load_model()
2023-11-06 02:46:02,303:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:46:02,309:INFO:Initializing load_model()
2023-11-06 02:46:02,309:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:46:02,316:INFO:Initializing load_model()
2023-11-06 02:46:02,316:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:46:02,365:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:46:02,430:INFO:Initializing predict_model()
2023-11-06 02:46:02,430:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DAF6020>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D6B2A40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C692950>)
2023-11-06 02:46:02,430:INFO:Checking exceptions
2023-11-06 02:46:02,430:INFO:Preloading libraries
2023-11-06 02:46:02,430:INFO:Set up data.
2023-11-06 02:46:02,435:INFO:Set up index.
2023-11-06 02:46:16,174:INFO:Initializing load_model()
2023-11-06 02:46:16,174:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:46:16,191:INFO:Initializing load_model()
2023-11-06 02:46:16,191:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:46:16,207:INFO:Initializing load_model()
2023-11-06 02:46:16,207:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:46:16,305:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:46:16,415:INFO:Initializing predict_model()
2023-11-06 02:46:16,415:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D0E0490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DAF75E0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C692950>)
2023-11-06 02:46:16,415:INFO:Checking exceptions
2023-11-06 02:46:16,421:INFO:Preloading libraries
2023-11-06 02:46:16,421:INFO:Set up data.
2023-11-06 02:46:16,423:INFO:Set up index.
2023-11-06 02:46:22,224:INFO:Initializing load_model()
2023-11-06 02:46:22,224:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:46:22,243:INFO:Initializing load_model()
2023-11-06 02:46:22,243:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:46:22,257:INFO:Initializing load_model()
2023-11-06 02:46:22,257:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:46:22,361:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:46:22,480:INFO:Initializing predict_model()
2023-11-06 02:46:22,480:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DAF5B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D6B1A20>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E2E8E50>)
2023-11-06 02:46:22,480:INFO:Checking exceptions
2023-11-06 02:46:22,480:INFO:Preloading libraries
2023-11-06 02:46:22,480:INFO:Set up data.
2023-11-06 02:46:22,541:INFO:Set up index.
2023-11-06 02:46:36,120:INFO:Initializing load_model()
2023-11-06 02:46:36,120:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:46:36,135:INFO:Initializing load_model()
2023-11-06 02:46:36,135:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:46:36,154:INFO:Initializing load_model()
2023-11-06 02:46:36,154:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:46:36,253:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:46:36,364:INFO:Initializing predict_model()
2023-11-06 02:46:36,364:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D0E1570>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D0E0A60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E2E8160>)
2023-11-06 02:46:36,364:INFO:Checking exceptions
2023-11-06 02:46:36,364:INFO:Preloading libraries
2023-11-06 02:46:36,373:INFO:Set up data.
2023-11-06 02:46:36,373:INFO:Set up index.
2023-11-06 02:46:52,852:INFO:Initializing load_model()
2023-11-06 02:46:52,852:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:46:52,864:INFO:Initializing load_model()
2023-11-06 02:46:52,864:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:46:52,877:INFO:Initializing load_model()
2023-11-06 02:46:52,877:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:46:52,964:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:46:53,083:INFO:Initializing predict_model()
2023-11-06 02:46:53,083:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DAF4310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D0E2CE0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E2E8160>)
2023-11-06 02:46:53,084:INFO:Checking exceptions
2023-11-06 02:46:53,084:INFO:Preloading libraries
2023-11-06 02:46:53,084:INFO:Set up data.
2023-11-06 02:46:53,091:INFO:Set up index.
2023-11-06 02:49:04,270:INFO:Initializing load_model()
2023-11-06 02:49:04,270:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:49:04,278:INFO:Initializing load_model()
2023-11-06 02:49:04,278:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:49:04,285:INFO:Initializing load_model()
2023-11-06 02:49:04,285:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:49:04,335:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:49:04,402:INFO:Initializing predict_model()
2023-11-06 02:49:04,403:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D6B12A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DAF5120>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C737910>)
2023-11-06 02:49:04,404:INFO:Checking exceptions
2023-11-06 02:49:04,404:INFO:Preloading libraries
2023-11-06 02:49:04,404:INFO:Set up data.
2023-11-06 02:49:04,407:INFO:Set up index.
2023-11-06 02:49:11,885:INFO:Initializing load_model()
2023-11-06 02:49:11,885:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:49:11,889:INFO:Initializing load_model()
2023-11-06 02:49:11,889:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:49:11,906:INFO:Initializing load_model()
2023-11-06 02:49:11,906:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:49:12,008:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:49:12,115:INFO:Initializing predict_model()
2023-11-06 02:49:12,115:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D0E0820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D6B2FE0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C8B8C10>)
2023-11-06 02:49:12,115:INFO:Checking exceptions
2023-11-06 02:49:12,119:INFO:Preloading libraries
2023-11-06 02:49:12,120:INFO:Set up data.
2023-11-06 02:49:12,123:INFO:Set up index.
2023-11-06 02:49:42,319:INFO:Initializing load_model()
2023-11-06 02:49:42,319:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:49:42,325:INFO:Initializing load_model()
2023-11-06 02:49:42,326:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:49:42,332:INFO:Initializing load_model()
2023-11-06 02:49:42,332:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:49:42,389:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:49:42,454:INFO:Initializing predict_model()
2023-11-06 02:49:42,454:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99C8D8D30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DAF5DB0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C690C10>)
2023-11-06 02:49:42,454:INFO:Checking exceptions
2023-11-06 02:49:42,454:INFO:Preloading libraries
2023-11-06 02:49:42,455:INFO:Set up data.
2023-11-06 02:49:42,458:INFO:Set up index.
2023-11-06 02:49:52,321:INFO:Initializing load_model()
2023-11-06 02:49:52,321:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:49:52,337:INFO:Initializing load_model()
2023-11-06 02:49:52,337:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:49:52,355:INFO:Initializing load_model()
2023-11-06 02:49:52,355:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:49:52,446:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:49:52,562:INFO:Initializing predict_model()
2023-11-06 02:49:52,562:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D0E0BE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D711690>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E2524D0>)
2023-11-06 02:49:52,562:INFO:Checking exceptions
2023-11-06 02:49:52,562:INFO:Preloading libraries
2023-11-06 02:49:52,562:INFO:Set up data.
2023-11-06 02:49:52,562:INFO:Set up index.
2023-11-06 02:50:04,286:INFO:Initializing load_model()
2023-11-06 02:50:04,300:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:04,304:INFO:Initializing load_model()
2023-11-06 02:50:04,304:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:04,320:INFO:Initializing load_model()
2023-11-06 02:50:04,320:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:07,315:INFO:Initializing load_model()
2023-11-06 02:50:07,315:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:07,336:INFO:Initializing load_model()
2023-11-06 02:50:07,336:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:07,353:INFO:Initializing load_model()
2023-11-06 02:50:07,353:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:23,688:INFO:Initializing load_model()
2023-11-06 02:50:23,688:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:23,705:INFO:Initializing load_model()
2023-11-06 02:50:23,705:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:23,720:INFO:Initializing load_model()
2023-11-06 02:50:23,720:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:23,844:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:50:23,994:INFO:Initializing predict_model()
2023-11-06 02:50:23,994:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DDA7CA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DD87040>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C737910>)
2023-11-06 02:50:23,994:INFO:Checking exceptions
2023-11-06 02:50:23,994:INFO:Preloading libraries
2023-11-06 02:50:23,994:INFO:Set up data.
2023-11-06 02:50:24,004:INFO:Set up index.
2023-11-06 02:50:35,253:INFO:Initializing load_model()
2023-11-06 02:50:35,253:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:35,270:INFO:Initializing load_model()
2023-11-06 02:50:35,270:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:35,288:INFO:Initializing load_model()
2023-11-06 02:50:35,288:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:35,386:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:50:35,493:INFO:Initializing predict_model()
2023-11-06 02:50:35,493:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DAF7FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DE5F6D0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E283D90>)
2023-11-06 02:50:35,493:INFO:Checking exceptions
2023-11-06 02:50:35,493:INFO:Preloading libraries
2023-11-06 02:50:35,493:INFO:Set up data.
2023-11-06 02:50:35,503:INFO:Set up index.
2023-11-06 02:50:39,567:INFO:Initializing load_model()
2023-11-06 02:50:39,567:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:39,599:INFO:Initializing load_model()
2023-11-06 02:50:39,600:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:39,600:INFO:Initializing load_model()
2023-11-06 02:50:39,600:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:39,711:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:50:39,824:INFO:Initializing predict_model()
2023-11-06 02:50:39,824:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DE5F400>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DAF6CE0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E27A5F0>)
2023-11-06 02:50:39,824:INFO:Checking exceptions
2023-11-06 02:50:39,824:INFO:Preloading libraries
2023-11-06 02:50:39,824:INFO:Set up data.
2023-11-06 02:50:39,830:INFO:Set up index.
2023-11-06 02:50:44,531:INFO:Initializing load_model()
2023-11-06 02:50:44,531:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:44,537:INFO:Initializing load_model()
2023-11-06 02:50:44,547:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:44,553:INFO:Initializing load_model()
2023-11-06 02:50:44,553:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:44,660:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:50:44,772:INFO:Initializing predict_model()
2023-11-06 02:50:44,772:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DE5F7C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DE5F580>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C690430>)
2023-11-06 02:50:44,772:INFO:Checking exceptions
2023-11-06 02:50:44,772:INFO:Preloading libraries
2023-11-06 02:50:44,772:INFO:Set up data.
2023-11-06 02:50:44,780:INFO:Set up index.
2023-11-06 02:50:49,353:INFO:Initializing load_model()
2023-11-06 02:50:49,353:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:49,369:INFO:Initializing load_model()
2023-11-06 02:50:49,369:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:49,386:INFO:Initializing load_model()
2023-11-06 02:50:49,386:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:49,486:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:50:49,596:INFO:Initializing predict_model()
2023-11-06 02:50:49,596:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DAF41F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DE5E7D0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E283B50>)
2023-11-06 02:50:49,602:INFO:Checking exceptions
2023-11-06 02:50:49,602:INFO:Preloading libraries
2023-11-06 02:50:49,602:INFO:Set up data.
2023-11-06 02:50:49,603:INFO:Set up index.
2023-11-06 02:50:52,970:INFO:Initializing load_model()
2023-11-06 02:50:52,970:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:52,987:INFO:Initializing load_model()
2023-11-06 02:50:52,987:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:53,003:INFO:Initializing load_model()
2023-11-06 02:50:53,003:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:53,093:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:50:53,209:INFO:Initializing predict_model()
2023-11-06 02:50:53,209:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DAF59F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DAF4250>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E27A4D0>)
2023-11-06 02:50:53,209:INFO:Checking exceptions
2023-11-06 02:50:53,209:INFO:Preloading libraries
2023-11-06 02:50:53,209:INFO:Set up data.
2023-11-06 02:50:53,219:INFO:Set up index.
2023-11-06 02:50:56,683:INFO:Initializing load_model()
2023-11-06 02:50:56,685:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:56,687:INFO:Initializing load_model()
2023-11-06 02:50:56,687:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:56,703:INFO:Initializing load_model()
2023-11-06 02:50:56,703:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:50:56,804:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:50:56,921:INFO:Initializing predict_model()
2023-11-06 02:50:56,921:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DE5E290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DAF4610>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E27A5F0>)
2023-11-06 02:50:56,921:INFO:Checking exceptions
2023-11-06 02:50:56,921:INFO:Preloading libraries
2023-11-06 02:50:56,921:INFO:Set up data.
2023-11-06 02:50:56,926:INFO:Set up index.
2023-11-06 02:51:55,067:INFO:Initializing load_model()
2023-11-06 02:51:55,067:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:51:55,075:INFO:Initializing load_model()
2023-11-06 02:51:55,075:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:51:55,080:INFO:Initializing load_model()
2023-11-06 02:51:55,080:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:51:55,122:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:52:07,981:INFO:Initializing load_model()
2023-11-06 02:52:07,981:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:52:07,988:INFO:Initializing load_model()
2023-11-06 02:52:07,988:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:52:07,994:INFO:Initializing load_model()
2023-11-06 02:52:07,994:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:52:08,049:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:52:08,113:INFO:Initializing predict_model()
2023-11-06 02:52:08,113:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DE5F580>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DB252D0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C888550>)
2023-11-06 02:52:08,113:INFO:Checking exceptions
2023-11-06 02:52:08,113:INFO:Preloading libraries
2023-11-06 02:52:08,114:INFO:Set up data.
2023-11-06 02:52:08,118:INFO:Set up index.
2023-11-06 02:53:04,975:INFO:Initializing load_model()
2023-11-06 02:53:04,975:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:04,981:INFO:Initializing load_model()
2023-11-06 02:53:04,981:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:04,988:INFO:Initializing load_model()
2023-11-06 02:53:04,988:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:05,074:INFO:Initializing predict_model()
2023-11-06 02:53:05,074:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DB26FE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DE5D600>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E2503A0>)
2023-11-06 02:53:05,074:INFO:Checking exceptions
2023-11-06 02:53:05,074:INFO:Preloading libraries
2023-11-06 02:53:05,075:INFO:Set up data.
2023-11-06 02:53:05,078:INFO:Set up index.
2023-11-06 02:53:05,284:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:53:08,283:INFO:Initializing load_model()
2023-11-06 02:53:08,283:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:08,290:INFO:Initializing load_model()
2023-11-06 02:53:08,290:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:08,296:INFO:Initializing load_model()
2023-11-06 02:53:08,296:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:08,545:INFO:Initializing predict_model()
2023-11-06 02:53:08,545:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DE27FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DB27A60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C8B9C60>)
2023-11-06 02:53:08,545:INFO:Checking exceptions
2023-11-06 02:53:08,545:INFO:Preloading libraries
2023-11-06 02:53:08,546:INFO:Set up data.
2023-11-06 02:53:08,553:INFO:Set up index.
2023-11-06 02:53:08,798:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:53:09,767:INFO:Initializing load_model()
2023-11-06 02:53:09,767:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:09,784:INFO:Initializing load_model()
2023-11-06 02:53:09,784:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:09,801:INFO:Initializing load_model()
2023-11-06 02:53:09,801:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:09,976:INFO:Initializing predict_model()
2023-11-06 02:53:09,976:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DE247F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DAF6A40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C8BB520>)
2023-11-06 02:53:09,976:INFO:Checking exceptions
2023-11-06 02:53:09,976:INFO:Preloading libraries
2023-11-06 02:53:09,976:INFO:Set up data.
2023-11-06 02:53:09,984:INFO:Set up index.
2023-11-06 02:53:10,253:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:53:14,017:INFO:Initializing load_model()
2023-11-06 02:53:14,017:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:14,034:INFO:Initializing load_model()
2023-11-06 02:53:14,034:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:14,047:INFO:Initializing load_model()
2023-11-06 02:53:14,047:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:14,245:INFO:Initializing predict_model()
2023-11-06 02:53:14,245:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DE5D330>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DAF4220>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C888550>)
2023-11-06 02:53:14,249:INFO:Checking exceptions
2023-11-06 02:53:14,249:INFO:Preloading libraries
2023-11-06 02:53:14,249:INFO:Set up data.
2023-11-06 02:53:14,255:INFO:Set up index.
2023-11-06 02:53:14,498:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:53:18,300:INFO:Initializing load_model()
2023-11-06 02:53:18,300:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:18,322:INFO:Initializing load_model()
2023-11-06 02:53:18,322:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:18,334:INFO:Initializing load_model()
2023-11-06 02:53:18,334:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:18,517:INFO:Initializing predict_model()
2023-11-06 02:53:18,517:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DE241C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DE5C7F0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E283D90>)
2023-11-06 02:53:18,517:INFO:Checking exceptions
2023-11-06 02:53:18,517:INFO:Preloading libraries
2023-11-06 02:53:18,517:INFO:Set up data.
2023-11-06 02:53:18,522:INFO:Set up index.
2023-11-06 02:53:18,778:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:53:22,400:INFO:Initializing load_model()
2023-11-06 02:53:22,400:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:22,414:INFO:Initializing load_model()
2023-11-06 02:53:22,414:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:22,417:INFO:Initializing load_model()
2023-11-06 02:53:22,417:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:22,602:INFO:Initializing predict_model()
2023-11-06 02:53:22,602:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DE5D6C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DE5CEE0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C8BB520>)
2023-11-06 02:53:22,602:INFO:Checking exceptions
2023-11-06 02:53:22,604:INFO:Preloading libraries
2023-11-06 02:53:22,604:INFO:Set up data.
2023-11-06 02:53:22,609:INFO:Set up index.
2023-11-06 02:53:22,868:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:53:26,233:INFO:Initializing load_model()
2023-11-06 02:53:26,233:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:26,246:INFO:Initializing load_model()
2023-11-06 02:53:26,246:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:26,261:INFO:Initializing load_model()
2023-11-06 02:53:26,261:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:26,435:INFO:Initializing predict_model()
2023-11-06 02:53:26,435:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DE5DC60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DE5CD90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99D2C7D90>)
2023-11-06 02:53:26,440:INFO:Checking exceptions
2023-11-06 02:53:26,440:INFO:Preloading libraries
2023-11-06 02:53:26,440:INFO:Set up data.
2023-11-06 02:53:26,440:INFO:Set up index.
2023-11-06 02:53:26,733:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:53:30,300:INFO:Initializing load_model()
2023-11-06 02:53:30,300:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:30,318:INFO:Initializing load_model()
2023-11-06 02:53:30,318:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:30,335:INFO:Initializing load_model()
2023-11-06 02:53:30,335:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:30,566:INFO:Initializing predict_model()
2023-11-06 02:53:30,566:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DE25CF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DE5E0B0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C8BA830>)
2023-11-06 02:53:30,566:INFO:Checking exceptions
2023-11-06 02:53:30,566:INFO:Preloading libraries
2023-11-06 02:53:30,566:INFO:Set up data.
2023-11-06 02:53:30,573:INFO:Set up index.
2023-11-06 02:53:30,830:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:53:33,745:INFO:Initializing load_model()
2023-11-06 02:53:33,745:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:33,761:INFO:Initializing load_model()
2023-11-06 02:53:33,761:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:33,770:INFO:Initializing load_model()
2023-11-06 02:53:33,777:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:33,966:INFO:Initializing predict_model()
2023-11-06 02:53:33,966:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DAF75B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DE5F310>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E923250>)
2023-11-06 02:53:33,966:INFO:Checking exceptions
2023-11-06 02:53:33,966:INFO:Preloading libraries
2023-11-06 02:53:33,966:INFO:Set up data.
2023-11-06 02:53:33,966:INFO:Set up index.
2023-11-06 02:53:34,242:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:53:36,055:INFO:Initializing load_model()
2023-11-06 02:53:36,055:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:36,071:INFO:Initializing load_model()
2023-11-06 02:53:36,071:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:36,097:INFO:Initializing load_model()
2023-11-06 02:53:36,097:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:36,411:INFO:Initializing load_model()
2023-11-06 02:53:36,411:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:36,435:INFO:Initializing load_model()
2023-11-06 02:53:36,435:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:36,450:INFO:Initializing load_model()
2023-11-06 02:53:36,450:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:36,769:INFO:Initializing load_model()
2023-11-06 02:53:36,777:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:36,795:INFO:Initializing load_model()
2023-11-06 02:53:36,795:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:36,818:INFO:Initializing load_model()
2023-11-06 02:53:36,818:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:36,849:INFO:Initializing load_model()
2023-11-06 02:53:36,849:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:36,868:INFO:Initializing load_model()
2023-11-06 02:53:36,868:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:36,898:INFO:Initializing load_model()
2023-11-06 02:53:36,898:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:37,507:INFO:Initializing load_model()
2023-11-06 02:53:37,507:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:37,523:INFO:Initializing load_model()
2023-11-06 02:53:37,523:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:37,545:INFO:Initializing load_model()
2023-11-06 02:53:37,545:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:37,566:INFO:Initializing load_model()
2023-11-06 02:53:37,566:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:37,588:INFO:Initializing load_model()
2023-11-06 02:53:37,588:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:37,600:INFO:Initializing load_model()
2023-11-06 02:53:37,600:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:37,620:INFO:Initializing load_model()
2023-11-06 02:53:37,620:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:37,636:INFO:Initializing load_model()
2023-11-06 02:53:37,636:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:37,717:INFO:Initializing load_model()
2023-11-06 02:53:37,717:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:38,186:INFO:Initializing predict_model()
2023-11-06 02:53:38,186:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DB25FF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D359E10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C8BB520>)
2023-11-06 02:53:38,186:INFO:Checking exceptions
2023-11-06 02:53:38,186:INFO:Preloading libraries
2023-11-06 02:53:38,192:INFO:Set up data.
2023-11-06 02:53:38,200:INFO:Set up index.
2023-11-06 02:53:38,440:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:53:42,517:INFO:Initializing load_model()
2023-11-06 02:53:42,517:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:42,534:INFO:Initializing load_model()
2023-11-06 02:53:42,534:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:42,552:INFO:Initializing load_model()
2023-11-06 02:53:42,552:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:42,720:INFO:Initializing predict_model()
2023-11-06 02:53:42,720:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DB26380>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DAF7D30>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E283D90>)
2023-11-06 02:53:42,720:INFO:Checking exceptions
2023-11-06 02:53:42,720:INFO:Preloading libraries
2023-11-06 02:53:42,726:INFO:Set up data.
2023-11-06 02:53:42,732:INFO:Set up index.
2023-11-06 02:53:42,999:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:53:46,703:INFO:Initializing load_model()
2023-11-06 02:53:46,703:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:46,719:INFO:Initializing load_model()
2023-11-06 02:53:46,719:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:46,734:INFO:Initializing load_model()
2023-11-06 02:53:46,734:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:53:46,904:INFO:Initializing predict_model()
2023-11-06 02:53:46,904:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DE5EF20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DB24250>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C8BA680>)
2023-11-06 02:53:46,904:INFO:Checking exceptions
2023-11-06 02:53:46,904:INFO:Preloading libraries
2023-11-06 02:53:46,904:INFO:Set up data.
2023-11-06 02:53:46,916:INFO:Set up index.
2023-11-06 02:53:47,193:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:54:29,885:INFO:Initializing load_model()
2023-11-06 02:54:29,885:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:54:29,891:INFO:Initializing load_model()
2023-11-06 02:54:29,891:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:54:29,897:INFO:Initializing load_model()
2023-11-06 02:54:29,897:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:54:29,947:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:54:30,012:INFO:Initializing predict_model()
2023-11-06 02:54:30,012:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DAF6A40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DAF7340>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99C8BA8C0>)
2023-11-06 02:54:30,012:INFO:Checking exceptions
2023-11-06 02:54:30,013:INFO:Preloading libraries
2023-11-06 02:54:30,013:INFO:Set up data.
2023-11-06 02:54:30,017:INFO:Set up index.
2023-11-06 02:54:55,790:INFO:Initializing load_model()
2023-11-06 02:54:55,790:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:54:55,796:INFO:Initializing load_model()
2023-11-06 02:54:55,797:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:54:55,802:INFO:Initializing load_model()
2023-11-06 02:54:55,802:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:54:55,846:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:54:55,895:INFO:Initializing predict_model()
2023-11-06 02:54:55,896:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DE5CA60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99D2DE680>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E9FD55B7F0>)
2023-11-06 02:54:55,896:INFO:Checking exceptions
2023-11-06 02:54:55,896:INFO:Preloading libraries
2023-11-06 02:54:55,896:INFO:Set up data.
2023-11-06 02:54:55,901:INFO:Set up index.
2023-11-06 02:54:59,632:INFO:Initializing load_model()
2023-11-06 02:54:59,632:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:54:59,648:INFO:Initializing load_model()
2023-11-06 02:54:59,648:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:54:59,661:INFO:Initializing load_model()
2023-11-06 02:54:59,661:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:54:59,754:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:54:59,848:INFO:Initializing predict_model()
2023-11-06 02:54:59,848:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D35B730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DB278E0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99D2C7D00>)
2023-11-06 02:54:59,848:INFO:Checking exceptions
2023-11-06 02:54:59,848:INFO:Preloading libraries
2023-11-06 02:54:59,848:INFO:Set up data.
2023-11-06 02:54:59,857:INFO:Set up index.
2023-11-06 02:55:06,395:INFO:Initializing load_model()
2023-11-06 02:55:06,395:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:55:06,398:INFO:Initializing load_model()
2023-11-06 02:55:06,398:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:55:06,422:INFO:Initializing load_model()
2023-11-06 02:55:06,422:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:55:06,516:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:55:06,626:INFO:Initializing predict_model()
2023-11-06 02:55:06,626:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99D358B20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DB27940>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99E2E8160>)
2023-11-06 02:55:06,626:INFO:Checking exceptions
2023-11-06 02:55:06,626:INFO:Preloading libraries
2023-11-06 02:55:06,628:INFO:Set up data.
2023-11-06 02:55:06,636:INFO:Set up index.
2023-11-06 02:55:10,815:INFO:Initializing load_model()
2023-11-06 02:55:10,815:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 02:55:10,833:INFO:Initializing load_model()
2023-11-06 02:55:10,833:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 02:55:10,844:INFO:Initializing load_model()
2023-11-06 02:55:10,848:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 02:55:10,940:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 02:55:11,040:INFO:Initializing predict_model()
2023-11-06 02:55:11,040:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E99DAF54E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E99DB247C0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E99D2C7D00>)
2023-11-06 02:55:11,040:INFO:Checking exceptions
2023-11-06 02:55:11,040:INFO:Preloading libraries
2023-11-06 02:55:11,040:INFO:Set up data.
2023-11-06 02:55:11,056:INFO:Set up index.
2023-11-06 02:56:02,579:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_efaabad5dcdb4361aa1152b64cd3ff36
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,586:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_8d62f80b674442959931a3ea4d3683f7_a12a54dd80914049bbb5ed59ea03785a
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,586:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_9fff59581f1d444c98437a262c55d9b7
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,587:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_87ebe7ff23994f74b77b68267aa6206c_e26e3670d611496a8617e9e2b43071be
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,587:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_49981648e75d46b0af73c363d6e9e089
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,587:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_b5cd1af2965b4a758c61392d7a2f8ddf_6a05ac7f6c004b99875afc333dd3b997
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,587:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_8bb88e00e4eb4a64985fb66afd903842
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,587:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_a3d43a8bf77148639e9e042c9ff30291_4d7de093089940b898b9035942d92005
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,588:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_469240c5b5b24c7b95c57950aa55f650
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,588:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_d5de579243c04aafae38886944f86037_2ea8564514c54994955c4ba474b69f48
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,589:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_21c803b85ee14c35be4bcce9fa590dc8
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,589:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_1d0fb22a92a1464e92d6f2d7752a6471_607b8f20c45f493bba91d5ee0c3450fa
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,589:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_a7fb3390384a47f2a351ce163646268f
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,590:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_3780de53eaef4a7f85c4fc80f8a2e883_e92e36353a114647a3dcda972c05e93a
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,590:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_b26794be64504811b1733c78a679966d
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,591:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_40a2ec0d4b074eb09d44fc7a8230a6b2_ab42b7f70d7844beb1f22a8a75cb237b
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,591:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_2380040dbf44429bab7e9722214f72d0
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,591:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_cd5d2095d8534fc0b65aa3bb9f0339ea_9dc714172c784a7d81f3f2254706c55b
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,591:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_efb0da4979a246ccb6033554dc810fb6
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,591:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_c675692dde0741d5aa13da80321b8eed_cec0bbca4bb2483181c63d7a5022b55c
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,591:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_84ddf6557fa04c3fa99910e789ef4913
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,591:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_c7d9dac6684a4ff5b00e365bd07d68e8_7a893788fd5843629c2fc58cb0cbc751
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,591:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_27895d8321254026865229b9d1f75e3d
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,591:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_358fd86df20b4bdd9d6d68aa5e141769_669dc49786d44b22a7fdb9d21a296056
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,591:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_615faef869bf4a63b0a92e676bdc5bb7
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,591:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ab29442dae1e41e58c0cc6eca21b7be2_1b28f86ae643433cbe33d8363d6334ec
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,591:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_fede6a24ba134b63856347407872bb9c
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,591:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_2eb2c9525072401588fc2a178359a682_3fb0c57d8535459da35d01c005555540
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,592:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_4516c4feb1d543fdbb196ffbbaa8a5bb
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,592:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_a68ee6a9df904487afdbdb98379581b7_0e02590ccf2c47a8af98c2f43dfde3e4
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,592:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_7cd643dc8b1d4c7180e62884149712af
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,592:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_cf65ed9dd16e4e41bbc81a56a6a4c198_62700a7877d84aa688e194350259ee3e
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,593:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_84ffe299fe804d35a9215c893bc4735a
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,593:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_31772e7c6c4b4c0ab8005dc83d5342f4_294d7fe35d264c27b092199725023d07
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,593:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_decb6fae240c409d9664e56b4bf93868
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,593:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_eb11dc73a7de4b86ac16e2a5ccbf952d_49afd6129d684026b8d9233447379b22
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,593:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_87ea8ee4a744474897e50bd58724f7d6
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,593:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_abd3a2a6a59a4adfbc8552d35176fae7_76d0a3be6ab945aba66030cab0b3b20f
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,593:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_c9ec7a85508e4eabac614a5d23c3f769
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,594:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_c5a41c5237434ac7837ad66aef5a68d9_fea1ee1a57d94d238e8caa805aff0df9
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,594:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_e26b642c1bfb4dbd97da6d1ff344834c
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,594:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_facd6d5fd29646b8a0dd0bf6c7dd2707_0688389f559d44a5861f106728fa68e9
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,594:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_11ff038670204010b24d9cd2c27dfdc0
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,594:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_48acc26bff0045ef8f63425862346ee1_8c92816b2ed843fa8d65250c0e75c6d0
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,594:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_2d99cadf93864c759ea07036763d3b1f
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,594:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_3dfa1d9002f44806adb3d72c99271c17_094a5358c9b4411cbf72787cd82f34d8
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,595:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_226f4d2f9b894101819a4782be330c98
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,595:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_570852b0cd2441e9b2a53151ea8bcf6b_7d0d7a3e303e4e5cbdb297b4413f58ac
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,595:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_f3aed9adf85c490b993f44e43aa7868b
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,596:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_2b60ff3a164b4dab9aaacea0b81dc4b1_c7b0ba46f01d4b8cadaf17079f11ea54
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,596:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_5073bf10120b4366914e726c3d0068bf
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,596:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_2efeb98508664a7ca3bfcdb193d33477_d882b92bb00943acabc1e1b00dec60a1
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,597:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_8b06f8e8ae6e42e7be6ac55fb7279bdd
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,597:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_f56740ba3cd04e6db7d3ab7025669dc7_84559312085e4c6990f04e6c798bf699
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,597:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_6ba1950259c54738ac746ecafc1e53db
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,598:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_9c7f933feebf47f39ee74a2de7d6428f_bceb8fb0bea74743b809837c302495ba
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,598:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_f58de579ad084731a5f6873ba29d63d8
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,598:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_c6b062dcab7843ea94cb7be896906f77_70b77be73c0f4f2c9be18a46b12638d0
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,598:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_408f95e8186c41e08ca0c3e728476d1c
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,598:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_1d323037d93a4024bde11264b969cff6_290199100e424136a16443d4f8f3a625
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,598:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_742c6e7bdfdd478aa211e4d99774a8ff
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,598:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_fcdeca0bded143a39c1e6afb9ec801bb_7c2bc1e1a2c0435a8de48c013e02a486
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,598:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_5eb2ced194d4429897218b4cf94c7601
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,598:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_0ede6f2347b34a74ae7749f62bbc99dc_cbc80753b80a43efb64a6d28216e0f98
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,627:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_3287beeb56e74cb89741a07a90505308
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,627:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_3a4c3db5e20c42888e5c4b23ab43566c_79cd4932b0c6478f9de3833d220146a4
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,628:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_4a7e8a4115c645f083b65d91479733d6
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,628:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_629ebf98b81944feb1e12e931b70e091_49a09a76cb4145b19d938858e1995b7d
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,628:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_5376361be22e462bb9b068e09e40c18d
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,628:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_915a06f1b8e34656aceea2fa187f16ba_2906ccd491a14536a2bfda9090eddc06
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,628:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_e43dd656e680459c951267dabb85565d
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,628:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_38ee31adec404975bc8894ed7e83a3e3_9b5a546e07a549549c5b5d8c5cf9effb
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,633:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_40649db0a16644079c98980234720904
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,633:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_43e6c067db3c4351a0acc9ff383078bd_32d724c7e09d4714b029197809e20de9
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,633:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_89fc1d74234449afb174e0bac3de6360
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,633:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_13fc3e09adc4476a93e1b1538332d0c3_418e2f6c9cb547079798ff2c5285e1b1
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,633:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_acebe7367a7a45e9a3d9b5598b5634b9
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,633:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_cf1e5fd03ace4121a9db1cfe40a77906_87c1d30501a2476096924a85339d1b1f
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,633:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_1fc7d92e09a64c8fbeca984574a39c27
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,634:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_d565bfc08f1544718299991235239c03_46c8bbb997f34144a011752136beeed6
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,634:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_1644a66e2f694154b28ac39ea278446b
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,634:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_603960600ea8425ead778b553ec29954_d59f6736d3dd45a6af4ddb6dfa5582d7
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,634:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_5af1ee50ea25493eb80d07b0695f9cdd
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,634:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_48b54c9954594c5682d40c18ccfa0ae8_bdb97be124b34031bb8f0a6aedd01ff1
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,634:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_6d9ba6f08c2743a3b137c407ba136b40
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,635:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_926dc2f18be64467a5891b733a033674_8116c858f4cc4f4d8ddc0ce8ee353d16
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,635:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_d9dc01c6c7c34da6b3ad2a5d225c3010
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,635:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_e256f6a027714bdb9be58d8befc95e88_79bc54009d7b4fbda6c91e9f5ac8d723
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,635:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_7151c9e9aed44513b409c46cb4624f04
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,635:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_6e902814688e465ea5e5be48d260a670_5283629e1dfd4ca997056b371d461a64
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,635:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_d84eeddf24e74aa69e02bb36deae21c4
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,635:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_e68eba99d4f74b30a0faad009c1f0b59_9708c3482fa84db9989a1054b7fad491
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,635:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_6dc09d374e904ea695eb036fcc2e6436
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,635:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_706fd62093164048ae3907784bbc9196_39db884018ac4829b2ff66c267a3e492
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,635:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_e0d3290eb77f4ada8fc6964a772f3969
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,635:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_43dddf7f72cb4881a3fb5ef3972dca8e_f0cd3149544c446cb737cf4534255ffe
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,635:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_a81714c85d454194a5447a770c6d84ca
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,636:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_8710ff188d75474ea2e15d7908d6a589_ff056200060f47dbbdebadd688876892
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,636:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_1b9d409b346c408f9a4fc5e3cdf001b3
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,636:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_fb7b154e353540a999d0b29a0c121a0d_49ba3483e5474fa0b737094ca0731095
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,636:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_d9d8af5b7c40435f8a557048c0c2c9ab
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,636:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_8034bdb665f44e698a5762b60d5f4970_638a7c7ba8464bd5b160c7210bde0b1a
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,636:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_86cef15d58e44d8b869a946c468f7fc1
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,636:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_dba6fe4a167d41fd88a42904f1df20ad_d7a7d401295c45ce9a9fc8002a6ffdc0
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,636:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_f90c7b0fdd5a4f15b73f5ebb8a6f8651
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,636:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_d1377418ae1c42ccafd033dfa6cc3099_04cb269bf0c747dd848c64adceff8f92
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,636:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_12a921e8c3064534bc93618aa5b21999
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,637:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_1e6281f30bbf46afb42a9c7f8ed6a77c_aa0fe9a8750e4455ab0247b07e001b18
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,637:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_a434c6ee97cb4a6b9eddd2998469aa9f
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,637:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_da67db023c494a1dbe5d4ecb9e46c5e8_37da5940a2394232b1dc8ba728095515
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,637:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_cae778f94871460fa3983cec23cf778c
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,637:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_b1b36fca826e4212a2e8a09ef417c190_add069aad79b46a8b20251b44c892ffb
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,637:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_1c96d79c325f491781182a77412ad510
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,637:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_7bcf1bfcee0a444a8f71abab4849cd3e_22127f88d2484ea6a060d86154565e79
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,638:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_42302960c55b44aa966f3b47e49e90c8
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,638:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_7cbe640f5224432db3b8203e2911628c_94d1dc6845844613b02c4c8b67e57a02
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,638:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_4cc0debd1c06496cace3d7aeb2cb5003
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,638:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_668adc09127f47f792c483d822fc9a2a_05f8e9fce72d4923a7ed536cb171c587
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,639:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_7dcdcde1ac664c3384498819263692b8
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,639:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_f86e4d34fad6421da03afff72387a5a5_1f7ffa90c27442f4b34a9a194bdf0ec0
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,639:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_594f984d935c476cb365cae3b78da4c1
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,639:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_437181f965194325bab615d9ae853fbd_ab8a4f61267a4d3d9852838f22fa0366
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,639:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_65ef0efb91f74472838deac98ef6b41c
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,639:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_a8af130070564ff6ab5aec40bc328d84_a8537d1a4231406e9360483852025e4f
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,640:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_af10929761564e5e89b6be82764077eb
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,641:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_2bde7b97434b4bf6a74a9bc19e9cfdd9_7a1dad80a3b14067a17cb6439f322c55
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,641:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_f406b8a6e9234820854481f40a71b363
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,641:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_c09ecd380cf34ebab98a5f4b484ca5a0_e097570e3c954598858d6f14ccd5ba31
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,641:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_2f341bd287734d38b8776c2afbc63a49
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,641:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_47914ba774914cd7a2996f77e784cd03_cce6c88c04d44f8289817140b890cfa6
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,641:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_91adb858d4284af58cc2eaee6f979a43
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,641:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_6e1ca236fd104bc8be284d79ef3d0027_773756ddd89745bf9a3f23dfca8291c3
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,642:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_44d3d1bc1ae544939eee7022bf3f5133
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,642:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_b540caf9de3e445a84e371ef5c62c390_c1499f7763454fb2a869b85b701a0b5a
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,642:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_69be90e8da2e4ad69cc583921ff17eff
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,642:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_badf35a17f644f169a86134c4725b923_b85564b8aa9b4bbe9ef5a79da54dacf7
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,642:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_82e08f06ba0a49778043696ddc917d83
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,642:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_b3f6f33906fb4235854d46eea3a03dd1_41665ab706fc458fba7616a4e3c00bd0
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,642:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_bfc71860b2ac4fa385a2239a6252d791
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,642:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_898591d89b604f86830f4015dc31556e_330ac038b8864eada0c2865df69135aa
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,642:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_71b51c5526164e2e92cb230d1b875cd1
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,643:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_13b05ffd21e1445ea6bcfdae0147a8c7_7958877913d14fb0bbc54b3376ea730a
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,643:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_4ac190ca8a964f3f8a78f39c15507334
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,643:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_d39b9b6812cb4903a1f6d5cad9a0dd61_b161e5e92fbf460ba11daacee50b1b07
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,643:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_99ed115cac074f62b3a1a99671b06600
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,643:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_bf38d026197f4aeeab9298e70504c129_8a11889dbff84939980de5c854d92fbe
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,643:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_e578fc2c934f422a8c4c555c8bc60c71
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,643:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_6cc9a8e9abf84c1583a03147dda2d5a2_85eaba65776b453fbcab0de393a7c6b8
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,643:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_7ac6f40786624e8cb2ea7f736b694a05
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,644:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_f3902c4ebffa414ea7c0d67690970e0a_fce89ad15f4f4d5086926ac1fa54ff32
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,644:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_17c3d7cf46d944659fa9227dc42ad36c
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,644:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_8ce1d5454b5a4029940fd7a16dd689de_4a08d4f3870343788767d0cea930d1fc
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,644:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_bd792a69b9f044db9cc4f9b074d3c2b1
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,644:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_de9205d4212c47bc825aa6a365b0299e_b07d7a094c214453a3578826c95a4f5d
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,644:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_ef74cb4b6ac140eabb1534f07a86c3a9
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,644:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_71f080c8b30841748a9af5a8fe7d5843_5ace5d44b94946628e4b7e3b7abada74
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,644:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_b101c1b02d7f44f3984b3f81018b5a18
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,644:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_132baa438e6d476e92c0617d741ae932_ffe01b50e0954f4c942d93d176495ab3
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,645:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_36bdc9a8a9e2453b83f4ab0c46962866
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 02:56:02,645:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_10372_ba5aa8cb9de74be5a6c59d62e23237d4_3b955f424d0e4b218bc2ed522ceb5d9b
  warnings.warn("Failed to delete temporary folder: {}"

2023-11-06 11:28:10,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 11:28:10,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 11:28:10,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 11:28:10,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 11:28:10,994:INFO:Initializing load_model()
2023-11-06 11:28:10,995:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:28:12,947:INFO:Initializing load_model()
2023-11-06 11:28:12,947:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:28:12,963:INFO:Initializing load_model()
2023-11-06 11:28:12,963:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:28:12,987:INFO:Initializing load_model()
2023-11-06 11:28:12,987:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:28:12,987:INFO:Initializing load_model()
2023-11-06 11:28:12,987:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:28:13,003:INFO:Initializing load_model()
2023-11-06 11:28:13,008:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:28:35,296:INFO:Initializing load_model()
2023-11-06 11:28:35,297:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:28:35,303:INFO:Initializing load_model()
2023-11-06 11:28:35,303:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:28:35,310:INFO:Initializing load_model()
2023-11-06 11:28:35,310:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:28:35,317:INFO:Initializing load_model()
2023-11-06 11:28:35,317:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:28:35,323:INFO:Initializing load_model()
2023-11-06 11:28:35,323:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:28:35,328:INFO:Initializing load_model()
2023-11-06 11:28:35,328:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:39,746:INFO:Initializing load_model()
2023-11-06 11:29:39,746:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:39,755:INFO:Initializing load_model()
2023-11-06 11:29:39,755:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:39,762:INFO:Initializing load_model()
2023-11-06 11:29:39,762:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:39,770:INFO:Initializing load_model()
2023-11-06 11:29:39,770:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:39,776:INFO:Initializing load_model()
2023-11-06 11:29:39,776:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:39,782:INFO:Initializing load_model()
2023-11-06 11:29:39,782:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:43,605:INFO:Initializing load_model()
2023-11-06 11:29:43,608:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:43,624:INFO:Initializing load_model()
2023-11-06 11:29:43,624:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:43,632:INFO:Initializing load_model()
2023-11-06 11:29:43,632:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:43,649:INFO:Initializing load_model()
2023-11-06 11:29:43,649:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:43,665:INFO:Initializing load_model()
2023-11-06 11:29:43,665:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:43,684:INFO:Initializing load_model()
2023-11-06 11:29:43,684:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:44,131:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:41: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:29:44,416:INFO:Initializing predict_model()
2023-11-06 11:29:44,416:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025770867B80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025770850760>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257705B2D40>)
2023-11-06 11:29:44,416:INFO:Checking exceptions
2023-11-06 11:29:44,416:INFO:Preloading libraries
2023-11-06 11:29:44,416:INFO:Set up data.
2023-11-06 11:29:44,434:INFO:Set up index.
2023-11-06 11:29:47,648:INFO:Initializing load_model()
2023-11-06 11:29:47,648:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:47,665:INFO:Initializing load_model()
2023-11-06 11:29:47,665:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:47,684:INFO:Initializing load_model()
2023-11-06 11:29:47,684:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:47,699:INFO:Initializing load_model()
2023-11-06 11:29:47,699:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:47,715:INFO:Initializing load_model()
2023-11-06 11:29:47,715:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:47,729:INFO:Initializing load_model()
2023-11-06 11:29:47,732:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:47,840:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:41: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:29:48,005:INFO:Initializing predict_model()
2023-11-06 11:29:48,012:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002576FD2A6E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025772134EB0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025771456200>)
2023-11-06 11:29:48,012:INFO:Checking exceptions
2023-11-06 11:29:48,012:INFO:Preloading libraries
2023-11-06 11:29:48,012:INFO:Set up data.
2023-11-06 11:29:48,015:INFO:Set up index.
2023-11-06 11:29:50,615:INFO:Initializing load_model()
2023-11-06 11:29:50,615:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:50,615:INFO:Initializing load_model()
2023-11-06 11:29:50,615:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:50,635:INFO:Initializing load_model()
2023-11-06 11:29:50,635:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:50,648:INFO:Initializing load_model()
2023-11-06 11:29:50,648:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:50,666:INFO:Initializing load_model()
2023-11-06 11:29:50,666:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:50,681:INFO:Initializing load_model()
2023-11-06 11:29:50,681:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:29:50,782:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:41: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:29:50,966:INFO:Initializing predict_model()
2023-11-06 11:29:50,966:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002577092E560>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025772137F10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257714560E0>)
2023-11-06 11:29:50,966:INFO:Checking exceptions
2023-11-06 11:29:50,966:INFO:Preloading libraries
2023-11-06 11:29:50,966:INFO:Set up data.
2023-11-06 11:29:50,982:INFO:Set up index.
2023-11-06 11:32:12,438:INFO:Initializing load_model()
2023-11-06 11:32:12,439:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:12,444:INFO:Initializing load_model()
2023-11-06 11:32:12,445:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:12,451:INFO:Initializing load_model()
2023-11-06 11:32:12,451:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:12,457:INFO:Initializing load_model()
2023-11-06 11:32:12,457:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:12,463:INFO:Initializing load_model()
2023-11-06 11:32:12,463:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:12,468:INFO:Initializing load_model()
2023-11-06 11:32:12,468:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:12,515:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:41: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:32:12,580:INFO:Initializing predict_model()
2023-11-06 11:32:12,581:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025772290430>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x00000257721345E0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257714989D0>)
2023-11-06 11:32:12,581:INFO:Checking exceptions
2023-11-06 11:32:12,581:INFO:Preloading libraries
2023-11-06 11:32:12,581:INFO:Set up data.
2023-11-06 11:32:12,584:INFO:Set up index.
2023-11-06 11:32:15,247:INFO:Initializing load_model()
2023-11-06 11:32:15,248:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:15,253:INFO:Initializing load_model()
2023-11-06 11:32:15,253:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:15,260:INFO:Initializing load_model()
2023-11-06 11:32:15,260:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:15,264:INFO:Initializing load_model()
2023-11-06 11:32:15,265:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:15,270:INFO:Initializing load_model()
2023-11-06 11:32:15,270:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:15,275:INFO:Initializing load_model()
2023-11-06 11:32:15,276:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:15,354:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:41: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:32:15,506:INFO:Initializing predict_model()
2023-11-06 11:32:15,507:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002577092F730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025772135BD0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025770840DC0>)
2023-11-06 11:32:15,508:INFO:Checking exceptions
2023-11-06 11:32:15,508:INFO:Preloading libraries
2023-11-06 11:32:15,509:INFO:Set up data.
2023-11-06 11:32:15,519:INFO:Set up index.
2023-11-06 11:32:35,377:INFO:Initializing load_model()
2023-11-06 11:32:35,377:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:35,385:INFO:Initializing load_model()
2023-11-06 11:32:35,385:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:35,392:INFO:Initializing load_model()
2023-11-06 11:32:35,392:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:35,398:INFO:Initializing load_model()
2023-11-06 11:32:35,398:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:35,403:INFO:Initializing load_model()
2023-11-06 11:32:35,403:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:35,409:INFO:Initializing load_model()
2023-11-06 11:32:35,409:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:35,463:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:41: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:32:35,539:INFO:Initializing predict_model()
2023-11-06 11:32:35,539:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025772291000>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x00000257721367A0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025770841CF0>)
2023-11-06 11:32:35,539:INFO:Checking exceptions
2023-11-06 11:32:35,539:INFO:Preloading libraries
2023-11-06 11:32:35,539:INFO:Set up data.
2023-11-06 11:32:35,544:INFO:Set up index.
2023-11-06 11:32:47,926:INFO:Initializing load_model()
2023-11-06 11:32:47,927:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:47,932:INFO:Initializing load_model()
2023-11-06 11:32:47,932:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:47,938:INFO:Initializing load_model()
2023-11-06 11:32:47,938:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:47,943:INFO:Initializing load_model()
2023-11-06 11:32:47,943:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:47,949:INFO:Initializing load_model()
2023-11-06 11:32:47,949:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:47,954:INFO:Initializing load_model()
2023-11-06 11:32:47,954:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:32:48,048:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:41: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:32:48,135:INFO:Initializing predict_model()
2023-11-06 11:32:48,135:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002577092E350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000002577092F640>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257713CB2E0>)
2023-11-06 11:32:48,135:INFO:Checking exceptions
2023-11-06 11:32:48,135:INFO:Preloading libraries
2023-11-06 11:32:48,135:INFO:Set up data.
2023-11-06 11:32:48,140:INFO:Set up index.
2023-11-06 11:33:31,359:INFO:Initializing load_model()
2023-11-06 11:33:31,359:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:33:31,366:INFO:Initializing load_model()
2023-11-06 11:33:31,366:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:33:31,373:INFO:Initializing load_model()
2023-11-06 11:33:31,373:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:33:31,382:INFO:Initializing load_model()
2023-11-06 11:33:31,382:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:33:31,391:INFO:Initializing load_model()
2023-11-06 11:33:31,391:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:33:31,398:INFO:Initializing load_model()
2023-11-06 11:33:31,398:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:33:31,457:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:41: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:33:31,523:INFO:Initializing predict_model()
2023-11-06 11:33:31,523:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025772292560>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025772137550>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257714560E0>)
2023-11-06 11:33:31,523:INFO:Checking exceptions
2023-11-06 11:33:31,523:INFO:Preloading libraries
2023-11-06 11:33:31,524:INFO:Set up data.
2023-11-06 11:33:31,527:INFO:Set up index.
2023-11-06 11:35:52,161:INFO:Initializing load_model()
2023-11-06 11:35:52,161:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:35:52,167:INFO:Initializing load_model()
2023-11-06 11:35:52,167:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:35:52,173:INFO:Initializing load_model()
2023-11-06 11:35:52,173:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:35:52,183:INFO:Initializing load_model()
2023-11-06 11:35:52,183:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:35:52,189:INFO:Initializing load_model()
2023-11-06 11:35:52,189:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:35:52,195:INFO:Initializing load_model()
2023-11-06 11:35:52,195:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:35:52,244:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:35:52,305:INFO:Initializing predict_model()
2023-11-06 11:35:52,305:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025773810400>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x00000257721352D0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257708411B0>)
2023-11-06 11:35:52,305:INFO:Checking exceptions
2023-11-06 11:35:52,306:INFO:Preloading libraries
2023-11-06 11:35:52,306:INFO:Set up data.
2023-11-06 11:35:52,313:INFO:Set up index.
2023-11-06 11:35:54,905:INFO:Initializing load_model()
2023-11-06 11:35:54,905:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:35:54,913:INFO:Initializing load_model()
2023-11-06 11:35:54,913:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:35:54,920:INFO:Initializing load_model()
2023-11-06 11:35:54,920:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:35:54,926:INFO:Initializing load_model()
2023-11-06 11:35:54,926:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:35:54,932:INFO:Initializing load_model()
2023-11-06 11:35:54,932:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:35:54,937:INFO:Initializing load_model()
2023-11-06 11:35:54,938:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:35:54,998:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:35:55,111:INFO:Initializing predict_model()
2023-11-06 11:35:55,111:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025772135CC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025772137B20>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025751402710>)
2023-11-06 11:35:55,112:INFO:Checking exceptions
2023-11-06 11:35:55,112:INFO:Preloading libraries
2023-11-06 11:35:55,112:INFO:Set up data.
2023-11-06 11:35:55,115:INFO:Set up index.
2023-11-06 11:35:58,026:INFO:Initializing load_model()
2023-11-06 11:35:58,026:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:35:58,043:INFO:Initializing load_model()
2023-11-06 11:35:58,043:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:35:58,055:INFO:Initializing load_model()
2023-11-06 11:35:58,055:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:35:58,061:INFO:Initializing load_model()
2023-11-06 11:35:58,061:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:35:58,076:INFO:Initializing load_model()
2023-11-06 11:35:58,076:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:35:58,092:INFO:Initializing load_model()
2023-11-06 11:35:58,092:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:35:58,199:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:35:58,325:INFO:Initializing predict_model()
2023-11-06 11:35:58,325:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025773813550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025772136590>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257705B1EA0>)
2023-11-06 11:35:58,325:INFO:Checking exceptions
2023-11-06 11:35:58,325:INFO:Preloading libraries
2023-11-06 11:35:58,325:INFO:Set up data.
2023-11-06 11:35:58,333:INFO:Set up index.
2023-11-06 11:36:02,309:INFO:Initializing load_model()
2023-11-06 11:36:02,309:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:36:02,326:INFO:Initializing load_model()
2023-11-06 11:36:02,326:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:36:02,344:INFO:Initializing load_model()
2023-11-06 11:36:02,344:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:36:02,353:INFO:Initializing load_model()
2023-11-06 11:36:02,358:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:36:02,369:INFO:Initializing load_model()
2023-11-06 11:36:02,369:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:36:02,376:INFO:Initializing load_model()
2023-11-06 11:36:02,376:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:36:02,487:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:36:02,620:INFO:Initializing predict_model()
2023-11-06 11:36:02,620:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002577092E2F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x00000257721345E0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257705B2D40>)
2023-11-06 11:36:02,620:INFO:Checking exceptions
2023-11-06 11:36:02,620:INFO:Preloading libraries
2023-11-06 11:36:02,620:INFO:Set up data.
2023-11-06 11:36:02,626:INFO:Set up index.
2023-11-06 11:38:05,651:INFO:Initializing load_model()
2023-11-06 11:38:05,651:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:05,657:INFO:Initializing load_model()
2023-11-06 11:38:05,657:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:05,664:INFO:Initializing load_model()
2023-11-06 11:38:05,664:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:05,712:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:38:05,790:INFO:Initializing predict_model()
2023-11-06 11:38:05,791:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025770867D60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025772291030>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257705B0820>)
2023-11-06 11:38:05,791:INFO:Checking exceptions
2023-11-06 11:38:05,791:INFO:Preloading libraries
2023-11-06 11:38:05,791:INFO:Set up data.
2023-11-06 11:38:05,794:INFO:Set up index.
2023-11-06 11:38:09,857:INFO:Initializing load_model()
2023-11-06 11:38:09,857:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:09,875:INFO:Initializing load_model()
2023-11-06 11:38:09,875:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:09,890:INFO:Initializing load_model()
2023-11-06 11:38:09,891:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:09,981:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:38:10,125:INFO:Initializing predict_model()
2023-11-06 11:38:10,126:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025773811030>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025773811B70>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257714560E0>)
2023-11-06 11:38:10,127:INFO:Checking exceptions
2023-11-06 11:38:10,127:INFO:Preloading libraries
2023-11-06 11:38:10,127:INFO:Set up data.
2023-11-06 11:38:10,127:INFO:Set up index.
2023-11-06 11:38:14,643:INFO:Initializing load_model()
2023-11-06 11:38:14,643:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:14,657:INFO:Initializing load_model()
2023-11-06 11:38:14,657:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:14,676:INFO:Initializing load_model()
2023-11-06 11:38:14,676:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:14,780:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:38:14,944:INFO:Initializing predict_model()
2023-11-06 11:38:14,944:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025773812620>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025773810970>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025751402710>)
2023-11-06 11:38:14,944:INFO:Checking exceptions
2023-11-06 11:38:14,944:INFO:Preloading libraries
2023-11-06 11:38:14,944:INFO:Set up data.
2023-11-06 11:38:14,954:INFO:Set up index.
2023-11-06 11:38:15,824:INFO:Initializing load_model()
2023-11-06 11:38:15,824:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:15,840:INFO:Initializing load_model()
2023-11-06 11:38:15,840:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:15,852:INFO:Initializing load_model()
2023-11-06 11:38:15,852:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:15,947:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:38:16,058:INFO:Initializing predict_model()
2023-11-06 11:38:16,058:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000257708659F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025770865750>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025770842680>)
2023-11-06 11:38:16,062:INFO:Checking exceptions
2023-11-06 11:38:16,062:INFO:Preloading libraries
2023-11-06 11:38:16,062:INFO:Set up data.
2023-11-06 11:38:16,064:INFO:Set up index.
2023-11-06 11:38:20,507:INFO:Initializing load_model()
2023-11-06 11:38:20,507:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:20,532:INFO:Initializing load_model()
2023-11-06 11:38:20,553:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:20,567:INFO:Initializing load_model()
2023-11-06 11:38:20,567:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:20,673:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:38:20,792:INFO:Initializing predict_model()
2023-11-06 11:38:20,792:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000257722906D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025773811AB0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025770841900>)
2023-11-06 11:38:20,792:INFO:Checking exceptions
2023-11-06 11:38:20,792:INFO:Preloading libraries
2023-11-06 11:38:20,792:INFO:Set up data.
2023-11-06 11:38:20,792:INFO:Set up index.
2023-11-06 11:38:29,773:INFO:Initializing load_model()
2023-11-06 11:38:29,773:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:29,790:INFO:Initializing load_model()
2023-11-06 11:38:29,790:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:29,807:INFO:Initializing load_model()
2023-11-06 11:38:29,807:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:29,923:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:38:30,113:INFO:Initializing predict_model()
2023-11-06 11:38:30,113:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025773810AC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025773812E30>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025751402710>)
2023-11-06 11:38:30,113:INFO:Checking exceptions
2023-11-06 11:38:30,113:INFO:Preloading libraries
2023-11-06 11:38:30,113:INFO:Set up data.
2023-11-06 11:38:30,123:INFO:Set up index.
2023-11-06 11:38:32,844:INFO:Initializing load_model()
2023-11-06 11:38:32,844:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:32,857:INFO:Initializing load_model()
2023-11-06 11:38:32,857:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:32,868:INFO:Initializing load_model()
2023-11-06 11:38:32,868:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:38:32,981:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:38:33,091:INFO:Initializing predict_model()
2023-11-06 11:38:33,091:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025772292A40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025772136D40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025770841AB0>)
2023-11-06 11:38:33,091:INFO:Checking exceptions
2023-11-06 11:38:33,091:INFO:Preloading libraries
2023-11-06 11:38:33,091:INFO:Set up data.
2023-11-06 11:38:33,102:INFO:Set up index.
2023-11-06 11:40:50,703:INFO:Initializing load_model()
2023-11-06 11:40:50,703:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:40:50,714:INFO:Initializing load_model()
2023-11-06 11:40:50,714:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:40:50,724:INFO:Initializing load_model()
2023-11-06 11:40:50,724:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:40:50,791:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:40:50,860:INFO:Initializing predict_model()
2023-11-06 11:40:50,860:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002577217F1F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000002577092DC60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025751402710>)
2023-11-06 11:40:50,860:INFO:Checking exceptions
2023-11-06 11:40:50,860:INFO:Preloading libraries
2023-11-06 11:40:50,861:INFO:Set up data.
2023-11-06 11:40:50,864:INFO:Set up index.
2023-11-06 11:41:12,988:INFO:Initializing load_model()
2023-11-06 11:41:12,988:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:41:12,995:INFO:Initializing load_model()
2023-11-06 11:41:12,995:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:41:13,001:INFO:Initializing load_model()
2023-11-06 11:41:13,001:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:41:13,054:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:41:13,115:INFO:Initializing predict_model()
2023-11-06 11:41:13,115:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025772292C20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025773813310>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257713CB760>)
2023-11-06 11:41:13,115:INFO:Checking exceptions
2023-11-06 11:41:13,115:INFO:Preloading libraries
2023-11-06 11:41:13,116:INFO:Set up data.
2023-11-06 11:41:13,126:INFO:Set up index.
2023-11-06 11:41:29,532:INFO:Initializing load_model()
2023-11-06 11:41:29,532:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:41:29,548:INFO:Initializing load_model()
2023-11-06 11:41:29,554:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:41:29,564:INFO:Initializing load_model()
2023-11-06 11:41:29,564:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:41:29,724:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:41:29,888:INFO:Initializing predict_model()
2023-11-06 11:41:29,888:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025772292080>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025770864A00>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257705B2950>)
2023-11-06 11:41:29,888:INFO:Checking exceptions
2023-11-06 11:41:29,888:INFO:Preloading libraries
2023-11-06 11:41:29,895:INFO:Set up data.
2023-11-06 11:41:29,903:INFO:Set up index.
2023-11-06 11:41:50,936:INFO:Initializing load_model()
2023-11-06 11:41:50,936:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:41:50,950:INFO:Initializing load_model()
2023-11-06 11:41:50,950:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:41:50,957:INFO:Initializing load_model()
2023-11-06 11:41:50,958:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:41:51,010:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:41:51,075:INFO:Initializing predict_model()
2023-11-06 11:41:51,075:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002577092E320>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025772135FF0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257713CB760>)
2023-11-06 11:41:51,076:INFO:Checking exceptions
2023-11-06 11:41:51,076:INFO:Preloading libraries
2023-11-06 11:41:51,076:INFO:Set up data.
2023-11-06 11:41:51,080:INFO:Set up index.
2023-11-06 11:42:10,420:INFO:Initializing load_model()
2023-11-06 11:42:10,420:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:42:10,437:INFO:Initializing load_model()
2023-11-06 11:42:10,437:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:42:10,454:INFO:Initializing load_model()
2023-11-06 11:42:10,454:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:42:10,562:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:42:10,659:INFO:Initializing predict_model()
2023-11-06 11:42:10,659:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002577217E200>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025773810D00>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257713CB2E0>)
2023-11-06 11:42:10,659:INFO:Checking exceptions
2023-11-06 11:42:10,659:INFO:Preloading libraries
2023-11-06 11:42:10,659:INFO:Set up data.
2023-11-06 11:42:10,670:INFO:Set up index.
2023-11-06 11:42:13,831:INFO:Initializing load_model()
2023-11-06 11:42:13,836:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:42:13,848:INFO:Initializing load_model()
2023-11-06 11:42:13,848:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:42:13,864:INFO:Initializing load_model()
2023-11-06 11:42:13,864:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:42:13,968:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:42:14,154:INFO:Initializing predict_model()
2023-11-06 11:42:14,154:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002577092C9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000002577092E2F0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002577055FB50>)
2023-11-06 11:42:14,154:INFO:Checking exceptions
2023-11-06 11:42:14,154:INFO:Preloading libraries
2023-11-06 11:42:14,154:INFO:Set up data.
2023-11-06 11:42:14,154:INFO:Set up index.
2023-11-06 11:42:16,270:INFO:Initializing load_model()
2023-11-06 11:42:16,270:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:42:16,282:INFO:Initializing load_model()
2023-11-06 11:42:16,286:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:42:16,298:INFO:Initializing load_model()
2023-11-06 11:42:16,298:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:42:16,388:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:42:16,513:INFO:Initializing predict_model()
2023-11-06 11:42:16,513:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000257738123B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000002577092D6F0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025771457C70>)
2023-11-06 11:42:16,513:INFO:Checking exceptions
2023-11-06 11:42:16,513:INFO:Preloading libraries
2023-11-06 11:42:16,513:INFO:Set up data.
2023-11-06 11:42:16,523:INFO:Set up index.
2023-11-06 11:42:18,636:INFO:Initializing load_model()
2023-11-06 11:42:18,636:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:42:18,655:INFO:Initializing load_model()
2023-11-06 11:42:18,655:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:42:18,671:INFO:Initializing load_model()
2023-11-06 11:42:18,671:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:42:18,769:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:42:18,888:INFO:Initializing predict_model()
2023-11-06 11:42:18,888:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002577217C550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000002577092E2C0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025771498940>)
2023-11-06 11:42:18,888:INFO:Checking exceptions
2023-11-06 11:42:18,888:INFO:Preloading libraries
2023-11-06 11:42:18,888:INFO:Set up data.
2023-11-06 11:42:18,888:INFO:Set up index.
2023-11-06 11:42:22,238:INFO:Initializing load_model()
2023-11-06 11:42:22,238:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:42:22,249:INFO:Initializing load_model()
2023-11-06 11:42:22,249:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:42:22,252:INFO:Initializing load_model()
2023-11-06 11:42:22,252:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:42:22,369:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:42:22,470:INFO:Initializing predict_model()
2023-11-06 11:42:22,470:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025772136EF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000002577217F4F0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002577055FD00>)
2023-11-06 11:42:22,470:INFO:Checking exceptions
2023-11-06 11:42:22,470:INFO:Preloading libraries
2023-11-06 11:42:22,470:INFO:Set up data.
2023-11-06 11:42:22,487:INFO:Set up index.
2023-11-06 11:46:04,449:INFO:Initializing load_model()
2023-11-06 11:46:04,449:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:46:04,467:INFO:Initializing load_model()
2023-11-06 11:46:04,467:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:46:04,467:INFO:Initializing load_model()
2023-11-06 11:46:04,467:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:46:04,520:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:46:04,574:INFO:Initializing predict_model()
2023-11-06 11:46:04,574:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025772137C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025772135660>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002577055FB50>)
2023-11-06 11:46:04,582:INFO:Checking exceptions
2023-11-06 11:46:04,582:INFO:Preloading libraries
2023-11-06 11:46:04,582:INFO:Set up data.
2023-11-06 11:46:04,582:INFO:Set up index.
2023-11-06 11:50:37,583:INFO:Initializing load_model()
2023-11-06 11:50:37,583:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:50:37,590:INFO:Initializing load_model()
2023-11-06 11:50:37,590:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:50:37,595:INFO:Initializing load_model()
2023-11-06 11:50:37,595:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:50:37,649:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:50:37,714:INFO:Initializing predict_model()
2023-11-06 11:50:37,714:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000257722917E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000002577092C6D0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257705B36D0>)
2023-11-06 11:50:37,714:INFO:Checking exceptions
2023-11-06 11:50:37,714:INFO:Preloading libraries
2023-11-06 11:50:37,715:INFO:Set up data.
2023-11-06 11:50:37,720:INFO:Set up index.
2023-11-06 11:51:35,807:INFO:Initializing load_model()
2023-11-06 11:51:35,807:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:51:35,815:INFO:Initializing load_model()
2023-11-06 11:51:35,815:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:51:35,821:INFO:Initializing load_model()
2023-11-06 11:51:35,821:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:51:35,869:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:51:35,925:INFO:Initializing predict_model()
2023-11-06 11:51:35,925:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025772134DF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025772137310>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002577055FD00>)
2023-11-06 11:51:35,925:INFO:Checking exceptions
2023-11-06 11:51:35,925:INFO:Preloading libraries
2023-11-06 11:51:35,926:INFO:Set up data.
2023-11-06 11:51:35,929:INFO:Set up index.
2023-11-06 11:53:21,923:INFO:Initializing load_model()
2023-11-06 11:53:21,923:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:53:21,930:INFO:Initializing load_model()
2023-11-06 11:53:21,930:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:53:21,936:INFO:Initializing load_model()
2023-11-06 11:53:21,936:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:53:21,994:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:53:26,026:INFO:Initializing load_model()
2023-11-06 11:53:26,026:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:53:26,042:INFO:Initializing load_model()
2023-11-06 11:53:26,042:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:53:26,054:INFO:Initializing load_model()
2023-11-06 11:53:26,054:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:53:26,145:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:53:26,272:INFO:Initializing predict_model()
2023-11-06 11:53:26,272:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002577217F0A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000002577217F070>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002576F593A30>)
2023-11-06 11:53:26,272:INFO:Checking exceptions
2023-11-06 11:53:26,272:INFO:Preloading libraries
2023-11-06 11:53:26,272:INFO:Set up data.
2023-11-06 11:53:26,283:INFO:Set up index.
2023-11-06 11:53:41,141:INFO:Initializing load_model()
2023-11-06 11:53:41,141:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:53:41,159:INFO:Initializing load_model()
2023-11-06 11:53:41,159:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:53:41,175:INFO:Initializing load_model()
2023-11-06 11:53:41,175:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:53:41,309:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:53:41,441:INFO:Initializing predict_model()
2023-11-06 11:53:41,441:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025773812140>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000002577217DDE0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002576F593A30>)
2023-11-06 11:53:41,441:INFO:Checking exceptions
2023-11-06 11:53:41,441:INFO:Preloading libraries
2023-11-06 11:53:41,441:INFO:Set up data.
2023-11-06 11:53:41,441:INFO:Set up index.
2023-11-06 11:54:14,303:INFO:Initializing load_model()
2023-11-06 11:54:14,303:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:54:14,320:INFO:Initializing load_model()
2023-11-06 11:54:14,320:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:54:14,324:INFO:Initializing load_model()
2023-11-06 11:54:14,324:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:54:14,436:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:54:14,588:INFO:Initializing predict_model()
2023-11-06 11:54:14,588:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002577217E380>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x00000257738135E0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025771498820>)
2023-11-06 11:54:14,588:INFO:Checking exceptions
2023-11-06 11:54:14,588:INFO:Preloading libraries
2023-11-06 11:54:14,588:INFO:Set up data.
2023-11-06 11:54:14,591:INFO:Set up index.
2023-11-06 11:54:18,424:INFO:Initializing load_model()
2023-11-06 11:54:18,424:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:54:18,441:INFO:Initializing load_model()
2023-11-06 11:54:18,441:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:54:18,453:INFO:Initializing load_model()
2023-11-06 11:54:18,453:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:54:18,549:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:54:29,407:INFO:Initializing load_model()
2023-11-06 11:54:29,407:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:54:29,429:INFO:Initializing load_model()
2023-11-06 11:54:29,430:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:54:29,441:INFO:Initializing load_model()
2023-11-06 11:54:29,441:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:54:29,534:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:54:33,424:INFO:Initializing load_model()
2023-11-06 11:54:33,424:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:54:33,436:INFO:Initializing load_model()
2023-11-06 11:54:33,436:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:54:33,451:INFO:Initializing load_model()
2023-11-06 11:54:33,451:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:54:33,551:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:54:33,665:INFO:Initializing predict_model()
2023-11-06 11:54:33,665:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000257738101F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000002577217D720>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025771498820>)
2023-11-06 11:54:33,670:INFO:Checking exceptions
2023-11-06 11:54:33,670:INFO:Preloading libraries
2023-11-06 11:54:33,670:INFO:Set up data.
2023-11-06 11:54:33,673:INFO:Set up index.
2023-11-06 11:54:55,201:INFO:Initializing load_model()
2023-11-06 11:54:55,201:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:54:55,214:INFO:Initializing load_model()
2023-11-06 11:54:55,214:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:54:55,223:INFO:Initializing load_model()
2023-11-06 11:54:55,223:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:54:55,330:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:55:35,156:INFO:Initializing load_model()
2023-11-06 11:55:35,156:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:55:35,162:INFO:Initializing load_model()
2023-11-06 11:55:35,163:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:55:35,169:INFO:Initializing load_model()
2023-11-06 11:55:35,169:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:55:35,217:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:57:05,275:INFO:Initializing load_model()
2023-11-06 11:57:05,276:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:05,282:INFO:Initializing load_model()
2023-11-06 11:57:05,282:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:05,289:INFO:Initializing load_model()
2023-11-06 11:57:05,289:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:05,347:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:57:08,302:INFO:Initializing load_model()
2023-11-06 11:57:08,302:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:08,306:INFO:Initializing load_model()
2023-11-06 11:57:08,306:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:08,323:INFO:Initializing load_model()
2023-11-06 11:57:08,333:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:08,436:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:57:08,572:INFO:Initializing predict_model()
2023-11-06 11:57:08,572:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002577092F910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025772292320>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257708C2950>)
2023-11-06 11:57:08,572:INFO:Checking exceptions
2023-11-06 11:57:08,572:INFO:Preloading libraries
2023-11-06 11:57:08,572:INFO:Set up data.
2023-11-06 11:57:08,572:INFO:Set up index.
2023-11-06 11:57:16,338:INFO:Initializing load_model()
2023-11-06 11:57:16,338:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:16,365:INFO:Initializing load_model()
2023-11-06 11:57:16,365:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:16,374:INFO:Initializing load_model()
2023-11-06 11:57:16,374:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:16,472:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:57:18,974:INFO:Initializing load_model()
2023-11-06 11:57:18,974:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:18,989:INFO:Initializing load_model()
2023-11-06 11:57:18,989:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:19,005:INFO:Initializing load_model()
2023-11-06 11:57:19,005:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:19,111:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:57:19,213:INFO:Initializing predict_model()
2023-11-06 11:57:19,213:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025772291F60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000002577217DCF0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002577055F250>)
2023-11-06 11:57:19,213:INFO:Checking exceptions
2023-11-06 11:57:19,213:INFO:Preloading libraries
2023-11-06 11:57:19,213:INFO:Set up data.
2023-11-06 11:57:19,221:INFO:Set up index.
2023-11-06 11:57:23,307:INFO:Initializing load_model()
2023-11-06 11:57:23,307:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:23,321:INFO:Initializing load_model()
2023-11-06 11:57:23,321:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:23,340:INFO:Initializing load_model()
2023-11-06 11:57:23,340:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:23,441:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:57:26,004:INFO:Initializing load_model()
2023-11-06 11:57:26,004:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:26,022:INFO:Initializing load_model()
2023-11-06 11:57:26,022:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:26,040:INFO:Initializing load_model()
2023-11-06 11:57:26,040:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:26,140:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 11:57:26,275:INFO:Initializing predict_model()
2023-11-06 11:57:26,275:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002577092C070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000002577217F760>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257708C3E20>)
2023-11-06 11:57:26,275:INFO:Checking exceptions
2023-11-06 11:57:26,275:INFO:Preloading libraries
2023-11-06 11:57:26,275:INFO:Set up data.
2023-11-06 11:57:26,289:INFO:Set up index.
2023-11-06 11:57:28,357:INFO:Initializing load_model()
2023-11-06 11:57:28,357:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:28,372:INFO:Initializing load_model()
2023-11-06 11:57:28,372:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:28,383:INFO:Initializing load_model()
2023-11-06 11:57:28,383:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:32,890:INFO:Initializing load_model()
2023-11-06 11:57:32,890:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:32,906:INFO:Initializing load_model()
2023-11-06 11:57:32,906:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:57:32,922:INFO:Initializing load_model()
2023-11-06 11:57:32,922:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:58:12,463:INFO:Initializing load_model()
2023-11-06 11:58:12,463:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 11:58:12,479:INFO:Initializing load_model()
2023-11-06 11:58:12,486:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 11:58:12,496:INFO:Initializing load_model()
2023-11-06 11:58:12,496:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 11:58:12,628:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 12:01:28,329:INFO:Initializing load_model()
2023-11-06 12:01:28,329:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:01:28,339:INFO:Initializing load_model()
2023-11-06 12:01:28,339:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:01:28,345:INFO:Initializing load_model()
2023-11-06 12:01:28,345:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:01:28,418:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 12:01:31,043:INFO:Initializing load_model()
2023-11-06 12:01:31,043:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:01:31,052:INFO:Initializing load_model()
2023-11-06 12:01:31,052:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:01:31,058:INFO:Initializing load_model()
2023-11-06 12:01:31,058:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:01:31,110:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 12:01:31,181:INFO:Initializing predict_model()
2023-11-06 12:01:31,184:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025772229210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x0000025772136C80>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257705B3520>)
2023-11-06 12:01:31,184:INFO:Checking exceptions
2023-11-06 12:01:31,184:INFO:Preloading libraries
2023-11-06 12:01:31,185:INFO:Set up data.
2023-11-06 12:01:31,188:INFO:Set up index.
2023-11-06 12:01:33,169:INFO:Initializing load_model()
2023-11-06 12:01:33,169:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:01:33,177:INFO:Initializing load_model()
2023-11-06 12:01:33,183:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:01:33,193:INFO:Initializing load_model()
2023-11-06 12:01:33,193:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:01:36,599:INFO:Initializing load_model()
2023-11-06 12:01:36,599:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:01:36,626:INFO:Initializing load_model()
2023-11-06 12:01:36,634:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:01:36,650:INFO:Initializing load_model()
2023-11-06 12:01:36,650:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:01:45,380:INFO:Initializing load_model()
2023-11-06 12:01:45,380:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:01:45,395:INFO:Initializing load_model()
2023-11-06 12:01:45,396:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:01:45,407:INFO:Initializing load_model()
2023-11-06 12:01:45,407:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:01:45,553:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 12:03:16,103:INFO:Initializing load_model()
2023-11-06 12:03:16,103:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:03:16,109:INFO:Initializing load_model()
2023-11-06 12:03:16,109:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:03:16,115:INFO:Initializing load_model()
2023-11-06 12:03:16,115:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:03:16,167:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 12:03:18,100:INFO:Initializing load_model()
2023-11-06 12:03:18,100:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:03:18,107:INFO:Initializing load_model()
2023-11-06 12:03:18,107:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:03:18,113:INFO:Initializing load_model()
2023-11-06 12:03:18,113:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:03:21,214:INFO:Initializing load_model()
2023-11-06 12:03:21,214:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:03:21,231:INFO:Initializing load_model()
2023-11-06 12:03:21,232:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:03:21,245:INFO:Initializing load_model()
2023-11-06 12:03:21,245:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:03:25,174:INFO:Initializing load_model()
2023-11-06 12:03:25,174:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:03:25,221:INFO:Initializing load_model()
2023-11-06 12:03:25,221:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:03:25,232:INFO:Initializing load_model()
2023-11-06 12:03:25,232:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:03:32,415:INFO:Initializing load_model()
2023-11-06 12:03:32,415:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:03:32,432:INFO:Initializing load_model()
2023-11-06 12:03:32,432:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:03:32,449:INFO:Initializing load_model()
2023-11-06 12:03:32,449:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:03:32,668:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 12:03:43,814:INFO:Initializing load_model()
2023-11-06 12:03:43,814:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:03:43,824:INFO:Initializing load_model()
2023-11-06 12:03:43,824:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:03:43,840:INFO:Initializing load_model()
2023-11-06 12:03:43,840:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:03:43,947:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 12:03:44,068:INFO:Initializing predict_model()
2023-11-06 12:03:44,068:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000257722BD690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x00000257724E50F0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025770F263B0>)
2023-11-06 12:03:44,068:INFO:Checking exceptions
2023-11-06 12:03:44,068:INFO:Preloading libraries
2023-11-06 12:03:44,068:INFO:Set up data.
2023-11-06 12:03:44,083:INFO:Set up index.
2023-11-06 12:04:11,427:INFO:Initializing load_model()
2023-11-06 12:04:11,427:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:04:11,436:INFO:Initializing load_model()
2023-11-06 12:04:11,436:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:04:11,443:INFO:Initializing load_model()
2023-11-06 12:04:11,443:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:05:27,847:INFO:Initializing load_model()
2023-11-06 12:05:27,847:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:05:27,855:INFO:Initializing load_model()
2023-11-06 12:05:27,855:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:05:27,866:INFO:Initializing load_model()
2023-11-06 12:05:27,866:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:05:32,280:INFO:Initializing load_model()
2023-11-06 12:05:32,280:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:05:32,314:INFO:Initializing load_model()
2023-11-06 12:05:32,314:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:05:32,314:INFO:Initializing load_model()
2023-11-06 12:05:32,314:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:05:32,432:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 12:07:30,463:INFO:Initializing load_model()
2023-11-06 12:07:30,463:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:07:30,471:INFO:Initializing load_model()
2023-11-06 12:07:30,471:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:07:30,478:INFO:Initializing load_model()
2023-11-06 12:07:30,478:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:07:30,535:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 12:07:49,711:INFO:Initializing load_model()
2023-11-06 12:07:49,711:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:07:49,730:INFO:Initializing load_model()
2023-11-06 12:07:49,730:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:07:49,744:INFO:Initializing load_model()
2023-11-06 12:07:49,744:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:07:49,845:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 12:07:49,982:INFO:Initializing predict_model()
2023-11-06 12:07:49,982:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025770E4C1C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_e...
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x00000257716635E0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025771574790>)
2023-11-06 12:07:49,982:INFO:Checking exceptions
2023-11-06 12:07:49,982:INFO:Preloading libraries
2023-11-06 12:07:49,982:INFO:Set up data.
2023-11-06 12:07:49,989:INFO:Set up index.
2023-11-06 12:08:40,433:INFO:Initializing load_model()
2023-11-06 12:08:40,433:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:08:40,439:INFO:Initializing load_model()
2023-11-06 12:08:40,439:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:08:40,446:INFO:Initializing load_model()
2023-11-06 12:08:40,446:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:08:40,493:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 12:09:46,737:INFO:Initializing load_model()
2023-11-06 12:09:46,737:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:09:46,743:INFO:Initializing load_model()
2023-11-06 12:09:46,743:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:09:46,749:INFO:Initializing load_model()
2023-11-06 12:09:46,749:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:09:46,794:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 12:09:54,954:INFO:Initializing load_model()
2023-11-06 12:09:54,954:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:09:54,996:INFO:Initializing load_model()
2023-11-06 12:09:54,996:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:09:55,002:INFO:Initializing load_model()
2023-11-06 12:09:55,002:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:09:55,052:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:32: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 12:12:18,631:INFO:Initializing load_model()
2023-11-06 12:12:18,632:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:12:18,638:INFO:Initializing load_model()
2023-11-06 12:12:18,638:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:12:18,644:INFO:Initializing load_model()
2023-11-06 12:12:18,644:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:12:18,765:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:35: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 12:12:49,442:INFO:Initializing load_model()
2023-11-06 12:12:49,443:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:12:49,450:INFO:Initializing load_model()
2023-11-06 12:12:49,450:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:12:49,455:INFO:Initializing load_model()
2023-11-06 12:12:49,455:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:12:49,537:WARNING:C:\Users/josec/Documents/python_group\app\simulator\SimulatorModel.py:36: FutureWarning:

The default value of numeric_only in DataFrameGroupBy.median is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.


2023-11-06 12:14:52,195:INFO:Initializing load_model()
2023-11-06 12:14:52,195:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:14:52,211:INFO:Initializing load_model()
2023-11-06 12:14:52,211:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:14:52,237:INFO:Initializing load_model()
2023-11-06 12:14:52,237:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:14:55,871:INFO:Initializing load_model()
2023-11-06 12:14:55,871:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:14:55,887:INFO:Initializing load_model()
2023-11-06 12:14:55,887:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:14:55,905:INFO:Initializing load_model()
2023-11-06 12:14:55,905:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 12:14:59,204:INFO:Initializing load_model()
2023-11-06 12:14:59,204:INFO:load_model(model_name=app/data/cnt_model, platform=None, authentication=None, verbose=True)
2023-11-06 12:14:59,221:INFO:Initializing load_model()
2023-11-06 12:14:59,221:INFO:load_model(model_name=app/data/cnt_model_casual, platform=None, authentication=None, verbose=True)
2023-11-06 12:14:59,237:INFO:Initializing load_model()
2023-11-06 12:14:59,237:INFO:load_model(model_name=app/data/cnt_model_registered, platform=None, authentication=None, verbose=True)
2023-11-06 19:49:33,317:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 19:49:33,317:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 19:49:33,317:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 19:49:33,317:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-06 19:50:20,043:WARNING:C:\Users\josec\AppData\Local\Temp\ipykernel_7212\4120196250.py:99: FutureWarning: Treating datetime data as categorical rather than numeric in `.describe` is deprecated and will be removed in a future version of pandas. Specify `datetime_is_numeric=True` to silence this warning and adopt the future behavior now.
  described_df = table.describe(percentiles=[.05, .25, .5, .75, .95],

2023-11-06 19:50:57,767:INFO:PyCaret RegressionExperiment
2023-11-06 19:50:57,767:INFO:Logging name: reg-default-name
2023-11-06 19:50:57,768:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-06 19:50:57,768:INFO:version 3.1.0
2023-11-06 19:50:57,768:INFO:Initializing setup()
2023-11-06 19:50:57,768:INFO:self.USI: d49d
2023-11-06 19:50:57,768:INFO:self._variable_keys: {'log_plots_param', 'X_train', 'USI', 'gpu_param', 'transform_target_param', 'logging_param', 'fold_generator', 'target_param', 'X', 'pipeline', 'y_train', 'fold_shuffle_param', '_available_plots', 'X_test', 'idx', 'fold_groups_param', 'memory', 'n_jobs_param', 'exp_id', '_ml_usecase', 'data', 'html_param', 'y_test', 'seed', 'exp_name_log', 'y', 'gpu_n_jobs_param'}
2023-11-06 19:50:57,768:INFO:Checking environment
2023-11-06 19:50:57,768:INFO:python_version: 3.10.4
2023-11-06 19:50:57,768:INFO:python_build: ('tags/v3.10.4:9d38120', 'Mar 23 2022 23:13:41')
2023-11-06 19:50:57,768:INFO:machine: AMD64
2023-11-06 19:50:57,768:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-06 19:50:57,772:INFO:Memory: svmem(total=8301043712, available=651751424, percent=92.1, used=7649292288, free=651751424)
2023-11-06 19:50:57,772:INFO:Physical Core: 10
2023-11-06 19:50:57,772:INFO:Logical Core: 12
2023-11-06 19:50:57,772:INFO:Checking libraries
2023-11-06 19:50:57,772:INFO:System:
2023-11-06 19:50:57,772:INFO:    python: 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]
2023-11-06 19:50:57,772:INFO:executable: C:\Users\josec\AppData\Local\Programs\Python\Python310\python.exe
2023-11-06 19:50:57,772:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-06 19:50:57,773:INFO:PyCaret required dependencies:
2023-11-06 19:50:59,417:INFO:                 pip: 22.0.4
2023-11-06 19:50:59,417:INFO:          setuptools: 58.1.0
2023-11-06 19:50:59,418:INFO:             pycaret: 3.1.0
2023-11-06 19:50:59,418:INFO:             IPython: 8.14.0
2023-11-06 19:50:59,418:INFO:          ipywidgets: 8.0.6
2023-11-06 19:50:59,418:INFO:                tqdm: 4.66.1
2023-11-06 19:50:59,418:INFO:               numpy: 1.23.5
2023-11-06 19:50:59,418:INFO:              pandas: 1.5.3
2023-11-06 19:50:59,418:INFO:              jinja2: 3.1.2
2023-11-06 19:50:59,418:INFO:               scipy: 1.10.1
2023-11-06 19:50:59,418:INFO:              joblib: 1.3.2
2023-11-06 19:50:59,418:INFO:             sklearn: 1.2.2
2023-11-06 19:50:59,418:INFO:                pyod: 1.1.1
2023-11-06 19:50:59,418:INFO:            imblearn: 0.11.0
2023-11-06 19:50:59,418:INFO:   category_encoders: 2.6.3
2023-11-06 19:50:59,418:INFO:            lightgbm: 4.1.0
2023-11-06 19:50:59,418:INFO:               numba: 0.58.1
2023-11-06 19:50:59,418:INFO:            requests: 2.31.0
2023-11-06 19:50:59,418:INFO:          matplotlib: 3.7.2
2023-11-06 19:50:59,418:INFO:          scikitplot: 0.3.7
2023-11-06 19:50:59,418:INFO:         yellowbrick: 1.5
2023-11-06 19:50:59,418:INFO:              plotly: 5.16.1
2023-11-06 19:50:59,418:INFO:    plotly-resampler: Not installed
2023-11-06 19:50:59,419:INFO:             kaleido: 0.2.1
2023-11-06 19:50:59,419:INFO:           schemdraw: 0.15
2023-11-06 19:50:59,419:INFO:         statsmodels: 0.14.0
2023-11-06 19:50:59,419:INFO:              sktime: 0.21.1
2023-11-06 19:50:59,419:INFO:               tbats: 1.1.3
2023-11-06 19:50:59,419:INFO:            pmdarima: 2.0.4
2023-11-06 19:50:59,419:INFO:              psutil: 5.9.5
2023-11-06 19:50:59,419:INFO:          markupsafe: 2.1.3
2023-11-06 19:50:59,419:INFO:             pickle5: Not installed
2023-11-06 19:50:59,419:INFO:         cloudpickle: 2.2.1
2023-11-06 19:50:59,419:INFO:         deprecation: 2.1.0
2023-11-06 19:50:59,419:INFO:              xxhash: 3.4.1
2023-11-06 19:50:59,419:INFO:           wurlitzer: Not installed
2023-11-06 19:50:59,419:INFO:PyCaret optional dependencies:
2023-11-06 19:51:01,065:INFO:                shap: 0.43.0
2023-11-06 19:51:01,065:INFO:           interpret: 0.4.4
2023-11-06 19:51:01,066:INFO:                umap: 0.5.4
2023-11-06 19:51:01,066:INFO:     ydata_profiling: 4.6.0
2023-11-06 19:51:01,066:INFO:  explainerdashboard: 0.4.3
2023-11-06 19:51:01,066:INFO:             autoviz: Not installed
2023-11-06 19:51:01,066:INFO:           fairlearn: 0.7.0
2023-11-06 19:51:01,066:INFO:          deepchecks: Not installed
2023-11-06 19:51:01,066:INFO:             xgboost: 2.0.0
2023-11-06 19:51:01,066:INFO:            catboost: 1.2.2
2023-11-06 19:51:01,066:INFO:              kmodes: 0.12.2
2023-11-06 19:51:01,066:INFO:             mlxtend: 0.23.0
2023-11-06 19:51:01,066:INFO:       statsforecast: 1.5.0
2023-11-06 19:51:01,066:INFO:        tune_sklearn: 0.4.6
2023-11-06 19:51:01,066:INFO:                 ray: 2.8.0
2023-11-06 19:51:01,066:INFO:            hyperopt: 0.2.7
2023-11-06 19:51:01,066:INFO:              optuna: 3.4.0
2023-11-06 19:51:01,066:INFO:               skopt: 0.9.0
2023-11-06 19:51:01,066:INFO:              mlflow: 1.30.1
2023-11-06 19:51:01,066:INFO:              gradio: 3.50.2
2023-11-06 19:51:01,066:INFO:             fastapi: 0.104.0
2023-11-06 19:51:01,066:INFO:             uvicorn: 0.23.2
2023-11-06 19:51:01,066:INFO:              m2cgen: 0.10.0
2023-11-06 19:51:01,066:INFO:           evidently: 0.2.8
2023-11-06 19:51:01,066:INFO:               fugue: 0.8.6
2023-11-06 19:51:01,066:INFO:           streamlit: 1.26.0
2023-11-06 19:51:01,066:INFO:             prophet: Not installed
2023-11-06 19:51:01,066:INFO:None
2023-11-06 19:51:01,066:INFO:Set up data.
2023-11-06 19:51:01,075:INFO:Set up folding strategy.
2023-11-06 19:51:01,075:INFO:Set up train/test split.
2023-11-06 19:51:01,081:INFO:Set up index.
2023-11-06 19:51:01,081:INFO:Assigning column types.
2023-11-06 19:51:01,084:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-06 19:51:01,084:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,088:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,091:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,136:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,169:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,170:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-06 19:51:01,172:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-06 19:51:01,294:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,297:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,300:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,344:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,374:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,374:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-06 19:51:01,376:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-06 19:51:01,377:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-06 19:51:01,380:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,383:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,427:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,462:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,463:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-06 19:51:01,465:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-06 19:51:01,469:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,473:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,529:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,571:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,571:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-06 19:51:01,573:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-06 19:51:01,574:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-06 19:51:01,584:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,636:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,673:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,675:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-06 19:51:01,677:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-06 19:51:01,685:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,734:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,770:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,771:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-06 19:51:01,773:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-06 19:51:01,773:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-06 19:51:01,825:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,860:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,860:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-06 19:51:01,862:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-06 19:51:01,918:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,953:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-06 19:51:01,953:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-06 19:51:01,955:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-06 19:51:01,956:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-06 19:51:02,009:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 19:51:02,043:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-06 19:51:02,045:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-06 19:51:02,105:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-06 19:51:02,169:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-06 19:51:02,171:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-06 19:51:02,172:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-06 19:51:02,278:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-06 19:51:02,280:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-06 19:51:02,378:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-06 19:51:02,380:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-06 19:51:02,403:INFO:Preparing preprocessing pipeline...
2023-11-06 19:51:02,403:INFO:Set up simple imputation.
2023-11-06 19:51:02,408:INFO:Set up encoding of ordinal features.
2023-11-06 19:51:02,411:INFO:Set up encoding of categorical features.
2023-11-06 19:51:02,411:INFO:Set up removing multicollinearity.
2023-11-06 19:51:02,411:INFO:Set up feature normalization.
2023-11-06 19:51:02,957:INFO:Finished creating preprocessing pipeline.
2023-11-06 19:51:03,006:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\josec\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temp', 'hum', 'windspeed',
                                             'daylight_hours'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['season', 'hr', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'day'],
                                    transformer=SimpleImputer...
                 TransformerWrapper(include=['season', 'hr', 'weekday',
                                             'weathersit', 'day'],
                                    transformer=OneHotEncoder(cols=['season',
                                                                    'hr',
                                                                    'weekday',
                                                                    'weathersit',
                                                                    'day'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('normalize', TransformerWrapper(transformer=RobustScaler()))])
2023-11-06 19:51:03,006:INFO:Creating final display dataframe.
2023-11-06 19:51:03,446:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target               cnt
2                   Target type        Regression
3           Original data shape       (16510, 12)
4        Transformed data shape       (16510, 77)
5   Transformed train set shape       (13208, 77)
6    Transformed test set shape        (3302, 77)
7              Ordinal features                 2
8              Numeric features                 4
9          Categorical features                 7
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.9
18                    Normalize              True
19             Normalize method            robust
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              d49d
2023-11-06 19:51:03,532:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-06 19:51:03,534:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-06 19:51:03,620:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-06 19:51:03,622:INFO:Soft dependency imported: catboost: 1.2.2
2023-11-06 19:51:03,623:INFO:setup() successfully completed in 6.05s...............
2023-11-06 19:51:03,623:INFO:Initializing compare_models()
2023-11-06 19:51:03,623:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, include=None, fold=5, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-06 19:51:03,623:INFO:Checking exceptions
2023-11-06 19:51:03,625:INFO:Preparing display monitor
2023-11-06 19:51:03,650:INFO:Initializing Linear Regression
2023-11-06 19:51:03,650:INFO:Total runtime is 0.0 minutes
2023-11-06 19:51:03,654:INFO:SubProcess create_model() called ==================================
2023-11-06 19:51:03,655:INFO:Initializing create_model()
2023-11-06 19:51:03,655:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=lr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:51:03,655:INFO:Checking exceptions
2023-11-06 19:51:03,655:INFO:Importing libraries
2023-11-06 19:51:03,655:INFO:Copying training dataset
2023-11-06 19:51:03,661:INFO:Defining folds
2023-11-06 19:51:03,661:INFO:Declaring metric variables
2023-11-06 19:51:03,665:INFO:Importing untrained model
2023-11-06 19:51:03,668:INFO:Linear Regression Imported successfully
2023-11-06 19:51:03,676:INFO:Starting cross validation
2023-11-06 19:51:03,689:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:51:22,298:INFO:Calculating mean and std
2023-11-06 19:51:22,302:INFO:Creating metrics dataframe
2023-11-06 19:51:22,323:INFO:Uploading results into container
2023-11-06 19:51:22,327:INFO:Uploading model into container now
2023-11-06 19:51:22,329:INFO:_master_model_container: 1
2023-11-06 19:51:22,329:INFO:_display_container: 2
2023-11-06 19:51:22,330:INFO:LinearRegression(n_jobs=-1)
2023-11-06 19:51:22,330:INFO:create_model() successfully completed......................................
2023-11-06 19:51:22,667:INFO:SubProcess create_model() end ==================================
2023-11-06 19:51:22,667:INFO:Creating metrics dataframe
2023-11-06 19:51:22,698:INFO:Initializing Lasso Regression
2023-11-06 19:51:22,698:INFO:Total runtime is 0.31746666034062704 minutes
2023-11-06 19:51:22,707:INFO:SubProcess create_model() called ==================================
2023-11-06 19:51:22,708:INFO:Initializing create_model()
2023-11-06 19:51:22,708:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=lasso, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:51:22,709:INFO:Checking exceptions
2023-11-06 19:51:22,709:INFO:Importing libraries
2023-11-06 19:51:22,709:INFO:Copying training dataset
2023-11-06 19:51:22,726:INFO:Defining folds
2023-11-06 19:51:22,727:INFO:Declaring metric variables
2023-11-06 19:51:22,737:INFO:Importing untrained model
2023-11-06 19:51:22,749:INFO:Lasso Regression Imported successfully
2023-11-06 19:51:22,773:INFO:Starting cross validation
2023-11-06 19:51:22,778:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:51:34,124:INFO:Calculating mean and std
2023-11-06 19:51:34,129:INFO:Creating metrics dataframe
2023-11-06 19:51:34,143:INFO:Uploading results into container
2023-11-06 19:51:34,147:INFO:Uploading model into container now
2023-11-06 19:51:34,149:INFO:_master_model_container: 2
2023-11-06 19:51:34,149:INFO:_display_container: 2
2023-11-06 19:51:34,150:INFO:Lasso(random_state=123)
2023-11-06 19:51:34,150:INFO:create_model() successfully completed......................................
2023-11-06 19:51:34,405:INFO:SubProcess create_model() end ==================================
2023-11-06 19:51:34,406:INFO:Creating metrics dataframe
2023-11-06 19:51:34,423:INFO:Initializing Ridge Regression
2023-11-06 19:51:34,423:INFO:Total runtime is 0.5128727992375692 minutes
2023-11-06 19:51:34,431:INFO:SubProcess create_model() called ==================================
2023-11-06 19:51:34,431:INFO:Initializing create_model()
2023-11-06 19:51:34,431:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=ridge, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:51:34,431:INFO:Checking exceptions
2023-11-06 19:51:34,431:INFO:Importing libraries
2023-11-06 19:51:34,431:INFO:Copying training dataset
2023-11-06 19:51:34,446:INFO:Defining folds
2023-11-06 19:51:34,446:INFO:Declaring metric variables
2023-11-06 19:51:34,453:INFO:Importing untrained model
2023-11-06 19:51:34,462:INFO:Ridge Regression Imported successfully
2023-11-06 19:51:34,488:INFO:Starting cross validation
2023-11-06 19:51:34,493:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:51:42,462:INFO:Calculating mean and std
2023-11-06 19:51:42,466:INFO:Creating metrics dataframe
2023-11-06 19:51:42,482:INFO:Uploading results into container
2023-11-06 19:51:42,484:INFO:Uploading model into container now
2023-11-06 19:51:42,486:INFO:_master_model_container: 3
2023-11-06 19:51:42,486:INFO:_display_container: 2
2023-11-06 19:51:42,487:INFO:Ridge(random_state=123)
2023-11-06 19:51:42,487:INFO:create_model() successfully completed......................................
2023-11-06 19:51:42,726:INFO:SubProcess create_model() end ==================================
2023-11-06 19:51:42,726:INFO:Creating metrics dataframe
2023-11-06 19:51:42,743:INFO:Initializing Elastic Net
2023-11-06 19:51:42,743:INFO:Total runtime is 0.6515478571256003 minutes
2023-11-06 19:51:42,743:INFO:SubProcess create_model() called ==================================
2023-11-06 19:51:42,743:INFO:Initializing create_model()
2023-11-06 19:51:42,743:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=en, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:51:42,743:INFO:Checking exceptions
2023-11-06 19:51:42,743:INFO:Importing libraries
2023-11-06 19:51:42,743:INFO:Copying training dataset
2023-11-06 19:51:42,766:INFO:Defining folds
2023-11-06 19:51:42,766:INFO:Declaring metric variables
2023-11-06 19:51:42,777:INFO:Importing untrained model
2023-11-06 19:51:42,778:INFO:Elastic Net Imported successfully
2023-11-06 19:51:42,812:INFO:Starting cross validation
2023-11-06 19:51:42,812:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:51:44,535:INFO:Calculating mean and std
2023-11-06 19:51:44,537:INFO:Creating metrics dataframe
2023-11-06 19:51:44,545:INFO:Uploading results into container
2023-11-06 19:51:44,547:INFO:Uploading model into container now
2023-11-06 19:51:44,547:INFO:_master_model_container: 4
2023-11-06 19:51:44,548:INFO:_display_container: 2
2023-11-06 19:51:44,549:INFO:ElasticNet(random_state=123)
2023-11-06 19:51:44,549:INFO:create_model() successfully completed......................................
2023-11-06 19:51:44,781:INFO:SubProcess create_model() end ==================================
2023-11-06 19:51:44,782:INFO:Creating metrics dataframe
2023-11-06 19:51:44,807:INFO:Initializing Least Angle Regression
2023-11-06 19:51:44,807:INFO:Total runtime is 0.6859419782956442 minutes
2023-11-06 19:51:44,815:INFO:SubProcess create_model() called ==================================
2023-11-06 19:51:44,819:INFO:Initializing create_model()
2023-11-06 19:51:44,820:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=lar, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:51:44,821:INFO:Checking exceptions
2023-11-06 19:51:44,821:INFO:Importing libraries
2023-11-06 19:51:44,822:INFO:Copying training dataset
2023-11-06 19:51:44,842:INFO:Defining folds
2023-11-06 19:51:44,843:INFO:Declaring metric variables
2023-11-06 19:51:44,862:INFO:Importing untrained model
2023-11-06 19:51:44,883:INFO:Least Angle Regression Imported successfully
2023-11-06 19:51:44,917:INFO:Starting cross validation
2023-11-06 19:51:44,927:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:51:46,924:INFO:Calculating mean and std
2023-11-06 19:51:46,924:INFO:Creating metrics dataframe
2023-11-06 19:51:46,924:INFO:Uploading results into container
2023-11-06 19:51:46,924:INFO:Uploading model into container now
2023-11-06 19:51:46,924:INFO:_master_model_container: 5
2023-11-06 19:51:46,924:INFO:_display_container: 2
2023-11-06 19:51:46,924:INFO:Lars(random_state=123)
2023-11-06 19:51:46,924:INFO:create_model() successfully completed......................................
2023-11-06 19:51:47,139:INFO:SubProcess create_model() end ==================================
2023-11-06 19:51:47,140:INFO:Creating metrics dataframe
2023-11-06 19:51:47,157:INFO:Initializing Lasso Least Angle Regression
2023-11-06 19:51:47,157:INFO:Total runtime is 0.7251144647598268 minutes
2023-11-06 19:51:47,173:INFO:SubProcess create_model() called ==================================
2023-11-06 19:51:47,173:INFO:Initializing create_model()
2023-11-06 19:51:47,173:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=llar, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:51:47,173:INFO:Checking exceptions
2023-11-06 19:51:47,176:INFO:Importing libraries
2023-11-06 19:51:47,176:INFO:Copying training dataset
2023-11-06 19:51:47,189:INFO:Defining folds
2023-11-06 19:51:47,189:INFO:Declaring metric variables
2023-11-06 19:51:47,209:INFO:Importing untrained model
2023-11-06 19:51:47,220:INFO:Lasso Least Angle Regression Imported successfully
2023-11-06 19:51:47,236:INFO:Starting cross validation
2023-11-06 19:51:47,236:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:51:48,587:INFO:Calculating mean and std
2023-11-06 19:51:48,589:INFO:Creating metrics dataframe
2023-11-06 19:51:48,589:INFO:Uploading results into container
2023-11-06 19:51:48,589:INFO:Uploading model into container now
2023-11-06 19:51:48,589:INFO:_master_model_container: 6
2023-11-06 19:51:48,589:INFO:_display_container: 2
2023-11-06 19:51:48,589:INFO:LassoLars(random_state=123)
2023-11-06 19:51:48,589:INFO:create_model() successfully completed......................................
2023-11-06 19:51:48,740:INFO:SubProcess create_model() end ==================================
2023-11-06 19:51:48,740:INFO:Creating metrics dataframe
2023-11-06 19:51:48,759:INFO:Initializing Orthogonal Matching Pursuit
2023-11-06 19:51:48,759:INFO:Total runtime is 0.7518078009287518 minutes
2023-11-06 19:51:48,759:INFO:SubProcess create_model() called ==================================
2023-11-06 19:51:48,759:INFO:Initializing create_model()
2023-11-06 19:51:48,774:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=omp, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:51:48,775:INFO:Checking exceptions
2023-11-06 19:51:48,775:INFO:Importing libraries
2023-11-06 19:51:48,775:INFO:Copying training dataset
2023-11-06 19:51:48,790:INFO:Defining folds
2023-11-06 19:51:48,790:INFO:Declaring metric variables
2023-11-06 19:51:48,811:INFO:Importing untrained model
2023-11-06 19:51:48,822:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-06 19:51:48,838:INFO:Starting cross validation
2023-11-06 19:51:48,853:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:51:50,059:INFO:Calculating mean and std
2023-11-06 19:51:50,062:INFO:Creating metrics dataframe
2023-11-06 19:51:50,068:INFO:Uploading results into container
2023-11-06 19:51:50,069:INFO:Uploading model into container now
2023-11-06 19:51:50,070:INFO:_master_model_container: 7
2023-11-06 19:51:50,071:INFO:_display_container: 2
2023-11-06 19:51:50,071:INFO:OrthogonalMatchingPursuit()
2023-11-06 19:51:50,072:INFO:create_model() successfully completed......................................
2023-11-06 19:51:50,233:INFO:SubProcess create_model() end ==================================
2023-11-06 19:51:50,233:INFO:Creating metrics dataframe
2023-11-06 19:51:50,265:INFO:Initializing Bayesian Ridge
2023-11-06 19:51:50,265:INFO:Total runtime is 0.7769054412841798 minutes
2023-11-06 19:51:50,270:INFO:SubProcess create_model() called ==================================
2023-11-06 19:51:50,270:INFO:Initializing create_model()
2023-11-06 19:51:50,271:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=br, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:51:50,271:INFO:Checking exceptions
2023-11-06 19:51:50,271:INFO:Importing libraries
2023-11-06 19:51:50,271:INFO:Copying training dataset
2023-11-06 19:51:50,282:INFO:Defining folds
2023-11-06 19:51:50,282:INFO:Declaring metric variables
2023-11-06 19:51:50,294:INFO:Importing untrained model
2023-11-06 19:51:50,297:INFO:Bayesian Ridge Imported successfully
2023-11-06 19:51:50,327:INFO:Starting cross validation
2023-11-06 19:51:50,331:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:51:52,068:INFO:Calculating mean and std
2023-11-06 19:51:52,070:INFO:Creating metrics dataframe
2023-11-06 19:51:52,077:INFO:Uploading results into container
2023-11-06 19:51:52,078:INFO:Uploading model into container now
2023-11-06 19:51:52,079:INFO:_master_model_container: 8
2023-11-06 19:51:52,079:INFO:_display_container: 2
2023-11-06 19:51:52,080:INFO:BayesianRidge()
2023-11-06 19:51:52,080:INFO:create_model() successfully completed......................................
2023-11-06 19:51:52,236:INFO:SubProcess create_model() end ==================================
2023-11-06 19:51:52,236:INFO:Creating metrics dataframe
2023-11-06 19:51:52,267:INFO:Initializing Passive Aggressive Regressor
2023-11-06 19:51:52,267:INFO:Total runtime is 0.8102764209111533 minutes
2023-11-06 19:51:52,283:INFO:SubProcess create_model() called ==================================
2023-11-06 19:51:52,284:INFO:Initializing create_model()
2023-11-06 19:51:52,284:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=par, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:51:52,284:INFO:Checking exceptions
2023-11-06 19:51:52,284:INFO:Importing libraries
2023-11-06 19:51:52,284:INFO:Copying training dataset
2023-11-06 19:51:52,311:INFO:Defining folds
2023-11-06 19:51:52,311:INFO:Declaring metric variables
2023-11-06 19:51:52,325:INFO:Importing untrained model
2023-11-06 19:51:52,329:INFO:Passive Aggressive Regressor Imported successfully
2023-11-06 19:51:52,365:INFO:Starting cross validation
2023-11-06 19:51:52,366:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:51:53,457:INFO:Calculating mean and std
2023-11-06 19:51:53,459:INFO:Creating metrics dataframe
2023-11-06 19:51:53,467:INFO:Uploading results into container
2023-11-06 19:51:53,469:INFO:Uploading model into container now
2023-11-06 19:51:53,470:INFO:_master_model_container: 9
2023-11-06 19:51:53,470:INFO:_display_container: 2
2023-11-06 19:51:53,471:INFO:PassiveAggressiveRegressor(random_state=123)
2023-11-06 19:51:53,471:INFO:create_model() successfully completed......................................
2023-11-06 19:51:53,660:INFO:SubProcess create_model() end ==================================
2023-11-06 19:51:53,661:INFO:Creating metrics dataframe
2023-11-06 19:51:53,675:INFO:Initializing Huber Regressor
2023-11-06 19:51:53,675:INFO:Total runtime is 0.8337478558222454 minutes
2023-11-06 19:51:53,675:INFO:SubProcess create_model() called ==================================
2023-11-06 19:51:53,675:INFO:Initializing create_model()
2023-11-06 19:51:53,675:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=huber, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:51:53,675:INFO:Checking exceptions
2023-11-06 19:51:53,675:INFO:Importing libraries
2023-11-06 19:51:53,675:INFO:Copying training dataset
2023-11-06 19:51:53,691:INFO:Defining folds
2023-11-06 19:51:53,691:INFO:Declaring metric variables
2023-11-06 19:51:53,691:INFO:Importing untrained model
2023-11-06 19:51:53,707:INFO:Huber Regressor Imported successfully
2023-11-06 19:51:53,707:INFO:Starting cross validation
2023-11-06 19:51:53,725:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:51:56,536:INFO:Calculating mean and std
2023-11-06 19:51:56,537:INFO:Creating metrics dataframe
2023-11-06 19:51:56,543:INFO:Uploading results into container
2023-11-06 19:51:56,544:INFO:Uploading model into container now
2023-11-06 19:51:56,545:INFO:_master_model_container: 10
2023-11-06 19:51:56,545:INFO:_display_container: 2
2023-11-06 19:51:56,545:INFO:HuberRegressor()
2023-11-06 19:51:56,546:INFO:create_model() successfully completed......................................
2023-11-06 19:51:56,712:INFO:SubProcess create_model() end ==================================
2023-11-06 19:51:56,712:INFO:Creating metrics dataframe
2023-11-06 19:51:56,734:INFO:Initializing K Neighbors Regressor
2023-11-06 19:51:56,735:INFO:Total runtime is 0.8847304503122967 minutes
2023-11-06 19:51:56,754:INFO:SubProcess create_model() called ==================================
2023-11-06 19:51:56,756:INFO:Initializing create_model()
2023-11-06 19:51:56,756:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=knn, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:51:56,756:INFO:Checking exceptions
2023-11-06 19:51:56,756:INFO:Importing libraries
2023-11-06 19:51:56,756:INFO:Copying training dataset
2023-11-06 19:51:56,780:INFO:Defining folds
2023-11-06 19:51:56,781:INFO:Declaring metric variables
2023-11-06 19:51:56,796:INFO:Importing untrained model
2023-11-06 19:51:56,806:INFO:K Neighbors Regressor Imported successfully
2023-11-06 19:51:56,823:INFO:Starting cross validation
2023-11-06 19:51:56,827:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:51:59,392:INFO:Calculating mean and std
2023-11-06 19:51:59,393:INFO:Creating metrics dataframe
2023-11-06 19:51:59,405:INFO:Uploading results into container
2023-11-06 19:51:59,406:INFO:Uploading model into container now
2023-11-06 19:51:59,407:INFO:_master_model_container: 11
2023-11-06 19:51:59,407:INFO:_display_container: 2
2023-11-06 19:51:59,409:INFO:KNeighborsRegressor(n_jobs=-1)
2023-11-06 19:51:59,409:INFO:create_model() successfully completed......................................
2023-11-06 19:51:59,603:INFO:SubProcess create_model() end ==================================
2023-11-06 19:51:59,603:INFO:Creating metrics dataframe
2023-11-06 19:51:59,625:INFO:Initializing Decision Tree Regressor
2023-11-06 19:51:59,625:INFO:Total runtime is 0.9329146901766461 minutes
2023-11-06 19:51:59,625:INFO:SubProcess create_model() called ==================================
2023-11-06 19:51:59,625:INFO:Initializing create_model()
2023-11-06 19:51:59,625:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=dt, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:51:59,625:INFO:Checking exceptions
2023-11-06 19:51:59,625:INFO:Importing libraries
2023-11-06 19:51:59,625:INFO:Copying training dataset
2023-11-06 19:51:59,641:INFO:Defining folds
2023-11-06 19:51:59,641:INFO:Declaring metric variables
2023-11-06 19:51:59,641:INFO:Importing untrained model
2023-11-06 19:51:59,656:INFO:Decision Tree Regressor Imported successfully
2023-11-06 19:51:59,671:INFO:Starting cross validation
2023-11-06 19:51:59,674:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:52:01,225:INFO:Calculating mean and std
2023-11-06 19:52:01,227:INFO:Creating metrics dataframe
2023-11-06 19:52:01,228:INFO:Uploading results into container
2023-11-06 19:52:01,228:INFO:Uploading model into container now
2023-11-06 19:52:01,228:INFO:_master_model_container: 12
2023-11-06 19:52:01,228:INFO:_display_container: 2
2023-11-06 19:52:01,228:INFO:DecisionTreeRegressor(random_state=123)
2023-11-06 19:52:01,228:INFO:create_model() successfully completed......................................
2023-11-06 19:52:01,420:INFO:SubProcess create_model() end ==================================
2023-11-06 19:52:01,420:INFO:Creating metrics dataframe
2023-11-06 19:52:01,436:INFO:Initializing Random Forest Regressor
2023-11-06 19:52:01,436:INFO:Total runtime is 0.9630942463874819 minutes
2023-11-06 19:52:01,436:INFO:SubProcess create_model() called ==================================
2023-11-06 19:52:01,436:INFO:Initializing create_model()
2023-11-06 19:52:01,436:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=rf, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:52:01,436:INFO:Checking exceptions
2023-11-06 19:52:01,436:INFO:Importing libraries
2023-11-06 19:52:01,436:INFO:Copying training dataset
2023-11-06 19:52:01,452:INFO:Defining folds
2023-11-06 19:52:01,452:INFO:Declaring metric variables
2023-11-06 19:52:01,452:INFO:Importing untrained model
2023-11-06 19:52:01,468:INFO:Random Forest Regressor Imported successfully
2023-11-06 19:52:01,486:INFO:Starting cross validation
2023-11-06 19:52:01,486:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:52:18,208:INFO:Calculating mean and std
2023-11-06 19:52:18,209:INFO:Creating metrics dataframe
2023-11-06 19:52:18,220:INFO:Uploading results into container
2023-11-06 19:52:18,220:INFO:Uploading model into container now
2023-11-06 19:52:18,225:INFO:_master_model_container: 13
2023-11-06 19:52:18,226:INFO:_display_container: 2
2023-11-06 19:52:18,226:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-11-06 19:52:18,226:INFO:create_model() successfully completed......................................
2023-11-06 19:52:18,450:INFO:SubProcess create_model() end ==================================
2023-11-06 19:52:18,450:INFO:Creating metrics dataframe
2023-11-06 19:52:18,481:INFO:Initializing Extra Trees Regressor
2023-11-06 19:52:18,481:INFO:Total runtime is 1.2471800287564596 minutes
2023-11-06 19:52:18,499:INFO:SubProcess create_model() called ==================================
2023-11-06 19:52:18,499:INFO:Initializing create_model()
2023-11-06 19:52:18,499:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=et, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:52:18,499:INFO:Checking exceptions
2023-11-06 19:52:18,499:INFO:Importing libraries
2023-11-06 19:52:18,499:INFO:Copying training dataset
2023-11-06 19:52:18,513:INFO:Defining folds
2023-11-06 19:52:18,513:INFO:Declaring metric variables
2023-11-06 19:52:18,528:INFO:Importing untrained model
2023-11-06 19:52:18,547:INFO:Extra Trees Regressor Imported successfully
2023-11-06 19:52:18,577:INFO:Starting cross validation
2023-11-06 19:52:18,582:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:52:35,778:INFO:Calculating mean and std
2023-11-06 19:52:35,778:INFO:Creating metrics dataframe
2023-11-06 19:52:35,778:INFO:Uploading results into container
2023-11-06 19:52:35,794:INFO:Uploading model into container now
2023-11-06 19:52:35,794:INFO:_master_model_container: 14
2023-11-06 19:52:35,794:INFO:_display_container: 2
2023-11-06 19:52:35,794:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-11-06 19:52:35,794:INFO:create_model() successfully completed......................................
2023-11-06 19:52:35,951:INFO:SubProcess create_model() end ==================================
2023-11-06 19:52:35,951:INFO:Creating metrics dataframe
2023-11-06 19:52:35,999:INFO:Initializing AdaBoost Regressor
2023-11-06 19:52:35,999:INFO:Total runtime is 1.5391401966412863 minutes
2023-11-06 19:52:35,999:INFO:SubProcess create_model() called ==================================
2023-11-06 19:52:36,014:INFO:Initializing create_model()
2023-11-06 19:52:36,014:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=ada, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:52:36,014:INFO:Checking exceptions
2023-11-06 19:52:36,014:INFO:Importing libraries
2023-11-06 19:52:36,014:INFO:Copying training dataset
2023-11-06 19:52:36,033:INFO:Defining folds
2023-11-06 19:52:36,033:INFO:Declaring metric variables
2023-11-06 19:52:36,050:INFO:Importing untrained model
2023-11-06 19:52:36,056:INFO:AdaBoost Regressor Imported successfully
2023-11-06 19:52:36,075:INFO:Starting cross validation
2023-11-06 19:52:36,075:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:52:40,616:INFO:Calculating mean and std
2023-11-06 19:52:40,618:INFO:Creating metrics dataframe
2023-11-06 19:52:40,623:INFO:Uploading results into container
2023-11-06 19:52:40,624:INFO:Uploading model into container now
2023-11-06 19:52:40,624:INFO:_master_model_container: 15
2023-11-06 19:52:40,625:INFO:_display_container: 2
2023-11-06 19:52:40,625:INFO:AdaBoostRegressor(random_state=123)
2023-11-06 19:52:40,625:INFO:create_model() successfully completed......................................
2023-11-06 19:52:40,796:INFO:SubProcess create_model() end ==================================
2023-11-06 19:52:40,797:INFO:Creating metrics dataframe
2023-11-06 19:52:40,824:INFO:Initializing Gradient Boosting Regressor
2023-11-06 19:52:40,825:INFO:Total runtime is 1.6195826212565105 minutes
2023-11-06 19:52:40,842:INFO:SubProcess create_model() called ==================================
2023-11-06 19:52:40,842:INFO:Initializing create_model()
2023-11-06 19:52:40,843:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=gbr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:52:40,843:INFO:Checking exceptions
2023-11-06 19:52:40,843:INFO:Importing libraries
2023-11-06 19:52:40,843:INFO:Copying training dataset
2023-11-06 19:52:40,857:INFO:Defining folds
2023-11-06 19:52:40,859:INFO:Declaring metric variables
2023-11-06 19:52:40,878:INFO:Importing untrained model
2023-11-06 19:52:40,895:INFO:Gradient Boosting Regressor Imported successfully
2023-11-06 19:52:40,925:INFO:Starting cross validation
2023-11-06 19:52:40,925:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:52:44,875:INFO:Calculating mean and std
2023-11-06 19:52:44,875:INFO:Creating metrics dataframe
2023-11-06 19:52:44,884:INFO:Uploading results into container
2023-11-06 19:52:44,884:INFO:Uploading model into container now
2023-11-06 19:52:44,884:INFO:_master_model_container: 16
2023-11-06 19:52:44,884:INFO:_display_container: 2
2023-11-06 19:52:44,884:INFO:GradientBoostingRegressor(random_state=123)
2023-11-06 19:52:44,884:INFO:create_model() successfully completed......................................
2023-11-06 19:52:45,033:INFO:SubProcess create_model() end ==================================
2023-11-06 19:52:45,033:INFO:Creating metrics dataframe
2023-11-06 19:52:45,049:INFO:Initializing Extreme Gradient Boosting
2023-11-06 19:52:45,049:INFO:Total runtime is 1.689978873729706 minutes
2023-11-06 19:52:45,065:INFO:SubProcess create_model() called ==================================
2023-11-06 19:52:45,065:INFO:Initializing create_model()
2023-11-06 19:52:45,065:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=xgboost, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:52:45,065:INFO:Checking exceptions
2023-11-06 19:52:45,065:INFO:Importing libraries
2023-11-06 19:52:45,065:INFO:Copying training dataset
2023-11-06 19:52:45,080:INFO:Defining folds
2023-11-06 19:52:45,080:INFO:Declaring metric variables
2023-11-06 19:52:45,080:INFO:Importing untrained model
2023-11-06 19:52:45,098:INFO:Extreme Gradient Boosting Imported successfully
2023-11-06 19:52:45,120:INFO:Starting cross validation
2023-11-06 19:52:45,125:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:52:46,617:INFO:Calculating mean and std
2023-11-06 19:52:46,617:INFO:Creating metrics dataframe
2023-11-06 19:52:46,617:INFO:Uploading results into container
2023-11-06 19:52:46,617:INFO:Uploading model into container now
2023-11-06 19:52:46,617:INFO:_master_model_container: 17
2023-11-06 19:52:46,617:INFO:_display_container: 2
2023-11-06 19:52:46,617:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=123, ...)
2023-11-06 19:52:46,617:INFO:create_model() successfully completed......................................
2023-11-06 19:52:46,788:INFO:SubProcess create_model() end ==================================
2023-11-06 19:52:46,788:INFO:Creating metrics dataframe
2023-11-06 19:52:46,804:INFO:Initializing Light Gradient Boosting Machine
2023-11-06 19:52:46,804:INFO:Total runtime is 1.7192313432693482 minutes
2023-11-06 19:52:46,804:INFO:SubProcess create_model() called ==================================
2023-11-06 19:52:46,820:INFO:Initializing create_model()
2023-11-06 19:52:46,820:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:52:46,820:INFO:Checking exceptions
2023-11-06 19:52:46,820:INFO:Importing libraries
2023-11-06 19:52:46,820:INFO:Copying training dataset
2023-11-06 19:52:46,820:INFO:Defining folds
2023-11-06 19:52:46,820:INFO:Declaring metric variables
2023-11-06 19:52:46,835:INFO:Importing untrained model
2023-11-06 19:52:46,835:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-06 19:52:46,871:INFO:Starting cross validation
2023-11-06 19:52:46,871:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:52:49,905:INFO:Calculating mean and std
2023-11-06 19:52:49,907:INFO:Creating metrics dataframe
2023-11-06 19:52:49,907:INFO:Uploading results into container
2023-11-06 19:52:49,907:INFO:Uploading model into container now
2023-11-06 19:52:49,907:INFO:_master_model_container: 18
2023-11-06 19:52:49,907:INFO:_display_container: 2
2023-11-06 19:52:49,907:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2023-11-06 19:52:49,907:INFO:create_model() successfully completed......................................
2023-11-06 19:52:50,131:INFO:SubProcess create_model() end ==================================
2023-11-06 19:52:50,131:INFO:Creating metrics dataframe
2023-11-06 19:52:50,161:INFO:Initializing CatBoost Regressor
2023-11-06 19:52:50,161:INFO:Total runtime is 1.775181794166565 minutes
2023-11-06 19:52:50,161:INFO:SubProcess create_model() called ==================================
2023-11-06 19:52:50,161:INFO:Initializing create_model()
2023-11-06 19:52:50,161:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=catboost, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:52:50,161:INFO:Checking exceptions
2023-11-06 19:52:50,161:INFO:Importing libraries
2023-11-06 19:52:50,161:INFO:Copying training dataset
2023-11-06 19:52:50,179:INFO:Defining folds
2023-11-06 19:52:50,179:INFO:Declaring metric variables
2023-11-06 19:52:50,179:INFO:Importing untrained model
2023-11-06 19:52:50,196:INFO:CatBoost Regressor Imported successfully
2023-11-06 19:52:50,214:INFO:Starting cross validation
2023-11-06 19:52:50,231:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:53:04,313:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\model_selection\_validation.py:378: FitFailedWarning:


2 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 267, in fit
    fitted_estimator = self._memory_fit(
  File "C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\catboost\core.py", line 5703, in fit
    return self._fit(X, y, cat_features, text_features, embedding_features, None, sample_weight, None, None, None, None, baseline,
  File "C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\catboost\core.py", line 2319, in _fit
    self._train(
  File "C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\catboost\core.py", line 1723, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 4645, in _catboost._CatBoost._train
  File "_catboost.pyx", line 4694, in _catboost._CatBoost._train
_catboost.CatBoostError: C:/Go_Agent/pipelines/BuildMaster/catboost.git/catboost/libs/train_lib/dir_helper.cpp:20: Can't create train working dir: catboost_info



2023-11-06 19:53:04,313:INFO:Calculating mean and std
2023-11-06 19:53:04,313:INFO:Creating metrics dataframe
2023-11-06 19:53:04,313:INFO:Uploading results into container
2023-11-06 19:53:04,313:INFO:Uploading model into container now
2023-11-06 19:53:04,330:INFO:_master_model_container: 19
2023-11-06 19:53:04,330:INFO:_display_container: 2
2023-11-06 19:53:04,330:INFO:<catboost.core.CatBoostRegressor object at 0x00000162DD66B430>
2023-11-06 19:53:04,330:INFO:create_model() successfully completed......................................
2023-11-06 19:53:04,572:INFO:SubProcess create_model() end ==================================
2023-11-06 19:53:04,572:INFO:Creating metrics dataframe
2023-11-06 19:53:04,600:INFO:Initializing Dummy Regressor
2023-11-06 19:53:04,600:INFO:Total runtime is 2.0158372203509014 minutes
2023-11-06 19:53:04,622:INFO:SubProcess create_model() called ==================================
2023-11-06 19:53:04,622:INFO:Initializing create_model()
2023-11-06 19:53:04,622:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=dummy, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162DCDB84F0>, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:53:04,622:INFO:Checking exceptions
2023-11-06 19:53:04,622:INFO:Importing libraries
2023-11-06 19:53:04,622:INFO:Copying training dataset
2023-11-06 19:53:04,632:INFO:Defining folds
2023-11-06 19:53:04,632:INFO:Declaring metric variables
2023-11-06 19:53:04,652:INFO:Importing untrained model
2023-11-06 19:53:04,663:INFO:Dummy Regressor Imported successfully
2023-11-06 19:53:04,698:INFO:Starting cross validation
2023-11-06 19:53:04,703:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-06 19:53:06,423:INFO:Calculating mean and std
2023-11-06 19:53:06,423:INFO:Creating metrics dataframe
2023-11-06 19:53:06,439:INFO:Uploading results into container
2023-11-06 19:53:06,439:INFO:Uploading model into container now
2023-11-06 19:53:06,439:INFO:_master_model_container: 20
2023-11-06 19:53:06,439:INFO:_display_container: 2
2023-11-06 19:53:06,439:INFO:DummyRegressor()
2023-11-06 19:53:06,439:INFO:create_model() successfully completed......................................
2023-11-06 19:53:06,644:INFO:SubProcess create_model() end ==================================
2023-11-06 19:53:06,644:INFO:Creating metrics dataframe
2023-11-06 19:53:06,691:INFO:Initializing create_model()
2023-11-06 19:53:06,706:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000162D63AD030>, estimator=<catboost.core.CatBoostRegressor object at 0x00000162DD66B430>, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-06 19:53:06,706:INFO:Checking exceptions
2023-11-06 19:53:06,706:INFO:Importing libraries
2023-11-06 19:53:06,706:INFO:Copying training dataset
2023-11-06 19:53:06,722:INFO:Defining folds
2023-11-06 19:53:06,722:INFO:Declaring metric variables
2023-11-06 19:53:06,722:INFO:Importing untrained model
2023-11-06 19:53:06,722:INFO:Declaring custom model
2023-11-06 19:53:06,722:INFO:CatBoost Regressor Imported successfully
2023-11-06 19:53:06,732:INFO:Cross validation set to False
2023-11-06 19:53:06,732:INFO:Fitting Model
2023-11-06 19:53:15,660:INFO:<catboost.core.CatBoostRegressor object at 0x00000162DCDB9FC0>
2023-11-06 19:53:15,660:INFO:create_model() successfully completed......................................
2023-11-06 19:53:15,922:INFO:_master_model_container: 20
2023-11-06 19:53:15,922:INFO:_display_container: 2
2023-11-06 19:53:15,922:INFO:<catboost.core.CatBoostRegressor object at 0x00000162DCDB9FC0>
2023-11-06 19:53:15,922:INFO:compare_models() successfully completed......................................
2023-11-06 20:10:02,249:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_db1df4a7cf7a47618ef330acf4eb1a79


2023-11-06 20:10:02,251:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7747faa053e94767add0f6c37b9ee265_f66d0d8cc5da4f8f8388ef2ec717dd30


2023-11-06 20:10:02,251:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_084b1cb027744cee9df5006ce7effa5f


2023-11-06 20:10:02,251:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_15781d0e70fb4aedb2684b6ed1fda29d_afc2058c7932496a9578f27541cc6f0a


2023-11-06 20:10:02,251:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_2b8c247a1384450ab2b289dcb503d5b5


2023-11-06 20:10:02,251:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_ef994e13c3414bce8ed37e074b973e64_99ca6ec2bdb34c93b1b294c39904d9b4


2023-11-06 20:10:02,251:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_3f9651157d22456787c44c5026e29d42


2023-11-06 20:10:02,251:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_a453340c6c9b4827ac20a1c6200262c6_d97b272af9214c0995659855ce97432f


2023-11-06 20:10:02,251:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_472d9ef58e7846a8a758ec80fd1a25b0


2023-11-06 20:10:02,251:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_01f3c3bdf6704f4bbe3e751baafbf955_23d5d4a2f7fb4e60bd3ed36c406396a8


2023-11-06 20:10:02,251:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_6a519ec397ca491b81a1cab1ffab873f


2023-11-06 20:10:02,251:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_d88f1f007e7345e9b97bb5fe75956bce_72be0233437c4a33b80d9f1b9b28bf29


2023-11-06 20:10:02,251:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_2517eeedd9264d439e1084f2fe0bf99a


2023-11-06 20:10:02,251:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_e6bfc16e280a4c78ad9e508ee3ff1d43_745799232097449aa9f116df2e8cef26


2023-11-06 20:10:02,251:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_38d65161ffe24451bf9c4b396ee79938


2023-11-06 20:10:02,251:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_4d1df0aad9674cce84e654380b463f43_c4801a9d01814f4986655d3cd443a409


2023-11-06 20:10:02,251:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_5e05d5d0fa8f4cecbbeb9cf2de7df845


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_908309b39d9f4088899f603f497386ec_5551fe36f878485b974bf1a0d277899e


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_1b48270a59e64ba8b6d8a5e8c29da2e9


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_2a9269681a2e4ceeb46a9ccfb3f389cb_4e58e246595e4de8bf2ae704726d7f27


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_3c1c9e563d0943a2a57351971d1f928a


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_1d28110ffb5d4aa898ad7603360db0b6_e5de62eac2874487b9930be7d20fa928


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_1813bbc217ca4773919722d893abadc2


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_837cbb678e844f2884f70d9b4d8d001f_3ccaa5566f8a4356b93a3a11d9bd089b


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_b465189c0321447d812bf75d6bacb7db


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7f91e76f9e64403392bb83416d36e1a5_f2b743d42c9946888f68cc2f2872b15f


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_e6391d7336de4fb2a11186b04be18e53


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_d47e84fa43ed47cb8b0d35e2a197ca37_06e4b28bf9a443dcb234b164d06ff6f8


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_b4dde244c17246709de6b3c64531b082


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_4dff17f0b0e2422790b9930f92337a30_87663d5af2a1432b96af76158a24d8b8


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_aec2ba69f6814b03901bea50b111c186


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_d52bceb5567a4d029305a3188fa86a64_0b8b97bdb2ef4596b3eb4c2f57f88dac


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_c95b3d3359c145339dca6554d2b5b0ae


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_3aca6392365c46ec9037edaf21cbd51c_2f52b69ec20b4ce9a9e44261f711ae7b


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_2b0f3de7a5b04fbdb6fc25073639f337


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_31a316bda2b847b3a8947b031f54b62b_5943f1c07914484cb19bb93e03a28fc0


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_4af66bc20f664364bdadfd3331ce8789


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_8e28a5d367904b7da37737b9c69852d5_0cfe8e10eddc42c68f2f04f62ea2a675


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_ce7f3e5f8392491aa128f58bdeeaa6bd


2023-11-06 20:10:02,257:WARNING:C:\Users\josec\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning:

Failed to delete temporary folder: C:\Users\josec\AppData\Local\Temp\joblib_memmapping_folder_7212_7822dac10ec543c8945dc77b257be6e0_6f776a890b6c4f7b9a9f3299d98f0c74


